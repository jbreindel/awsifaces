// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/route53"
)

// Route53Client ...
type Route53Client interface {
	Options() route53.Options
	ActivateKeySigningKey(ctx context.Context, params *route53.ActivateKeySigningKeyInput, optFns ...func(*route53.Options)) (*route53.ActivateKeySigningKeyOutput, error)
	AssociateVPCWithHostedZone(ctx context.Context, params *route53.AssociateVPCWithHostedZoneInput, optFns ...func(*route53.Options)) (*route53.AssociateVPCWithHostedZoneOutput, error)
	ChangeCidrCollection(ctx context.Context, params *route53.ChangeCidrCollectionInput, optFns ...func(*route53.Options)) (*route53.ChangeCidrCollectionOutput, error)
	ChangeResourceRecordSets(ctx context.Context, params *route53.ChangeResourceRecordSetsInput, optFns ...func(*route53.Options)) (*route53.ChangeResourceRecordSetsOutput, error)
	ChangeTagsForResource(ctx context.Context, params *route53.ChangeTagsForResourceInput, optFns ...func(*route53.Options)) (*route53.ChangeTagsForResourceOutput, error)
	CreateCidrCollection(ctx context.Context, params *route53.CreateCidrCollectionInput, optFns ...func(*route53.Options)) (*route53.CreateCidrCollectionOutput, error)
	CreateHealthCheck(ctx context.Context, params *route53.CreateHealthCheckInput, optFns ...func(*route53.Options)) (*route53.CreateHealthCheckOutput, error)
	CreateHostedZone(ctx context.Context, params *route53.CreateHostedZoneInput, optFns ...func(*route53.Options)) (*route53.CreateHostedZoneOutput, error)
	CreateKeySigningKey(ctx context.Context, params *route53.CreateKeySigningKeyInput, optFns ...func(*route53.Options)) (*route53.CreateKeySigningKeyOutput, error)
	CreateQueryLoggingConfig(ctx context.Context, params *route53.CreateQueryLoggingConfigInput, optFns ...func(*route53.Options)) (*route53.CreateQueryLoggingConfigOutput, error)
	CreateReusableDelegationSet(ctx context.Context, params *route53.CreateReusableDelegationSetInput, optFns ...func(*route53.Options)) (*route53.CreateReusableDelegationSetOutput, error)
	CreateTrafficPolicy(ctx context.Context, params *route53.CreateTrafficPolicyInput, optFns ...func(*route53.Options)) (*route53.CreateTrafficPolicyOutput, error)
	CreateTrafficPolicyInstance(ctx context.Context, params *route53.CreateTrafficPolicyInstanceInput, optFns ...func(*route53.Options)) (*route53.CreateTrafficPolicyInstanceOutput, error)
	CreateTrafficPolicyVersion(ctx context.Context, params *route53.CreateTrafficPolicyVersionInput, optFns ...func(*route53.Options)) (*route53.CreateTrafficPolicyVersionOutput, error)
	CreateVPCAssociationAuthorization(ctx context.Context, params *route53.CreateVPCAssociationAuthorizationInput, optFns ...func(*route53.Options)) (*route53.CreateVPCAssociationAuthorizationOutput, error)
	DeactivateKeySigningKey(ctx context.Context, params *route53.DeactivateKeySigningKeyInput, optFns ...func(*route53.Options)) (*route53.DeactivateKeySigningKeyOutput, error)
	DeleteCidrCollection(ctx context.Context, params *route53.DeleteCidrCollectionInput, optFns ...func(*route53.Options)) (*route53.DeleteCidrCollectionOutput, error)
	DeleteHealthCheck(ctx context.Context, params *route53.DeleteHealthCheckInput, optFns ...func(*route53.Options)) (*route53.DeleteHealthCheckOutput, error)
	DeleteHostedZone(ctx context.Context, params *route53.DeleteHostedZoneInput, optFns ...func(*route53.Options)) (*route53.DeleteHostedZoneOutput, error)
	DeleteKeySigningKey(ctx context.Context, params *route53.DeleteKeySigningKeyInput, optFns ...func(*route53.Options)) (*route53.DeleteKeySigningKeyOutput, error)
	DeleteQueryLoggingConfig(ctx context.Context, params *route53.DeleteQueryLoggingConfigInput, optFns ...func(*route53.Options)) (*route53.DeleteQueryLoggingConfigOutput, error)
	DeleteReusableDelegationSet(ctx context.Context, params *route53.DeleteReusableDelegationSetInput, optFns ...func(*route53.Options)) (*route53.DeleteReusableDelegationSetOutput, error)
	DeleteTrafficPolicy(ctx context.Context, params *route53.DeleteTrafficPolicyInput, optFns ...func(*route53.Options)) (*route53.DeleteTrafficPolicyOutput, error)
	DeleteTrafficPolicyInstance(ctx context.Context, params *route53.DeleteTrafficPolicyInstanceInput, optFns ...func(*route53.Options)) (*route53.DeleteTrafficPolicyInstanceOutput, error)
	DeleteVPCAssociationAuthorization(ctx context.Context, params *route53.DeleteVPCAssociationAuthorizationInput, optFns ...func(*route53.Options)) (*route53.DeleteVPCAssociationAuthorizationOutput, error)
	DisableHostedZoneDNSSEC(ctx context.Context, params *route53.DisableHostedZoneDNSSECInput, optFns ...func(*route53.Options)) (*route53.DisableHostedZoneDNSSECOutput, error)
	DisassociateVPCFromHostedZone(ctx context.Context, params *route53.DisassociateVPCFromHostedZoneInput, optFns ...func(*route53.Options)) (*route53.DisassociateVPCFromHostedZoneOutput, error)
	EnableHostedZoneDNSSEC(ctx context.Context, params *route53.EnableHostedZoneDNSSECInput, optFns ...func(*route53.Options)) (*route53.EnableHostedZoneDNSSECOutput, error)
	GetAccountLimit(ctx context.Context, params *route53.GetAccountLimitInput, optFns ...func(*route53.Options)) (*route53.GetAccountLimitOutput, error)
	GetChange(ctx context.Context, params *route53.GetChangeInput, optFns ...func(*route53.Options)) (*route53.GetChangeOutput, error)
	GetCheckerIpRanges(ctx context.Context, params *route53.GetCheckerIpRangesInput, optFns ...func(*route53.Options)) (*route53.GetCheckerIpRangesOutput, error)
	GetDNSSEC(ctx context.Context, params *route53.GetDNSSECInput, optFns ...func(*route53.Options)) (*route53.GetDNSSECOutput, error)
	GetGeoLocation(ctx context.Context, params *route53.GetGeoLocationInput, optFns ...func(*route53.Options)) (*route53.GetGeoLocationOutput, error)
	GetHealthCheck(ctx context.Context, params *route53.GetHealthCheckInput, optFns ...func(*route53.Options)) (*route53.GetHealthCheckOutput, error)
	GetHealthCheckCount(ctx context.Context, params *route53.GetHealthCheckCountInput, optFns ...func(*route53.Options)) (*route53.GetHealthCheckCountOutput, error)
	GetHealthCheckLastFailureReason(ctx context.Context, params *route53.GetHealthCheckLastFailureReasonInput, optFns ...func(*route53.Options)) (*route53.GetHealthCheckLastFailureReasonOutput, error)
	GetHealthCheckStatus(ctx context.Context, params *route53.GetHealthCheckStatusInput, optFns ...func(*route53.Options)) (*route53.GetHealthCheckStatusOutput, error)
	GetHostedZone(ctx context.Context, params *route53.GetHostedZoneInput, optFns ...func(*route53.Options)) (*route53.GetHostedZoneOutput, error)
	GetHostedZoneCount(ctx context.Context, params *route53.GetHostedZoneCountInput, optFns ...func(*route53.Options)) (*route53.GetHostedZoneCountOutput, error)
	GetHostedZoneLimit(ctx context.Context, params *route53.GetHostedZoneLimitInput, optFns ...func(*route53.Options)) (*route53.GetHostedZoneLimitOutput, error)
	GetQueryLoggingConfig(ctx context.Context, params *route53.GetQueryLoggingConfigInput, optFns ...func(*route53.Options)) (*route53.GetQueryLoggingConfigOutput, error)
	GetReusableDelegationSet(ctx context.Context, params *route53.GetReusableDelegationSetInput, optFns ...func(*route53.Options)) (*route53.GetReusableDelegationSetOutput, error)
	GetReusableDelegationSetLimit(ctx context.Context, params *route53.GetReusableDelegationSetLimitInput, optFns ...func(*route53.Options)) (*route53.GetReusableDelegationSetLimitOutput, error)
	GetTrafficPolicy(ctx context.Context, params *route53.GetTrafficPolicyInput, optFns ...func(*route53.Options)) (*route53.GetTrafficPolicyOutput, error)
	GetTrafficPolicyInstance(ctx context.Context, params *route53.GetTrafficPolicyInstanceInput, optFns ...func(*route53.Options)) (*route53.GetTrafficPolicyInstanceOutput, error)
	GetTrafficPolicyInstanceCount(ctx context.Context, params *route53.GetTrafficPolicyInstanceCountInput, optFns ...func(*route53.Options)) (*route53.GetTrafficPolicyInstanceCountOutput, error)
	ListCidrBlocks(ctx context.Context, params *route53.ListCidrBlocksInput, optFns ...func(*route53.Options)) (*route53.ListCidrBlocksOutput, error)
	ListCidrCollections(ctx context.Context, params *route53.ListCidrCollectionsInput, optFns ...func(*route53.Options)) (*route53.ListCidrCollectionsOutput, error)
	ListCidrLocations(ctx context.Context, params *route53.ListCidrLocationsInput, optFns ...func(*route53.Options)) (*route53.ListCidrLocationsOutput, error)
	ListGeoLocations(ctx context.Context, params *route53.ListGeoLocationsInput, optFns ...func(*route53.Options)) (*route53.ListGeoLocationsOutput, error)
	ListHealthChecks(ctx context.Context, params *route53.ListHealthChecksInput, optFns ...func(*route53.Options)) (*route53.ListHealthChecksOutput, error)
	ListHostedZones(ctx context.Context, params *route53.ListHostedZonesInput, optFns ...func(*route53.Options)) (*route53.ListHostedZonesOutput, error)
	ListHostedZonesByName(ctx context.Context, params *route53.ListHostedZonesByNameInput, optFns ...func(*route53.Options)) (*route53.ListHostedZonesByNameOutput, error)
	ListHostedZonesByVPC(ctx context.Context, params *route53.ListHostedZonesByVPCInput, optFns ...func(*route53.Options)) (*route53.ListHostedZonesByVPCOutput, error)
	ListQueryLoggingConfigs(ctx context.Context, params *route53.ListQueryLoggingConfigsInput, optFns ...func(*route53.Options)) (*route53.ListQueryLoggingConfigsOutput, error)
	ListResourceRecordSets(ctx context.Context, params *route53.ListResourceRecordSetsInput, optFns ...func(*route53.Options)) (*route53.ListResourceRecordSetsOutput, error)
	ListReusableDelegationSets(ctx context.Context, params *route53.ListReusableDelegationSetsInput, optFns ...func(*route53.Options)) (*route53.ListReusableDelegationSetsOutput, error)
	ListTagsForResource(ctx context.Context, params *route53.ListTagsForResourceInput, optFns ...func(*route53.Options)) (*route53.ListTagsForResourceOutput, error)
	ListTagsForResources(ctx context.Context, params *route53.ListTagsForResourcesInput, optFns ...func(*route53.Options)) (*route53.ListTagsForResourcesOutput, error)
	ListTrafficPolicies(ctx context.Context, params *route53.ListTrafficPoliciesInput, optFns ...func(*route53.Options)) (*route53.ListTrafficPoliciesOutput, error)
	ListTrafficPolicyInstances(ctx context.Context, params *route53.ListTrafficPolicyInstancesInput, optFns ...func(*route53.Options)) (*route53.ListTrafficPolicyInstancesOutput, error)
	ListTrafficPolicyInstancesByHostedZone(ctx context.Context, params *route53.ListTrafficPolicyInstancesByHostedZoneInput, optFns ...func(*route53.Options)) (*route53.ListTrafficPolicyInstancesByHostedZoneOutput, error)
	ListTrafficPolicyInstancesByPolicy(ctx context.Context, params *route53.ListTrafficPolicyInstancesByPolicyInput, optFns ...func(*route53.Options)) (*route53.ListTrafficPolicyInstancesByPolicyOutput, error)
	ListTrafficPolicyVersions(ctx context.Context, params *route53.ListTrafficPolicyVersionsInput, optFns ...func(*route53.Options)) (*route53.ListTrafficPolicyVersionsOutput, error)
	ListVPCAssociationAuthorizations(ctx context.Context, params *route53.ListVPCAssociationAuthorizationsInput, optFns ...func(*route53.Options)) (*route53.ListVPCAssociationAuthorizationsOutput, error)
	TestDNSAnswer(ctx context.Context, params *route53.TestDNSAnswerInput, optFns ...func(*route53.Options)) (*route53.TestDNSAnswerOutput, error)
	UpdateHealthCheck(ctx context.Context, params *route53.UpdateHealthCheckInput, optFns ...func(*route53.Options)) (*route53.UpdateHealthCheckOutput, error)
	UpdateHostedZoneComment(ctx context.Context, params *route53.UpdateHostedZoneCommentInput, optFns ...func(*route53.Options)) (*route53.UpdateHostedZoneCommentOutput, error)
	UpdateTrafficPolicyComment(ctx context.Context, params *route53.UpdateTrafficPolicyCommentInput, optFns ...func(*route53.Options)) (*route53.UpdateTrafficPolicyCommentOutput, error)
	UpdateTrafficPolicyInstance(ctx context.Context, params *route53.UpdateTrafficPolicyInstanceInput, optFns ...func(*route53.Options)) (*route53.UpdateTrafficPolicyInstanceOutput, error)
}
