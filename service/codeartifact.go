// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/codeartifact"
)

// CodeartifactClient ...
type CodeartifactClient interface {
	Options() codeartifact.Options
	AssociateExternalConnection(ctx context.Context, params *codeartifact.AssociateExternalConnectionInput, optFns ...func(*codeartifact.Options)) (*codeartifact.AssociateExternalConnectionOutput, error)
	CopyPackageVersions(ctx context.Context, params *codeartifact.CopyPackageVersionsInput, optFns ...func(*codeartifact.Options)) (*codeartifact.CopyPackageVersionsOutput, error)
	CreateDomain(ctx context.Context, params *codeartifact.CreateDomainInput, optFns ...func(*codeartifact.Options)) (*codeartifact.CreateDomainOutput, error)
	CreatePackageGroup(ctx context.Context, params *codeartifact.CreatePackageGroupInput, optFns ...func(*codeartifact.Options)) (*codeartifact.CreatePackageGroupOutput, error)
	CreateRepository(ctx context.Context, params *codeartifact.CreateRepositoryInput, optFns ...func(*codeartifact.Options)) (*codeartifact.CreateRepositoryOutput, error)
	DeleteDomain(ctx context.Context, params *codeartifact.DeleteDomainInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DeleteDomainOutput, error)
	DeleteDomainPermissionsPolicy(ctx context.Context, params *codeartifact.DeleteDomainPermissionsPolicyInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DeleteDomainPermissionsPolicyOutput, error)
	DeletePackage(ctx context.Context, params *codeartifact.DeletePackageInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DeletePackageOutput, error)
	DeletePackageGroup(ctx context.Context, params *codeartifact.DeletePackageGroupInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DeletePackageGroupOutput, error)
	DeletePackageVersions(ctx context.Context, params *codeartifact.DeletePackageVersionsInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DeletePackageVersionsOutput, error)
	DeleteRepository(ctx context.Context, params *codeartifact.DeleteRepositoryInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DeleteRepositoryOutput, error)
	DeleteRepositoryPermissionsPolicy(ctx context.Context, params *codeartifact.DeleteRepositoryPermissionsPolicyInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DeleteRepositoryPermissionsPolicyOutput, error)
	DescribeDomain(ctx context.Context, params *codeartifact.DescribeDomainInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DescribeDomainOutput, error)
	DescribePackage(ctx context.Context, params *codeartifact.DescribePackageInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DescribePackageOutput, error)
	DescribePackageGroup(ctx context.Context, params *codeartifact.DescribePackageGroupInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DescribePackageGroupOutput, error)
	DescribePackageVersion(ctx context.Context, params *codeartifact.DescribePackageVersionInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DescribePackageVersionOutput, error)
	DescribeRepository(ctx context.Context, params *codeartifact.DescribeRepositoryInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DescribeRepositoryOutput, error)
	DisassociateExternalConnection(ctx context.Context, params *codeartifact.DisassociateExternalConnectionInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DisassociateExternalConnectionOutput, error)
	DisposePackageVersions(ctx context.Context, params *codeartifact.DisposePackageVersionsInput, optFns ...func(*codeartifact.Options)) (*codeartifact.DisposePackageVersionsOutput, error)
	GetAssociatedPackageGroup(ctx context.Context, params *codeartifact.GetAssociatedPackageGroupInput, optFns ...func(*codeartifact.Options)) (*codeartifact.GetAssociatedPackageGroupOutput, error)
	GetAuthorizationToken(ctx context.Context, params *codeartifact.GetAuthorizationTokenInput, optFns ...func(*codeartifact.Options)) (*codeartifact.GetAuthorizationTokenOutput, error)
	GetDomainPermissionsPolicy(ctx context.Context, params *codeartifact.GetDomainPermissionsPolicyInput, optFns ...func(*codeartifact.Options)) (*codeartifact.GetDomainPermissionsPolicyOutput, error)
	GetPackageVersionAsset(ctx context.Context, params *codeartifact.GetPackageVersionAssetInput, optFns ...func(*codeartifact.Options)) (*codeartifact.GetPackageVersionAssetOutput, error)
	GetPackageVersionReadme(ctx context.Context, params *codeartifact.GetPackageVersionReadmeInput, optFns ...func(*codeartifact.Options)) (*codeartifact.GetPackageVersionReadmeOutput, error)
	GetRepositoryEndpoint(ctx context.Context, params *codeartifact.GetRepositoryEndpointInput, optFns ...func(*codeartifact.Options)) (*codeartifact.GetRepositoryEndpointOutput, error)
	GetRepositoryPermissionsPolicy(ctx context.Context, params *codeartifact.GetRepositoryPermissionsPolicyInput, optFns ...func(*codeartifact.Options)) (*codeartifact.GetRepositoryPermissionsPolicyOutput, error)
	ListAllowedRepositoriesForGroup(ctx context.Context, params *codeartifact.ListAllowedRepositoriesForGroupInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListAllowedRepositoriesForGroupOutput, error)
	ListAssociatedPackages(ctx context.Context, params *codeartifact.ListAssociatedPackagesInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListAssociatedPackagesOutput, error)
	ListDomains(ctx context.Context, params *codeartifact.ListDomainsInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListDomainsOutput, error)
	ListPackageGroups(ctx context.Context, params *codeartifact.ListPackageGroupsInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListPackageGroupsOutput, error)
	ListPackageVersionAssets(ctx context.Context, params *codeartifact.ListPackageVersionAssetsInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListPackageVersionAssetsOutput, error)
	ListPackageVersionDependencies(ctx context.Context, params *codeartifact.ListPackageVersionDependenciesInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListPackageVersionDependenciesOutput, error)
	ListPackageVersions(ctx context.Context, params *codeartifact.ListPackageVersionsInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListPackageVersionsOutput, error)
	ListPackages(ctx context.Context, params *codeartifact.ListPackagesInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListPackagesOutput, error)
	ListRepositories(ctx context.Context, params *codeartifact.ListRepositoriesInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListRepositoriesOutput, error)
	ListRepositoriesInDomain(ctx context.Context, params *codeartifact.ListRepositoriesInDomainInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListRepositoriesInDomainOutput, error)
	ListSubPackageGroups(ctx context.Context, params *codeartifact.ListSubPackageGroupsInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListSubPackageGroupsOutput, error)
	ListTagsForResource(ctx context.Context, params *codeartifact.ListTagsForResourceInput, optFns ...func(*codeartifact.Options)) (*codeartifact.ListTagsForResourceOutput, error)
	PublishPackageVersion(ctx context.Context, params *codeartifact.PublishPackageVersionInput, optFns ...func(*codeartifact.Options)) (*codeartifact.PublishPackageVersionOutput, error)
	PutDomainPermissionsPolicy(ctx context.Context, params *codeartifact.PutDomainPermissionsPolicyInput, optFns ...func(*codeartifact.Options)) (*codeartifact.PutDomainPermissionsPolicyOutput, error)
	PutPackageOriginConfiguration(ctx context.Context, params *codeartifact.PutPackageOriginConfigurationInput, optFns ...func(*codeartifact.Options)) (*codeartifact.PutPackageOriginConfigurationOutput, error)
	PutRepositoryPermissionsPolicy(ctx context.Context, params *codeartifact.PutRepositoryPermissionsPolicyInput, optFns ...func(*codeartifact.Options)) (*codeartifact.PutRepositoryPermissionsPolicyOutput, error)
	TagResource(ctx context.Context, params *codeartifact.TagResourceInput, optFns ...func(*codeartifact.Options)) (*codeartifact.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *codeartifact.UntagResourceInput, optFns ...func(*codeartifact.Options)) (*codeartifact.UntagResourceOutput, error)
	UpdatePackageGroup(ctx context.Context, params *codeartifact.UpdatePackageGroupInput, optFns ...func(*codeartifact.Options)) (*codeartifact.UpdatePackageGroupOutput, error)
	UpdatePackageGroupOriginConfiguration(ctx context.Context, params *codeartifact.UpdatePackageGroupOriginConfigurationInput, optFns ...func(*codeartifact.Options)) (*codeartifact.UpdatePackageGroupOriginConfigurationOutput, error)
	UpdatePackageVersionsStatus(ctx context.Context, params *codeartifact.UpdatePackageVersionsStatusInput, optFns ...func(*codeartifact.Options)) (*codeartifact.UpdatePackageVersionsStatusOutput, error)
	UpdateRepository(ctx context.Context, params *codeartifact.UpdateRepositoryInput, optFns ...func(*codeartifact.Options)) (*codeartifact.UpdateRepositoryOutput, error)
}
