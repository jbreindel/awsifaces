// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/mediapackagev2"
)

// Mediapackagev2Client ...
type Mediapackagev2Client interface {
	Options() mediapackagev2.Options
	CreateChannel(ctx context.Context, params *mediapackagev2.CreateChannelInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.CreateChannelOutput, error)
	CreateChannelGroup(ctx context.Context, params *mediapackagev2.CreateChannelGroupInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.CreateChannelGroupOutput, error)
	CreateOriginEndpoint(ctx context.Context, params *mediapackagev2.CreateOriginEndpointInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.CreateOriginEndpointOutput, error)
	DeleteChannel(ctx context.Context, params *mediapackagev2.DeleteChannelInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.DeleteChannelOutput, error)
	DeleteChannelGroup(ctx context.Context, params *mediapackagev2.DeleteChannelGroupInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.DeleteChannelGroupOutput, error)
	DeleteChannelPolicy(ctx context.Context, params *mediapackagev2.DeleteChannelPolicyInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.DeleteChannelPolicyOutput, error)
	DeleteOriginEndpoint(ctx context.Context, params *mediapackagev2.DeleteOriginEndpointInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.DeleteOriginEndpointOutput, error)
	DeleteOriginEndpointPolicy(ctx context.Context, params *mediapackagev2.DeleteOriginEndpointPolicyInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.DeleteOriginEndpointPolicyOutput, error)
	GetChannel(ctx context.Context, params *mediapackagev2.GetChannelInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.GetChannelOutput, error)
	GetChannelGroup(ctx context.Context, params *mediapackagev2.GetChannelGroupInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.GetChannelGroupOutput, error)
	GetChannelPolicy(ctx context.Context, params *mediapackagev2.GetChannelPolicyInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.GetChannelPolicyOutput, error)
	GetOriginEndpoint(ctx context.Context, params *mediapackagev2.GetOriginEndpointInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.GetOriginEndpointOutput, error)
	GetOriginEndpointPolicy(ctx context.Context, params *mediapackagev2.GetOriginEndpointPolicyInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.GetOriginEndpointPolicyOutput, error)
	ListChannelGroups(ctx context.Context, params *mediapackagev2.ListChannelGroupsInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.ListChannelGroupsOutput, error)
	ListChannels(ctx context.Context, params *mediapackagev2.ListChannelsInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.ListChannelsOutput, error)
	ListOriginEndpoints(ctx context.Context, params *mediapackagev2.ListOriginEndpointsInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.ListOriginEndpointsOutput, error)
	ListTagsForResource(ctx context.Context, params *mediapackagev2.ListTagsForResourceInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.ListTagsForResourceOutput, error)
	PutChannelPolicy(ctx context.Context, params *mediapackagev2.PutChannelPolicyInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.PutChannelPolicyOutput, error)
	PutOriginEndpointPolicy(ctx context.Context, params *mediapackagev2.PutOriginEndpointPolicyInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.PutOriginEndpointPolicyOutput, error)
	TagResource(ctx context.Context, params *mediapackagev2.TagResourceInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *mediapackagev2.UntagResourceInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.UntagResourceOutput, error)
	UpdateChannel(ctx context.Context, params *mediapackagev2.UpdateChannelInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.UpdateChannelOutput, error)
	UpdateChannelGroup(ctx context.Context, params *mediapackagev2.UpdateChannelGroupInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.UpdateChannelGroupOutput, error)
	UpdateOriginEndpoint(ctx context.Context, params *mediapackagev2.UpdateOriginEndpointInput, optFns ...func(*mediapackagev2.Options)) (*mediapackagev2.UpdateOriginEndpointOutput, error)
}
