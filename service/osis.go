// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/osis"
)

// OsisClient ...
type OsisClient interface {
	Options() osis.Options
	CreatePipeline(ctx context.Context, params *osis.CreatePipelineInput, optFns ...func(*osis.Options)) (*osis.CreatePipelineOutput, error)
	DeletePipeline(ctx context.Context, params *osis.DeletePipelineInput, optFns ...func(*osis.Options)) (*osis.DeletePipelineOutput, error)
	GetPipeline(ctx context.Context, params *osis.GetPipelineInput, optFns ...func(*osis.Options)) (*osis.GetPipelineOutput, error)
	GetPipelineBlueprint(ctx context.Context, params *osis.GetPipelineBlueprintInput, optFns ...func(*osis.Options)) (*osis.GetPipelineBlueprintOutput, error)
	GetPipelineChangeProgress(ctx context.Context, params *osis.GetPipelineChangeProgressInput, optFns ...func(*osis.Options)) (*osis.GetPipelineChangeProgressOutput, error)
	ListPipelineBlueprints(ctx context.Context, params *osis.ListPipelineBlueprintsInput, optFns ...func(*osis.Options)) (*osis.ListPipelineBlueprintsOutput, error)
	ListPipelines(ctx context.Context, params *osis.ListPipelinesInput, optFns ...func(*osis.Options)) (*osis.ListPipelinesOutput, error)
	ListTagsForResource(ctx context.Context, params *osis.ListTagsForResourceInput, optFns ...func(*osis.Options)) (*osis.ListTagsForResourceOutput, error)
	StartPipeline(ctx context.Context, params *osis.StartPipelineInput, optFns ...func(*osis.Options)) (*osis.StartPipelineOutput, error)
	StopPipeline(ctx context.Context, params *osis.StopPipelineInput, optFns ...func(*osis.Options)) (*osis.StopPipelineOutput, error)
	TagResource(ctx context.Context, params *osis.TagResourceInput, optFns ...func(*osis.Options)) (*osis.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *osis.UntagResourceInput, optFns ...func(*osis.Options)) (*osis.UntagResourceOutput, error)
	UpdatePipeline(ctx context.Context, params *osis.UpdatePipelineInput, optFns ...func(*osis.Options)) (*osis.UpdatePipelineOutput, error)
	ValidatePipeline(ctx context.Context, params *osis.ValidatePipelineInput, optFns ...func(*osis.Options)) (*osis.ValidatePipelineOutput, error)
}
