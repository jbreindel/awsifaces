// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/entityresolution"
)

// EntityresolutionClient ...
type EntityresolutionClient interface {
	Options() entityresolution.Options
	CreateIdMappingWorkflow(ctx context.Context, params *entityresolution.CreateIdMappingWorkflowInput, optFns ...func(*entityresolution.Options)) (*entityresolution.CreateIdMappingWorkflowOutput, error)
	CreateMatchingWorkflow(ctx context.Context, params *entityresolution.CreateMatchingWorkflowInput, optFns ...func(*entityresolution.Options)) (*entityresolution.CreateMatchingWorkflowOutput, error)
	CreateSchemaMapping(ctx context.Context, params *entityresolution.CreateSchemaMappingInput, optFns ...func(*entityresolution.Options)) (*entityresolution.CreateSchemaMappingOutput, error)
	DeleteIdMappingWorkflow(ctx context.Context, params *entityresolution.DeleteIdMappingWorkflowInput, optFns ...func(*entityresolution.Options)) (*entityresolution.DeleteIdMappingWorkflowOutput, error)
	DeleteMatchingWorkflow(ctx context.Context, params *entityresolution.DeleteMatchingWorkflowInput, optFns ...func(*entityresolution.Options)) (*entityresolution.DeleteMatchingWorkflowOutput, error)
	DeleteSchemaMapping(ctx context.Context, params *entityresolution.DeleteSchemaMappingInput, optFns ...func(*entityresolution.Options)) (*entityresolution.DeleteSchemaMappingOutput, error)
	GetIdMappingJob(ctx context.Context, params *entityresolution.GetIdMappingJobInput, optFns ...func(*entityresolution.Options)) (*entityresolution.GetIdMappingJobOutput, error)
	GetIdMappingWorkflow(ctx context.Context, params *entityresolution.GetIdMappingWorkflowInput, optFns ...func(*entityresolution.Options)) (*entityresolution.GetIdMappingWorkflowOutput, error)
	GetMatchId(ctx context.Context, params *entityresolution.GetMatchIdInput, optFns ...func(*entityresolution.Options)) (*entityresolution.GetMatchIdOutput, error)
	GetMatchingJob(ctx context.Context, params *entityresolution.GetMatchingJobInput, optFns ...func(*entityresolution.Options)) (*entityresolution.GetMatchingJobOutput, error)
	GetMatchingWorkflow(ctx context.Context, params *entityresolution.GetMatchingWorkflowInput, optFns ...func(*entityresolution.Options)) (*entityresolution.GetMatchingWorkflowOutput, error)
	GetProviderService(ctx context.Context, params *entityresolution.GetProviderServiceInput, optFns ...func(*entityresolution.Options)) (*entityresolution.GetProviderServiceOutput, error)
	GetSchemaMapping(ctx context.Context, params *entityresolution.GetSchemaMappingInput, optFns ...func(*entityresolution.Options)) (*entityresolution.GetSchemaMappingOutput, error)
	ListIdMappingJobs(ctx context.Context, params *entityresolution.ListIdMappingJobsInput, optFns ...func(*entityresolution.Options)) (*entityresolution.ListIdMappingJobsOutput, error)
	ListIdMappingWorkflows(ctx context.Context, params *entityresolution.ListIdMappingWorkflowsInput, optFns ...func(*entityresolution.Options)) (*entityresolution.ListIdMappingWorkflowsOutput, error)
	ListMatchingJobs(ctx context.Context, params *entityresolution.ListMatchingJobsInput, optFns ...func(*entityresolution.Options)) (*entityresolution.ListMatchingJobsOutput, error)
	ListMatchingWorkflows(ctx context.Context, params *entityresolution.ListMatchingWorkflowsInput, optFns ...func(*entityresolution.Options)) (*entityresolution.ListMatchingWorkflowsOutput, error)
	ListProviderServices(ctx context.Context, params *entityresolution.ListProviderServicesInput, optFns ...func(*entityresolution.Options)) (*entityresolution.ListProviderServicesOutput, error)
	ListSchemaMappings(ctx context.Context, params *entityresolution.ListSchemaMappingsInput, optFns ...func(*entityresolution.Options)) (*entityresolution.ListSchemaMappingsOutput, error)
	ListTagsForResource(ctx context.Context, params *entityresolution.ListTagsForResourceInput, optFns ...func(*entityresolution.Options)) (*entityresolution.ListTagsForResourceOutput, error)
	StartIdMappingJob(ctx context.Context, params *entityresolution.StartIdMappingJobInput, optFns ...func(*entityresolution.Options)) (*entityresolution.StartIdMappingJobOutput, error)
	StartMatchingJob(ctx context.Context, params *entityresolution.StartMatchingJobInput, optFns ...func(*entityresolution.Options)) (*entityresolution.StartMatchingJobOutput, error)
	TagResource(ctx context.Context, params *entityresolution.TagResourceInput, optFns ...func(*entityresolution.Options)) (*entityresolution.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *entityresolution.UntagResourceInput, optFns ...func(*entityresolution.Options)) (*entityresolution.UntagResourceOutput, error)
	UpdateIdMappingWorkflow(ctx context.Context, params *entityresolution.UpdateIdMappingWorkflowInput, optFns ...func(*entityresolution.Options)) (*entityresolution.UpdateIdMappingWorkflowOutput, error)
	UpdateMatchingWorkflow(ctx context.Context, params *entityresolution.UpdateMatchingWorkflowInput, optFns ...func(*entityresolution.Options)) (*entityresolution.UpdateMatchingWorkflowOutput, error)
	UpdateSchemaMapping(ctx context.Context, params *entityresolution.UpdateSchemaMappingInput, optFns ...func(*entityresolution.Options)) (*entityresolution.UpdateSchemaMappingOutput, error)
}
