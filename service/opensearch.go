// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/opensearch"
)

// OpensearchClient ...
type OpensearchClient interface {
	Options() opensearch.Options
	AcceptInboundConnection(ctx context.Context, params *opensearch.AcceptInboundConnectionInput, optFns ...func(*opensearch.Options)) (*opensearch.AcceptInboundConnectionOutput, error)
	AddDataSource(ctx context.Context, params *opensearch.AddDataSourceInput, optFns ...func(*opensearch.Options)) (*opensearch.AddDataSourceOutput, error)
	AddTags(ctx context.Context, params *opensearch.AddTagsInput, optFns ...func(*opensearch.Options)) (*opensearch.AddTagsOutput, error)
	AssociatePackage(ctx context.Context, params *opensearch.AssociatePackageInput, optFns ...func(*opensearch.Options)) (*opensearch.AssociatePackageOutput, error)
	AuthorizeVpcEndpointAccess(ctx context.Context, params *opensearch.AuthorizeVpcEndpointAccessInput, optFns ...func(*opensearch.Options)) (*opensearch.AuthorizeVpcEndpointAccessOutput, error)
	CancelDomainConfigChange(ctx context.Context, params *opensearch.CancelDomainConfigChangeInput, optFns ...func(*opensearch.Options)) (*opensearch.CancelDomainConfigChangeOutput, error)
	CancelServiceSoftwareUpdate(ctx context.Context, params *opensearch.CancelServiceSoftwareUpdateInput, optFns ...func(*opensearch.Options)) (*opensearch.CancelServiceSoftwareUpdateOutput, error)
	CreateDomain(ctx context.Context, params *opensearch.CreateDomainInput, optFns ...func(*opensearch.Options)) (*opensearch.CreateDomainOutput, error)
	CreateOutboundConnection(ctx context.Context, params *opensearch.CreateOutboundConnectionInput, optFns ...func(*opensearch.Options)) (*opensearch.CreateOutboundConnectionOutput, error)
	CreatePackage(ctx context.Context, params *opensearch.CreatePackageInput, optFns ...func(*opensearch.Options)) (*opensearch.CreatePackageOutput, error)
	CreateVpcEndpoint(ctx context.Context, params *opensearch.CreateVpcEndpointInput, optFns ...func(*opensearch.Options)) (*opensearch.CreateVpcEndpointOutput, error)
	DeleteDataSource(ctx context.Context, params *opensearch.DeleteDataSourceInput, optFns ...func(*opensearch.Options)) (*opensearch.DeleteDataSourceOutput, error)
	DeleteDomain(ctx context.Context, params *opensearch.DeleteDomainInput, optFns ...func(*opensearch.Options)) (*opensearch.DeleteDomainOutput, error)
	DeleteInboundConnection(ctx context.Context, params *opensearch.DeleteInboundConnectionInput, optFns ...func(*opensearch.Options)) (*opensearch.DeleteInboundConnectionOutput, error)
	DeleteOutboundConnection(ctx context.Context, params *opensearch.DeleteOutboundConnectionInput, optFns ...func(*opensearch.Options)) (*opensearch.DeleteOutboundConnectionOutput, error)
	DeletePackage(ctx context.Context, params *opensearch.DeletePackageInput, optFns ...func(*opensearch.Options)) (*opensearch.DeletePackageOutput, error)
	DeleteVpcEndpoint(ctx context.Context, params *opensearch.DeleteVpcEndpointInput, optFns ...func(*opensearch.Options)) (*opensearch.DeleteVpcEndpointOutput, error)
	DescribeDomain(ctx context.Context, params *opensearch.DescribeDomainInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeDomainOutput, error)
	DescribeDomainAutoTunes(ctx context.Context, params *opensearch.DescribeDomainAutoTunesInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeDomainAutoTunesOutput, error)
	DescribeDomainChangeProgress(ctx context.Context, params *opensearch.DescribeDomainChangeProgressInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeDomainChangeProgressOutput, error)
	DescribeDomainConfig(ctx context.Context, params *opensearch.DescribeDomainConfigInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeDomainConfigOutput, error)
	DescribeDomainHealth(ctx context.Context, params *opensearch.DescribeDomainHealthInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeDomainHealthOutput, error)
	DescribeDomainNodes(ctx context.Context, params *opensearch.DescribeDomainNodesInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeDomainNodesOutput, error)
	DescribeDomains(ctx context.Context, params *opensearch.DescribeDomainsInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeDomainsOutput, error)
	DescribeDryRunProgress(ctx context.Context, params *opensearch.DescribeDryRunProgressInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeDryRunProgressOutput, error)
	DescribeInboundConnections(ctx context.Context, params *opensearch.DescribeInboundConnectionsInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeInboundConnectionsOutput, error)
	DescribeInstanceTypeLimits(ctx context.Context, params *opensearch.DescribeInstanceTypeLimitsInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeInstanceTypeLimitsOutput, error)
	DescribeOutboundConnections(ctx context.Context, params *opensearch.DescribeOutboundConnectionsInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeOutboundConnectionsOutput, error)
	DescribePackages(ctx context.Context, params *opensearch.DescribePackagesInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribePackagesOutput, error)
	DescribeReservedInstanceOfferings(ctx context.Context, params *opensearch.DescribeReservedInstanceOfferingsInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeReservedInstanceOfferingsOutput, error)
	DescribeReservedInstances(ctx context.Context, params *opensearch.DescribeReservedInstancesInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeReservedInstancesOutput, error)
	DescribeVpcEndpoints(ctx context.Context, params *opensearch.DescribeVpcEndpointsInput, optFns ...func(*opensearch.Options)) (*opensearch.DescribeVpcEndpointsOutput, error)
	DissociatePackage(ctx context.Context, params *opensearch.DissociatePackageInput, optFns ...func(*opensearch.Options)) (*opensearch.DissociatePackageOutput, error)
	GetCompatibleVersions(ctx context.Context, params *opensearch.GetCompatibleVersionsInput, optFns ...func(*opensearch.Options)) (*opensearch.GetCompatibleVersionsOutput, error)
	GetDataSource(ctx context.Context, params *opensearch.GetDataSourceInput, optFns ...func(*opensearch.Options)) (*opensearch.GetDataSourceOutput, error)
	GetDomainMaintenanceStatus(ctx context.Context, params *opensearch.GetDomainMaintenanceStatusInput, optFns ...func(*opensearch.Options)) (*opensearch.GetDomainMaintenanceStatusOutput, error)
	GetPackageVersionHistory(ctx context.Context, params *opensearch.GetPackageVersionHistoryInput, optFns ...func(*opensearch.Options)) (*opensearch.GetPackageVersionHistoryOutput, error)
	GetUpgradeHistory(ctx context.Context, params *opensearch.GetUpgradeHistoryInput, optFns ...func(*opensearch.Options)) (*opensearch.GetUpgradeHistoryOutput, error)
	GetUpgradeStatus(ctx context.Context, params *opensearch.GetUpgradeStatusInput, optFns ...func(*opensearch.Options)) (*opensearch.GetUpgradeStatusOutput, error)
	ListDataSources(ctx context.Context, params *opensearch.ListDataSourcesInput, optFns ...func(*opensearch.Options)) (*opensearch.ListDataSourcesOutput, error)
	ListDomainMaintenances(ctx context.Context, params *opensearch.ListDomainMaintenancesInput, optFns ...func(*opensearch.Options)) (*opensearch.ListDomainMaintenancesOutput, error)
	ListDomainNames(ctx context.Context, params *opensearch.ListDomainNamesInput, optFns ...func(*opensearch.Options)) (*opensearch.ListDomainNamesOutput, error)
	ListDomainsForPackage(ctx context.Context, params *opensearch.ListDomainsForPackageInput, optFns ...func(*opensearch.Options)) (*opensearch.ListDomainsForPackageOutput, error)
	ListInstanceTypeDetails(ctx context.Context, params *opensearch.ListInstanceTypeDetailsInput, optFns ...func(*opensearch.Options)) (*opensearch.ListInstanceTypeDetailsOutput, error)
	ListPackagesForDomain(ctx context.Context, params *opensearch.ListPackagesForDomainInput, optFns ...func(*opensearch.Options)) (*opensearch.ListPackagesForDomainOutput, error)
	ListScheduledActions(ctx context.Context, params *opensearch.ListScheduledActionsInput, optFns ...func(*opensearch.Options)) (*opensearch.ListScheduledActionsOutput, error)
	ListTags(ctx context.Context, params *opensearch.ListTagsInput, optFns ...func(*opensearch.Options)) (*opensearch.ListTagsOutput, error)
	ListVersions(ctx context.Context, params *opensearch.ListVersionsInput, optFns ...func(*opensearch.Options)) (*opensearch.ListVersionsOutput, error)
	ListVpcEndpointAccess(ctx context.Context, params *opensearch.ListVpcEndpointAccessInput, optFns ...func(*opensearch.Options)) (*opensearch.ListVpcEndpointAccessOutput, error)
	ListVpcEndpoints(ctx context.Context, params *opensearch.ListVpcEndpointsInput, optFns ...func(*opensearch.Options)) (*opensearch.ListVpcEndpointsOutput, error)
	ListVpcEndpointsForDomain(ctx context.Context, params *opensearch.ListVpcEndpointsForDomainInput, optFns ...func(*opensearch.Options)) (*opensearch.ListVpcEndpointsForDomainOutput, error)
	PurchaseReservedInstanceOffering(ctx context.Context, params *opensearch.PurchaseReservedInstanceOfferingInput, optFns ...func(*opensearch.Options)) (*opensearch.PurchaseReservedInstanceOfferingOutput, error)
	RejectInboundConnection(ctx context.Context, params *opensearch.RejectInboundConnectionInput, optFns ...func(*opensearch.Options)) (*opensearch.RejectInboundConnectionOutput, error)
	RemoveTags(ctx context.Context, params *opensearch.RemoveTagsInput, optFns ...func(*opensearch.Options)) (*opensearch.RemoveTagsOutput, error)
	RevokeVpcEndpointAccess(ctx context.Context, params *opensearch.RevokeVpcEndpointAccessInput, optFns ...func(*opensearch.Options)) (*opensearch.RevokeVpcEndpointAccessOutput, error)
	StartDomainMaintenance(ctx context.Context, params *opensearch.StartDomainMaintenanceInput, optFns ...func(*opensearch.Options)) (*opensearch.StartDomainMaintenanceOutput, error)
	StartServiceSoftwareUpdate(ctx context.Context, params *opensearch.StartServiceSoftwareUpdateInput, optFns ...func(*opensearch.Options)) (*opensearch.StartServiceSoftwareUpdateOutput, error)
	UpdateDataSource(ctx context.Context, params *opensearch.UpdateDataSourceInput, optFns ...func(*opensearch.Options)) (*opensearch.UpdateDataSourceOutput, error)
	UpdateDomainConfig(ctx context.Context, params *opensearch.UpdateDomainConfigInput, optFns ...func(*opensearch.Options)) (*opensearch.UpdateDomainConfigOutput, error)
	UpdatePackage(ctx context.Context, params *opensearch.UpdatePackageInput, optFns ...func(*opensearch.Options)) (*opensearch.UpdatePackageOutput, error)
	UpdateScheduledAction(ctx context.Context, params *opensearch.UpdateScheduledActionInput, optFns ...func(*opensearch.Options)) (*opensearch.UpdateScheduledActionOutput, error)
	UpdateVpcEndpoint(ctx context.Context, params *opensearch.UpdateVpcEndpointInput, optFns ...func(*opensearch.Options)) (*opensearch.UpdateVpcEndpointOutput, error)
	UpgradeDomain(ctx context.Context, params *opensearch.UpgradeDomainInput, optFns ...func(*opensearch.Options)) (*opensearch.UpgradeDomainOutput, error)
}
