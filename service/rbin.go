// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/rbin"
)

// RbinClient ...
type RbinClient interface {
	Options() rbin.Options
	CreateRule(ctx context.Context, params *rbin.CreateRuleInput, optFns ...func(*rbin.Options)) (*rbin.CreateRuleOutput, error)
	DeleteRule(ctx context.Context, params *rbin.DeleteRuleInput, optFns ...func(*rbin.Options)) (*rbin.DeleteRuleOutput, error)
	GetRule(ctx context.Context, params *rbin.GetRuleInput, optFns ...func(*rbin.Options)) (*rbin.GetRuleOutput, error)
	ListRules(ctx context.Context, params *rbin.ListRulesInput, optFns ...func(*rbin.Options)) (*rbin.ListRulesOutput, error)
	ListTagsForResource(ctx context.Context, params *rbin.ListTagsForResourceInput, optFns ...func(*rbin.Options)) (*rbin.ListTagsForResourceOutput, error)
	LockRule(ctx context.Context, params *rbin.LockRuleInput, optFns ...func(*rbin.Options)) (*rbin.LockRuleOutput, error)
	TagResource(ctx context.Context, params *rbin.TagResourceInput, optFns ...func(*rbin.Options)) (*rbin.TagResourceOutput, error)
	UnlockRule(ctx context.Context, params *rbin.UnlockRuleInput, optFns ...func(*rbin.Options)) (*rbin.UnlockRuleOutput, error)
	UntagResource(ctx context.Context, params *rbin.UntagResourceInput, optFns ...func(*rbin.Options)) (*rbin.UntagResourceOutput, error)
	UpdateRule(ctx context.Context, params *rbin.UpdateRuleInput, optFns ...func(*rbin.Options)) (*rbin.UpdateRuleOutput, error)
}
