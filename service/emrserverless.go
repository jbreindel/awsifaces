// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/emrserverless"
)

// EmrserverlessClient ...
type EmrserverlessClient interface {
	Options() emrserverless.Options
	CancelJobRun(ctx context.Context, params *emrserverless.CancelJobRunInput, optFns ...func(*emrserverless.Options)) (*emrserverless.CancelJobRunOutput, error)
	CreateApplication(ctx context.Context, params *emrserverless.CreateApplicationInput, optFns ...func(*emrserverless.Options)) (*emrserverless.CreateApplicationOutput, error)
	DeleteApplication(ctx context.Context, params *emrserverless.DeleteApplicationInput, optFns ...func(*emrserverless.Options)) (*emrserverless.DeleteApplicationOutput, error)
	GetApplication(ctx context.Context, params *emrserverless.GetApplicationInput, optFns ...func(*emrserverless.Options)) (*emrserverless.GetApplicationOutput, error)
	GetDashboardForJobRun(ctx context.Context, params *emrserverless.GetDashboardForJobRunInput, optFns ...func(*emrserverless.Options)) (*emrserverless.GetDashboardForJobRunOutput, error)
	GetJobRun(ctx context.Context, params *emrserverless.GetJobRunInput, optFns ...func(*emrserverless.Options)) (*emrserverless.GetJobRunOutput, error)
	ListApplications(ctx context.Context, params *emrserverless.ListApplicationsInput, optFns ...func(*emrserverless.Options)) (*emrserverless.ListApplicationsOutput, error)
	ListJobRuns(ctx context.Context, params *emrserverless.ListJobRunsInput, optFns ...func(*emrserverless.Options)) (*emrserverless.ListJobRunsOutput, error)
	ListTagsForResource(ctx context.Context, params *emrserverless.ListTagsForResourceInput, optFns ...func(*emrserverless.Options)) (*emrserverless.ListTagsForResourceOutput, error)
	StartApplication(ctx context.Context, params *emrserverless.StartApplicationInput, optFns ...func(*emrserverless.Options)) (*emrserverless.StartApplicationOutput, error)
	StartJobRun(ctx context.Context, params *emrserverless.StartJobRunInput, optFns ...func(*emrserverless.Options)) (*emrserverless.StartJobRunOutput, error)
	StopApplication(ctx context.Context, params *emrserverless.StopApplicationInput, optFns ...func(*emrserverless.Options)) (*emrserverless.StopApplicationOutput, error)
	TagResource(ctx context.Context, params *emrserverless.TagResourceInput, optFns ...func(*emrserverless.Options)) (*emrserverless.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *emrserverless.UntagResourceInput, optFns ...func(*emrserverless.Options)) (*emrserverless.UntagResourceOutput, error)
	UpdateApplication(ctx context.Context, params *emrserverless.UpdateApplicationInput, optFns ...func(*emrserverless.Options)) (*emrserverless.UpdateApplicationOutput, error)
}
