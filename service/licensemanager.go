// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/licensemanager"
)

// LicensemanagerClient ...
type LicensemanagerClient interface {
	Options() licensemanager.Options
	AcceptGrant(ctx context.Context, params *licensemanager.AcceptGrantInput, optFns ...func(*licensemanager.Options)) (*licensemanager.AcceptGrantOutput, error)
	CheckInLicense(ctx context.Context, params *licensemanager.CheckInLicenseInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CheckInLicenseOutput, error)
	CheckoutBorrowLicense(ctx context.Context, params *licensemanager.CheckoutBorrowLicenseInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CheckoutBorrowLicenseOutput, error)
	CheckoutLicense(ctx context.Context, params *licensemanager.CheckoutLicenseInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CheckoutLicenseOutput, error)
	CreateGrant(ctx context.Context, params *licensemanager.CreateGrantInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CreateGrantOutput, error)
	CreateGrantVersion(ctx context.Context, params *licensemanager.CreateGrantVersionInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CreateGrantVersionOutput, error)
	CreateLicense(ctx context.Context, params *licensemanager.CreateLicenseInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CreateLicenseOutput, error)
	CreateLicenseConfiguration(ctx context.Context, params *licensemanager.CreateLicenseConfigurationInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CreateLicenseConfigurationOutput, error)
	CreateLicenseConversionTaskForResource(ctx context.Context, params *licensemanager.CreateLicenseConversionTaskForResourceInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CreateLicenseConversionTaskForResourceOutput, error)
	CreateLicenseManagerReportGenerator(ctx context.Context, params *licensemanager.CreateLicenseManagerReportGeneratorInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CreateLicenseManagerReportGeneratorOutput, error)
	CreateLicenseVersion(ctx context.Context, params *licensemanager.CreateLicenseVersionInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CreateLicenseVersionOutput, error)
	CreateToken(ctx context.Context, params *licensemanager.CreateTokenInput, optFns ...func(*licensemanager.Options)) (*licensemanager.CreateTokenOutput, error)
	DeleteGrant(ctx context.Context, params *licensemanager.DeleteGrantInput, optFns ...func(*licensemanager.Options)) (*licensemanager.DeleteGrantOutput, error)
	DeleteLicense(ctx context.Context, params *licensemanager.DeleteLicenseInput, optFns ...func(*licensemanager.Options)) (*licensemanager.DeleteLicenseOutput, error)
	DeleteLicenseConfiguration(ctx context.Context, params *licensemanager.DeleteLicenseConfigurationInput, optFns ...func(*licensemanager.Options)) (*licensemanager.DeleteLicenseConfigurationOutput, error)
	DeleteLicenseManagerReportGenerator(ctx context.Context, params *licensemanager.DeleteLicenseManagerReportGeneratorInput, optFns ...func(*licensemanager.Options)) (*licensemanager.DeleteLicenseManagerReportGeneratorOutput, error)
	DeleteToken(ctx context.Context, params *licensemanager.DeleteTokenInput, optFns ...func(*licensemanager.Options)) (*licensemanager.DeleteTokenOutput, error)
	ExtendLicenseConsumption(ctx context.Context, params *licensemanager.ExtendLicenseConsumptionInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ExtendLicenseConsumptionOutput, error)
	GetAccessToken(ctx context.Context, params *licensemanager.GetAccessTokenInput, optFns ...func(*licensemanager.Options)) (*licensemanager.GetAccessTokenOutput, error)
	GetGrant(ctx context.Context, params *licensemanager.GetGrantInput, optFns ...func(*licensemanager.Options)) (*licensemanager.GetGrantOutput, error)
	GetLicense(ctx context.Context, params *licensemanager.GetLicenseInput, optFns ...func(*licensemanager.Options)) (*licensemanager.GetLicenseOutput, error)
	GetLicenseConfiguration(ctx context.Context, params *licensemanager.GetLicenseConfigurationInput, optFns ...func(*licensemanager.Options)) (*licensemanager.GetLicenseConfigurationOutput, error)
	GetLicenseConversionTask(ctx context.Context, params *licensemanager.GetLicenseConversionTaskInput, optFns ...func(*licensemanager.Options)) (*licensemanager.GetLicenseConversionTaskOutput, error)
	GetLicenseManagerReportGenerator(ctx context.Context, params *licensemanager.GetLicenseManagerReportGeneratorInput, optFns ...func(*licensemanager.Options)) (*licensemanager.GetLicenseManagerReportGeneratorOutput, error)
	GetLicenseUsage(ctx context.Context, params *licensemanager.GetLicenseUsageInput, optFns ...func(*licensemanager.Options)) (*licensemanager.GetLicenseUsageOutput, error)
	GetServiceSettings(ctx context.Context, params *licensemanager.GetServiceSettingsInput, optFns ...func(*licensemanager.Options)) (*licensemanager.GetServiceSettingsOutput, error)
	ListAssociationsForLicenseConfiguration(ctx context.Context, params *licensemanager.ListAssociationsForLicenseConfigurationInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListAssociationsForLicenseConfigurationOutput, error)
	ListDistributedGrants(ctx context.Context, params *licensemanager.ListDistributedGrantsInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListDistributedGrantsOutput, error)
	ListFailuresForLicenseConfigurationOperations(ctx context.Context, params *licensemanager.ListFailuresForLicenseConfigurationOperationsInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListFailuresForLicenseConfigurationOperationsOutput, error)
	ListLicenseConfigurations(ctx context.Context, params *licensemanager.ListLicenseConfigurationsInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListLicenseConfigurationsOutput, error)
	ListLicenseConversionTasks(ctx context.Context, params *licensemanager.ListLicenseConversionTasksInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListLicenseConversionTasksOutput, error)
	ListLicenseManagerReportGenerators(ctx context.Context, params *licensemanager.ListLicenseManagerReportGeneratorsInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListLicenseManagerReportGeneratorsOutput, error)
	ListLicenseSpecificationsForResource(ctx context.Context, params *licensemanager.ListLicenseSpecificationsForResourceInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListLicenseSpecificationsForResourceOutput, error)
	ListLicenseVersions(ctx context.Context, params *licensemanager.ListLicenseVersionsInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListLicenseVersionsOutput, error)
	ListLicenses(ctx context.Context, params *licensemanager.ListLicensesInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListLicensesOutput, error)
	ListReceivedGrants(ctx context.Context, params *licensemanager.ListReceivedGrantsInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListReceivedGrantsOutput, error)
	ListReceivedGrantsForOrganization(ctx context.Context, params *licensemanager.ListReceivedGrantsForOrganizationInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListReceivedGrantsForOrganizationOutput, error)
	ListReceivedLicenses(ctx context.Context, params *licensemanager.ListReceivedLicensesInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListReceivedLicensesOutput, error)
	ListReceivedLicensesForOrganization(ctx context.Context, params *licensemanager.ListReceivedLicensesForOrganizationInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListReceivedLicensesForOrganizationOutput, error)
	ListResourceInventory(ctx context.Context, params *licensemanager.ListResourceInventoryInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListResourceInventoryOutput, error)
	ListTagsForResource(ctx context.Context, params *licensemanager.ListTagsForResourceInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListTagsForResourceOutput, error)
	ListTokens(ctx context.Context, params *licensemanager.ListTokensInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListTokensOutput, error)
	ListUsageForLicenseConfiguration(ctx context.Context, params *licensemanager.ListUsageForLicenseConfigurationInput, optFns ...func(*licensemanager.Options)) (*licensemanager.ListUsageForLicenseConfigurationOutput, error)
	RejectGrant(ctx context.Context, params *licensemanager.RejectGrantInput, optFns ...func(*licensemanager.Options)) (*licensemanager.RejectGrantOutput, error)
	TagResource(ctx context.Context, params *licensemanager.TagResourceInput, optFns ...func(*licensemanager.Options)) (*licensemanager.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *licensemanager.UntagResourceInput, optFns ...func(*licensemanager.Options)) (*licensemanager.UntagResourceOutput, error)
	UpdateLicenseConfiguration(ctx context.Context, params *licensemanager.UpdateLicenseConfigurationInput, optFns ...func(*licensemanager.Options)) (*licensemanager.UpdateLicenseConfigurationOutput, error)
	UpdateLicenseManagerReportGenerator(ctx context.Context, params *licensemanager.UpdateLicenseManagerReportGeneratorInput, optFns ...func(*licensemanager.Options)) (*licensemanager.UpdateLicenseManagerReportGeneratorOutput, error)
	UpdateLicenseSpecificationsForResource(ctx context.Context, params *licensemanager.UpdateLicenseSpecificationsForResourceInput, optFns ...func(*licensemanager.Options)) (*licensemanager.UpdateLicenseSpecificationsForResourceOutput, error)
	UpdateServiceSettings(ctx context.Context, params *licensemanager.UpdateServiceSettingsInput, optFns ...func(*licensemanager.Options)) (*licensemanager.UpdateServiceSettingsOutput, error)
}
