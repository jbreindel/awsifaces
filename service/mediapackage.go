// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/mediapackage"
)

// MediapackageClient ...
type MediapackageClient interface {
	Options() mediapackage.Options
	ConfigureLogs(ctx context.Context, params *mediapackage.ConfigureLogsInput, optFns ...func(*mediapackage.Options)) (*mediapackage.ConfigureLogsOutput, error)
	CreateChannel(ctx context.Context, params *mediapackage.CreateChannelInput, optFns ...func(*mediapackage.Options)) (*mediapackage.CreateChannelOutput, error)
	CreateHarvestJob(ctx context.Context, params *mediapackage.CreateHarvestJobInput, optFns ...func(*mediapackage.Options)) (*mediapackage.CreateHarvestJobOutput, error)
	CreateOriginEndpoint(ctx context.Context, params *mediapackage.CreateOriginEndpointInput, optFns ...func(*mediapackage.Options)) (*mediapackage.CreateOriginEndpointOutput, error)
	DeleteChannel(ctx context.Context, params *mediapackage.DeleteChannelInput, optFns ...func(*mediapackage.Options)) (*mediapackage.DeleteChannelOutput, error)
	DeleteOriginEndpoint(ctx context.Context, params *mediapackage.DeleteOriginEndpointInput, optFns ...func(*mediapackage.Options)) (*mediapackage.DeleteOriginEndpointOutput, error)
	DescribeChannel(ctx context.Context, params *mediapackage.DescribeChannelInput, optFns ...func(*mediapackage.Options)) (*mediapackage.DescribeChannelOutput, error)
	DescribeHarvestJob(ctx context.Context, params *mediapackage.DescribeHarvestJobInput, optFns ...func(*mediapackage.Options)) (*mediapackage.DescribeHarvestJobOutput, error)
	DescribeOriginEndpoint(ctx context.Context, params *mediapackage.DescribeOriginEndpointInput, optFns ...func(*mediapackage.Options)) (*mediapackage.DescribeOriginEndpointOutput, error)
	ListChannels(ctx context.Context, params *mediapackage.ListChannelsInput, optFns ...func(*mediapackage.Options)) (*mediapackage.ListChannelsOutput, error)
	ListHarvestJobs(ctx context.Context, params *mediapackage.ListHarvestJobsInput, optFns ...func(*mediapackage.Options)) (*mediapackage.ListHarvestJobsOutput, error)
	ListOriginEndpoints(ctx context.Context, params *mediapackage.ListOriginEndpointsInput, optFns ...func(*mediapackage.Options)) (*mediapackage.ListOriginEndpointsOutput, error)
	ListTagsForResource(ctx context.Context, params *mediapackage.ListTagsForResourceInput, optFns ...func(*mediapackage.Options)) (*mediapackage.ListTagsForResourceOutput, error)
	RotateChannelCredentials(ctx context.Context, params *mediapackage.RotateChannelCredentialsInput, optFns ...func(*mediapackage.Options)) (*mediapackage.RotateChannelCredentialsOutput, error)
	RotateIngestEndpointCredentials(ctx context.Context, params *mediapackage.RotateIngestEndpointCredentialsInput, optFns ...func(*mediapackage.Options)) (*mediapackage.RotateIngestEndpointCredentialsOutput, error)
	TagResource(ctx context.Context, params *mediapackage.TagResourceInput, optFns ...func(*mediapackage.Options)) (*mediapackage.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *mediapackage.UntagResourceInput, optFns ...func(*mediapackage.Options)) (*mediapackage.UntagResourceOutput, error)
	UpdateChannel(ctx context.Context, params *mediapackage.UpdateChannelInput, optFns ...func(*mediapackage.Options)) (*mediapackage.UpdateChannelOutput, error)
	UpdateOriginEndpoint(ctx context.Context, params *mediapackage.UpdateOriginEndpointInput, optFns ...func(*mediapackage.Options)) (*mediapackage.UpdateOriginEndpointOutput, error)
}
