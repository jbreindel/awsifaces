// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/wisdom"
)

// WisdomClient ...
type WisdomClient interface {
	Options() wisdom.Options
	CreateAssistant(ctx context.Context, params *wisdom.CreateAssistantInput, optFns ...func(*wisdom.Options)) (*wisdom.CreateAssistantOutput, error)
	CreateAssistantAssociation(ctx context.Context, params *wisdom.CreateAssistantAssociationInput, optFns ...func(*wisdom.Options)) (*wisdom.CreateAssistantAssociationOutput, error)
	CreateContent(ctx context.Context, params *wisdom.CreateContentInput, optFns ...func(*wisdom.Options)) (*wisdom.CreateContentOutput, error)
	CreateKnowledgeBase(ctx context.Context, params *wisdom.CreateKnowledgeBaseInput, optFns ...func(*wisdom.Options)) (*wisdom.CreateKnowledgeBaseOutput, error)
	CreateQuickResponse(ctx context.Context, params *wisdom.CreateQuickResponseInput, optFns ...func(*wisdom.Options)) (*wisdom.CreateQuickResponseOutput, error)
	CreateSession(ctx context.Context, params *wisdom.CreateSessionInput, optFns ...func(*wisdom.Options)) (*wisdom.CreateSessionOutput, error)
	DeleteAssistant(ctx context.Context, params *wisdom.DeleteAssistantInput, optFns ...func(*wisdom.Options)) (*wisdom.DeleteAssistantOutput, error)
	DeleteAssistantAssociation(ctx context.Context, params *wisdom.DeleteAssistantAssociationInput, optFns ...func(*wisdom.Options)) (*wisdom.DeleteAssistantAssociationOutput, error)
	DeleteContent(ctx context.Context, params *wisdom.DeleteContentInput, optFns ...func(*wisdom.Options)) (*wisdom.DeleteContentOutput, error)
	DeleteImportJob(ctx context.Context, params *wisdom.DeleteImportJobInput, optFns ...func(*wisdom.Options)) (*wisdom.DeleteImportJobOutput, error)
	DeleteKnowledgeBase(ctx context.Context, params *wisdom.DeleteKnowledgeBaseInput, optFns ...func(*wisdom.Options)) (*wisdom.DeleteKnowledgeBaseOutput, error)
	DeleteQuickResponse(ctx context.Context, params *wisdom.DeleteQuickResponseInput, optFns ...func(*wisdom.Options)) (*wisdom.DeleteQuickResponseOutput, error)
	GetAssistant(ctx context.Context, params *wisdom.GetAssistantInput, optFns ...func(*wisdom.Options)) (*wisdom.GetAssistantOutput, error)
	GetAssistantAssociation(ctx context.Context, params *wisdom.GetAssistantAssociationInput, optFns ...func(*wisdom.Options)) (*wisdom.GetAssistantAssociationOutput, error)
	GetContent(ctx context.Context, params *wisdom.GetContentInput, optFns ...func(*wisdom.Options)) (*wisdom.GetContentOutput, error)
	GetContentSummary(ctx context.Context, params *wisdom.GetContentSummaryInput, optFns ...func(*wisdom.Options)) (*wisdom.GetContentSummaryOutput, error)
	GetImportJob(ctx context.Context, params *wisdom.GetImportJobInput, optFns ...func(*wisdom.Options)) (*wisdom.GetImportJobOutput, error)
	GetKnowledgeBase(ctx context.Context, params *wisdom.GetKnowledgeBaseInput, optFns ...func(*wisdom.Options)) (*wisdom.GetKnowledgeBaseOutput, error)
	GetQuickResponse(ctx context.Context, params *wisdom.GetQuickResponseInput, optFns ...func(*wisdom.Options)) (*wisdom.GetQuickResponseOutput, error)
	GetRecommendations(ctx context.Context, params *wisdom.GetRecommendationsInput, optFns ...func(*wisdom.Options)) (*wisdom.GetRecommendationsOutput, error)
	GetSession(ctx context.Context, params *wisdom.GetSessionInput, optFns ...func(*wisdom.Options)) (*wisdom.GetSessionOutput, error)
	ListAssistantAssociations(ctx context.Context, params *wisdom.ListAssistantAssociationsInput, optFns ...func(*wisdom.Options)) (*wisdom.ListAssistantAssociationsOutput, error)
	ListAssistants(ctx context.Context, params *wisdom.ListAssistantsInput, optFns ...func(*wisdom.Options)) (*wisdom.ListAssistantsOutput, error)
	ListContents(ctx context.Context, params *wisdom.ListContentsInput, optFns ...func(*wisdom.Options)) (*wisdom.ListContentsOutput, error)
	ListImportJobs(ctx context.Context, params *wisdom.ListImportJobsInput, optFns ...func(*wisdom.Options)) (*wisdom.ListImportJobsOutput, error)
	ListKnowledgeBases(ctx context.Context, params *wisdom.ListKnowledgeBasesInput, optFns ...func(*wisdom.Options)) (*wisdom.ListKnowledgeBasesOutput, error)
	ListQuickResponses(ctx context.Context, params *wisdom.ListQuickResponsesInput, optFns ...func(*wisdom.Options)) (*wisdom.ListQuickResponsesOutput, error)
	ListTagsForResource(ctx context.Context, params *wisdom.ListTagsForResourceInput, optFns ...func(*wisdom.Options)) (*wisdom.ListTagsForResourceOutput, error)
	NotifyRecommendationsReceived(ctx context.Context, params *wisdom.NotifyRecommendationsReceivedInput, optFns ...func(*wisdom.Options)) (*wisdom.NotifyRecommendationsReceivedOutput, error)
	QueryAssistant(ctx context.Context, params *wisdom.QueryAssistantInput, optFns ...func(*wisdom.Options)) (*wisdom.QueryAssistantOutput, error)
	RemoveKnowledgeBaseTemplateUri(ctx context.Context, params *wisdom.RemoveKnowledgeBaseTemplateUriInput, optFns ...func(*wisdom.Options)) (*wisdom.RemoveKnowledgeBaseTemplateUriOutput, error)
	SearchContent(ctx context.Context, params *wisdom.SearchContentInput, optFns ...func(*wisdom.Options)) (*wisdom.SearchContentOutput, error)
	SearchQuickResponses(ctx context.Context, params *wisdom.SearchQuickResponsesInput, optFns ...func(*wisdom.Options)) (*wisdom.SearchQuickResponsesOutput, error)
	SearchSessions(ctx context.Context, params *wisdom.SearchSessionsInput, optFns ...func(*wisdom.Options)) (*wisdom.SearchSessionsOutput, error)
	StartContentUpload(ctx context.Context, params *wisdom.StartContentUploadInput, optFns ...func(*wisdom.Options)) (*wisdom.StartContentUploadOutput, error)
	StartImportJob(ctx context.Context, params *wisdom.StartImportJobInput, optFns ...func(*wisdom.Options)) (*wisdom.StartImportJobOutput, error)
	TagResource(ctx context.Context, params *wisdom.TagResourceInput, optFns ...func(*wisdom.Options)) (*wisdom.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *wisdom.UntagResourceInput, optFns ...func(*wisdom.Options)) (*wisdom.UntagResourceOutput, error)
	UpdateContent(ctx context.Context, params *wisdom.UpdateContentInput, optFns ...func(*wisdom.Options)) (*wisdom.UpdateContentOutput, error)
	UpdateKnowledgeBaseTemplateUri(ctx context.Context, params *wisdom.UpdateKnowledgeBaseTemplateUriInput, optFns ...func(*wisdom.Options)) (*wisdom.UpdateKnowledgeBaseTemplateUriOutput, error)
	UpdateQuickResponse(ctx context.Context, params *wisdom.UpdateQuickResponseInput, optFns ...func(*wisdom.Options)) (*wisdom.UpdateQuickResponseOutput, error)
}
