// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/workspacesthinclient"
)

// WorkspacesthinclientClient ...
type WorkspacesthinclientClient interface {
	Options() workspacesthinclient.Options
	CreateEnvironment(ctx context.Context, params *workspacesthinclient.CreateEnvironmentInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.CreateEnvironmentOutput, error)
	DeleteDevice(ctx context.Context, params *workspacesthinclient.DeleteDeviceInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.DeleteDeviceOutput, error)
	DeleteEnvironment(ctx context.Context, params *workspacesthinclient.DeleteEnvironmentInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.DeleteEnvironmentOutput, error)
	DeregisterDevice(ctx context.Context, params *workspacesthinclient.DeregisterDeviceInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.DeregisterDeviceOutput, error)
	GetDevice(ctx context.Context, params *workspacesthinclient.GetDeviceInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.GetDeviceOutput, error)
	GetEnvironment(ctx context.Context, params *workspacesthinclient.GetEnvironmentInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.GetEnvironmentOutput, error)
	GetSoftwareSet(ctx context.Context, params *workspacesthinclient.GetSoftwareSetInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.GetSoftwareSetOutput, error)
	ListDevices(ctx context.Context, params *workspacesthinclient.ListDevicesInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.ListDevicesOutput, error)
	ListEnvironments(ctx context.Context, params *workspacesthinclient.ListEnvironmentsInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.ListEnvironmentsOutput, error)
	ListSoftwareSets(ctx context.Context, params *workspacesthinclient.ListSoftwareSetsInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.ListSoftwareSetsOutput, error)
	ListTagsForResource(ctx context.Context, params *workspacesthinclient.ListTagsForResourceInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.ListTagsForResourceOutput, error)
	TagResource(ctx context.Context, params *workspacesthinclient.TagResourceInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *workspacesthinclient.UntagResourceInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.UntagResourceOutput, error)
	UpdateDevice(ctx context.Context, params *workspacesthinclient.UpdateDeviceInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.UpdateDeviceOutput, error)
	UpdateEnvironment(ctx context.Context, params *workspacesthinclient.UpdateEnvironmentInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.UpdateEnvironmentOutput, error)
	UpdateSoftwareSet(ctx context.Context, params *workspacesthinclient.UpdateSoftwareSetInput, optFns ...func(*workspacesthinclient.Options)) (*workspacesthinclient.UpdateSoftwareSetOutput, error)
}
