// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/datapipeline"
)

// DatapipelineClient ...
type DatapipelineClient interface {
	Options() datapipeline.Options
	ActivatePipeline(ctx context.Context, params *datapipeline.ActivatePipelineInput, optFns ...func(*datapipeline.Options)) (*datapipeline.ActivatePipelineOutput, error)
	AddTags(ctx context.Context, params *datapipeline.AddTagsInput, optFns ...func(*datapipeline.Options)) (*datapipeline.AddTagsOutput, error)
	CreatePipeline(ctx context.Context, params *datapipeline.CreatePipelineInput, optFns ...func(*datapipeline.Options)) (*datapipeline.CreatePipelineOutput, error)
	DeactivatePipeline(ctx context.Context, params *datapipeline.DeactivatePipelineInput, optFns ...func(*datapipeline.Options)) (*datapipeline.DeactivatePipelineOutput, error)
	DeletePipeline(ctx context.Context, params *datapipeline.DeletePipelineInput, optFns ...func(*datapipeline.Options)) (*datapipeline.DeletePipelineOutput, error)
	DescribeObjects(ctx context.Context, params *datapipeline.DescribeObjectsInput, optFns ...func(*datapipeline.Options)) (*datapipeline.DescribeObjectsOutput, error)
	DescribePipelines(ctx context.Context, params *datapipeline.DescribePipelinesInput, optFns ...func(*datapipeline.Options)) (*datapipeline.DescribePipelinesOutput, error)
	EvaluateExpression(ctx context.Context, params *datapipeline.EvaluateExpressionInput, optFns ...func(*datapipeline.Options)) (*datapipeline.EvaluateExpressionOutput, error)
	GetPipelineDefinition(ctx context.Context, params *datapipeline.GetPipelineDefinitionInput, optFns ...func(*datapipeline.Options)) (*datapipeline.GetPipelineDefinitionOutput, error)
	ListPipelines(ctx context.Context, params *datapipeline.ListPipelinesInput, optFns ...func(*datapipeline.Options)) (*datapipeline.ListPipelinesOutput, error)
	PollForTask(ctx context.Context, params *datapipeline.PollForTaskInput, optFns ...func(*datapipeline.Options)) (*datapipeline.PollForTaskOutput, error)
	PutPipelineDefinition(ctx context.Context, params *datapipeline.PutPipelineDefinitionInput, optFns ...func(*datapipeline.Options)) (*datapipeline.PutPipelineDefinitionOutput, error)
	QueryObjects(ctx context.Context, params *datapipeline.QueryObjectsInput, optFns ...func(*datapipeline.Options)) (*datapipeline.QueryObjectsOutput, error)
	RemoveTags(ctx context.Context, params *datapipeline.RemoveTagsInput, optFns ...func(*datapipeline.Options)) (*datapipeline.RemoveTagsOutput, error)
	ReportTaskProgress(ctx context.Context, params *datapipeline.ReportTaskProgressInput, optFns ...func(*datapipeline.Options)) (*datapipeline.ReportTaskProgressOutput, error)
	ReportTaskRunnerHeartbeat(ctx context.Context, params *datapipeline.ReportTaskRunnerHeartbeatInput, optFns ...func(*datapipeline.Options)) (*datapipeline.ReportTaskRunnerHeartbeatOutput, error)
	SetStatus(ctx context.Context, params *datapipeline.SetStatusInput, optFns ...func(*datapipeline.Options)) (*datapipeline.SetStatusOutput, error)
	SetTaskStatus(ctx context.Context, params *datapipeline.SetTaskStatusInput, optFns ...func(*datapipeline.Options)) (*datapipeline.SetTaskStatusOutput, error)
	ValidatePipelineDefinition(ctx context.Context, params *datapipeline.ValidatePipelineDefinitionInput, optFns ...func(*datapipeline.Options)) (*datapipeline.ValidatePipelineDefinitionOutput, error)
}
