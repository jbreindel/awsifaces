// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/appfabric"
)

// AppfabricClient ...
type AppfabricClient interface {
	Options() appfabric.Options
	BatchGetUserAccessTasks(ctx context.Context, params *appfabric.BatchGetUserAccessTasksInput, optFns ...func(*appfabric.Options)) (*appfabric.BatchGetUserAccessTasksOutput, error)
	ConnectAppAuthorization(ctx context.Context, params *appfabric.ConnectAppAuthorizationInput, optFns ...func(*appfabric.Options)) (*appfabric.ConnectAppAuthorizationOutput, error)
	CreateAppAuthorization(ctx context.Context, params *appfabric.CreateAppAuthorizationInput, optFns ...func(*appfabric.Options)) (*appfabric.CreateAppAuthorizationOutput, error)
	CreateAppBundle(ctx context.Context, params *appfabric.CreateAppBundleInput, optFns ...func(*appfabric.Options)) (*appfabric.CreateAppBundleOutput, error)
	CreateIngestion(ctx context.Context, params *appfabric.CreateIngestionInput, optFns ...func(*appfabric.Options)) (*appfabric.CreateIngestionOutput, error)
	CreateIngestionDestination(ctx context.Context, params *appfabric.CreateIngestionDestinationInput, optFns ...func(*appfabric.Options)) (*appfabric.CreateIngestionDestinationOutput, error)
	DeleteAppAuthorization(ctx context.Context, params *appfabric.DeleteAppAuthorizationInput, optFns ...func(*appfabric.Options)) (*appfabric.DeleteAppAuthorizationOutput, error)
	DeleteAppBundle(ctx context.Context, params *appfabric.DeleteAppBundleInput, optFns ...func(*appfabric.Options)) (*appfabric.DeleteAppBundleOutput, error)
	DeleteIngestion(ctx context.Context, params *appfabric.DeleteIngestionInput, optFns ...func(*appfabric.Options)) (*appfabric.DeleteIngestionOutput, error)
	DeleteIngestionDestination(ctx context.Context, params *appfabric.DeleteIngestionDestinationInput, optFns ...func(*appfabric.Options)) (*appfabric.DeleteIngestionDestinationOutput, error)
	GetAppAuthorization(ctx context.Context, params *appfabric.GetAppAuthorizationInput, optFns ...func(*appfabric.Options)) (*appfabric.GetAppAuthorizationOutput, error)
	GetAppBundle(ctx context.Context, params *appfabric.GetAppBundleInput, optFns ...func(*appfabric.Options)) (*appfabric.GetAppBundleOutput, error)
	GetIngestion(ctx context.Context, params *appfabric.GetIngestionInput, optFns ...func(*appfabric.Options)) (*appfabric.GetIngestionOutput, error)
	GetIngestionDestination(ctx context.Context, params *appfabric.GetIngestionDestinationInput, optFns ...func(*appfabric.Options)) (*appfabric.GetIngestionDestinationOutput, error)
	ListAppAuthorizations(ctx context.Context, params *appfabric.ListAppAuthorizationsInput, optFns ...func(*appfabric.Options)) (*appfabric.ListAppAuthorizationsOutput, error)
	ListAppBundles(ctx context.Context, params *appfabric.ListAppBundlesInput, optFns ...func(*appfabric.Options)) (*appfabric.ListAppBundlesOutput, error)
	ListIngestionDestinations(ctx context.Context, params *appfabric.ListIngestionDestinationsInput, optFns ...func(*appfabric.Options)) (*appfabric.ListIngestionDestinationsOutput, error)
	ListIngestions(ctx context.Context, params *appfabric.ListIngestionsInput, optFns ...func(*appfabric.Options)) (*appfabric.ListIngestionsOutput, error)
	ListTagsForResource(ctx context.Context, params *appfabric.ListTagsForResourceInput, optFns ...func(*appfabric.Options)) (*appfabric.ListTagsForResourceOutput, error)
	StartIngestion(ctx context.Context, params *appfabric.StartIngestionInput, optFns ...func(*appfabric.Options)) (*appfabric.StartIngestionOutput, error)
	StartUserAccessTasks(ctx context.Context, params *appfabric.StartUserAccessTasksInput, optFns ...func(*appfabric.Options)) (*appfabric.StartUserAccessTasksOutput, error)
	StopIngestion(ctx context.Context, params *appfabric.StopIngestionInput, optFns ...func(*appfabric.Options)) (*appfabric.StopIngestionOutput, error)
	TagResource(ctx context.Context, params *appfabric.TagResourceInput, optFns ...func(*appfabric.Options)) (*appfabric.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *appfabric.UntagResourceInput, optFns ...func(*appfabric.Options)) (*appfabric.UntagResourceOutput, error)
	UpdateAppAuthorization(ctx context.Context, params *appfabric.UpdateAppAuthorizationInput, optFns ...func(*appfabric.Options)) (*appfabric.UpdateAppAuthorizationOutput, error)
	UpdateIngestionDestination(ctx context.Context, params *appfabric.UpdateIngestionDestinationInput, optFns ...func(*appfabric.Options)) (*appfabric.UpdateIngestionDestinationOutput, error)
}
