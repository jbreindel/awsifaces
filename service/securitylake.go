// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/securitylake"
)

// SecuritylakeClient ...
type SecuritylakeClient interface {
	Options() securitylake.Options
	CreateAwsLogSource(ctx context.Context, params *securitylake.CreateAwsLogSourceInput, optFns ...func(*securitylake.Options)) (*securitylake.CreateAwsLogSourceOutput, error)
	CreateCustomLogSource(ctx context.Context, params *securitylake.CreateCustomLogSourceInput, optFns ...func(*securitylake.Options)) (*securitylake.CreateCustomLogSourceOutput, error)
	CreateDataLake(ctx context.Context, params *securitylake.CreateDataLakeInput, optFns ...func(*securitylake.Options)) (*securitylake.CreateDataLakeOutput, error)
	CreateDataLakeExceptionSubscription(ctx context.Context, params *securitylake.CreateDataLakeExceptionSubscriptionInput, optFns ...func(*securitylake.Options)) (*securitylake.CreateDataLakeExceptionSubscriptionOutput, error)
	CreateDataLakeOrganizationConfiguration(ctx context.Context, params *securitylake.CreateDataLakeOrganizationConfigurationInput, optFns ...func(*securitylake.Options)) (*securitylake.CreateDataLakeOrganizationConfigurationOutput, error)
	CreateSubscriber(ctx context.Context, params *securitylake.CreateSubscriberInput, optFns ...func(*securitylake.Options)) (*securitylake.CreateSubscriberOutput, error)
	CreateSubscriberNotification(ctx context.Context, params *securitylake.CreateSubscriberNotificationInput, optFns ...func(*securitylake.Options)) (*securitylake.CreateSubscriberNotificationOutput, error)
	DeleteAwsLogSource(ctx context.Context, params *securitylake.DeleteAwsLogSourceInput, optFns ...func(*securitylake.Options)) (*securitylake.DeleteAwsLogSourceOutput, error)
	DeleteCustomLogSource(ctx context.Context, params *securitylake.DeleteCustomLogSourceInput, optFns ...func(*securitylake.Options)) (*securitylake.DeleteCustomLogSourceOutput, error)
	DeleteDataLake(ctx context.Context, params *securitylake.DeleteDataLakeInput, optFns ...func(*securitylake.Options)) (*securitylake.DeleteDataLakeOutput, error)
	DeleteDataLakeExceptionSubscription(ctx context.Context, params *securitylake.DeleteDataLakeExceptionSubscriptionInput, optFns ...func(*securitylake.Options)) (*securitylake.DeleteDataLakeExceptionSubscriptionOutput, error)
	DeleteDataLakeOrganizationConfiguration(ctx context.Context, params *securitylake.DeleteDataLakeOrganizationConfigurationInput, optFns ...func(*securitylake.Options)) (*securitylake.DeleteDataLakeOrganizationConfigurationOutput, error)
	DeleteSubscriber(ctx context.Context, params *securitylake.DeleteSubscriberInput, optFns ...func(*securitylake.Options)) (*securitylake.DeleteSubscriberOutput, error)
	DeleteSubscriberNotification(ctx context.Context, params *securitylake.DeleteSubscriberNotificationInput, optFns ...func(*securitylake.Options)) (*securitylake.DeleteSubscriberNotificationOutput, error)
	DeregisterDataLakeDelegatedAdministrator(ctx context.Context, params *securitylake.DeregisterDataLakeDelegatedAdministratorInput, optFns ...func(*securitylake.Options)) (*securitylake.DeregisterDataLakeDelegatedAdministratorOutput, error)
	GetDataLakeExceptionSubscription(ctx context.Context, params *securitylake.GetDataLakeExceptionSubscriptionInput, optFns ...func(*securitylake.Options)) (*securitylake.GetDataLakeExceptionSubscriptionOutput, error)
	GetDataLakeOrganizationConfiguration(ctx context.Context, params *securitylake.GetDataLakeOrganizationConfigurationInput, optFns ...func(*securitylake.Options)) (*securitylake.GetDataLakeOrganizationConfigurationOutput, error)
	GetDataLakeSources(ctx context.Context, params *securitylake.GetDataLakeSourcesInput, optFns ...func(*securitylake.Options)) (*securitylake.GetDataLakeSourcesOutput, error)
	GetSubscriber(ctx context.Context, params *securitylake.GetSubscriberInput, optFns ...func(*securitylake.Options)) (*securitylake.GetSubscriberOutput, error)
	ListDataLakeExceptions(ctx context.Context, params *securitylake.ListDataLakeExceptionsInput, optFns ...func(*securitylake.Options)) (*securitylake.ListDataLakeExceptionsOutput, error)
	ListDataLakes(ctx context.Context, params *securitylake.ListDataLakesInput, optFns ...func(*securitylake.Options)) (*securitylake.ListDataLakesOutput, error)
	ListLogSources(ctx context.Context, params *securitylake.ListLogSourcesInput, optFns ...func(*securitylake.Options)) (*securitylake.ListLogSourcesOutput, error)
	ListSubscribers(ctx context.Context, params *securitylake.ListSubscribersInput, optFns ...func(*securitylake.Options)) (*securitylake.ListSubscribersOutput, error)
	ListTagsForResource(ctx context.Context, params *securitylake.ListTagsForResourceInput, optFns ...func(*securitylake.Options)) (*securitylake.ListTagsForResourceOutput, error)
	RegisterDataLakeDelegatedAdministrator(ctx context.Context, params *securitylake.RegisterDataLakeDelegatedAdministratorInput, optFns ...func(*securitylake.Options)) (*securitylake.RegisterDataLakeDelegatedAdministratorOutput, error)
	TagResource(ctx context.Context, params *securitylake.TagResourceInput, optFns ...func(*securitylake.Options)) (*securitylake.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *securitylake.UntagResourceInput, optFns ...func(*securitylake.Options)) (*securitylake.UntagResourceOutput, error)
	UpdateDataLake(ctx context.Context, params *securitylake.UpdateDataLakeInput, optFns ...func(*securitylake.Options)) (*securitylake.UpdateDataLakeOutput, error)
	UpdateDataLakeExceptionSubscription(ctx context.Context, params *securitylake.UpdateDataLakeExceptionSubscriptionInput, optFns ...func(*securitylake.Options)) (*securitylake.UpdateDataLakeExceptionSubscriptionOutput, error)
	UpdateSubscriber(ctx context.Context, params *securitylake.UpdateSubscriberInput, optFns ...func(*securitylake.Options)) (*securitylake.UpdateSubscriberOutput, error)
	UpdateSubscriberNotification(ctx context.Context, params *securitylake.UpdateSubscriberNotificationInput, optFns ...func(*securitylake.Options)) (*securitylake.UpdateSubscriberNotificationOutput, error)
}
