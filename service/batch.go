// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/batch"
)

// BatchClient ...
type BatchClient interface {
	Options() batch.Options
	CancelJob(ctx context.Context, params *batch.CancelJobInput, optFns ...func(*batch.Options)) (*batch.CancelJobOutput, error)
	CreateComputeEnvironment(ctx context.Context, params *batch.CreateComputeEnvironmentInput, optFns ...func(*batch.Options)) (*batch.CreateComputeEnvironmentOutput, error)
	CreateJobQueue(ctx context.Context, params *batch.CreateJobQueueInput, optFns ...func(*batch.Options)) (*batch.CreateJobQueueOutput, error)
	CreateSchedulingPolicy(ctx context.Context, params *batch.CreateSchedulingPolicyInput, optFns ...func(*batch.Options)) (*batch.CreateSchedulingPolicyOutput, error)
	DeleteComputeEnvironment(ctx context.Context, params *batch.DeleteComputeEnvironmentInput, optFns ...func(*batch.Options)) (*batch.DeleteComputeEnvironmentOutput, error)
	DeleteJobQueue(ctx context.Context, params *batch.DeleteJobQueueInput, optFns ...func(*batch.Options)) (*batch.DeleteJobQueueOutput, error)
	DeleteSchedulingPolicy(ctx context.Context, params *batch.DeleteSchedulingPolicyInput, optFns ...func(*batch.Options)) (*batch.DeleteSchedulingPolicyOutput, error)
	DeregisterJobDefinition(ctx context.Context, params *batch.DeregisterJobDefinitionInput, optFns ...func(*batch.Options)) (*batch.DeregisterJobDefinitionOutput, error)
	DescribeComputeEnvironments(ctx context.Context, params *batch.DescribeComputeEnvironmentsInput, optFns ...func(*batch.Options)) (*batch.DescribeComputeEnvironmentsOutput, error)
	DescribeJobDefinitions(ctx context.Context, params *batch.DescribeJobDefinitionsInput, optFns ...func(*batch.Options)) (*batch.DescribeJobDefinitionsOutput, error)
	DescribeJobQueues(ctx context.Context, params *batch.DescribeJobQueuesInput, optFns ...func(*batch.Options)) (*batch.DescribeJobQueuesOutput, error)
	DescribeJobs(ctx context.Context, params *batch.DescribeJobsInput, optFns ...func(*batch.Options)) (*batch.DescribeJobsOutput, error)
	DescribeSchedulingPolicies(ctx context.Context, params *batch.DescribeSchedulingPoliciesInput, optFns ...func(*batch.Options)) (*batch.DescribeSchedulingPoliciesOutput, error)
	ListJobs(ctx context.Context, params *batch.ListJobsInput, optFns ...func(*batch.Options)) (*batch.ListJobsOutput, error)
	ListSchedulingPolicies(ctx context.Context, params *batch.ListSchedulingPoliciesInput, optFns ...func(*batch.Options)) (*batch.ListSchedulingPoliciesOutput, error)
	ListTagsForResource(ctx context.Context, params *batch.ListTagsForResourceInput, optFns ...func(*batch.Options)) (*batch.ListTagsForResourceOutput, error)
	RegisterJobDefinition(ctx context.Context, params *batch.RegisterJobDefinitionInput, optFns ...func(*batch.Options)) (*batch.RegisterJobDefinitionOutput, error)
	SubmitJob(ctx context.Context, params *batch.SubmitJobInput, optFns ...func(*batch.Options)) (*batch.SubmitJobOutput, error)
	TagResource(ctx context.Context, params *batch.TagResourceInput, optFns ...func(*batch.Options)) (*batch.TagResourceOutput, error)
	TerminateJob(ctx context.Context, params *batch.TerminateJobInput, optFns ...func(*batch.Options)) (*batch.TerminateJobOutput, error)
	UntagResource(ctx context.Context, params *batch.UntagResourceInput, optFns ...func(*batch.Options)) (*batch.UntagResourceOutput, error)
	UpdateComputeEnvironment(ctx context.Context, params *batch.UpdateComputeEnvironmentInput, optFns ...func(*batch.Options)) (*batch.UpdateComputeEnvironmentOutput, error)
	UpdateJobQueue(ctx context.Context, params *batch.UpdateJobQueueInput, optFns ...func(*batch.Options)) (*batch.UpdateJobQueueOutput, error)
	UpdateSchedulingPolicy(ctx context.Context, params *batch.UpdateSchedulingPolicyInput, optFns ...func(*batch.Options)) (*batch.UpdateSchedulingPolicyOutput, error)
}
