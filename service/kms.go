// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/kms"
)

// KmsClient ...
type KmsClient interface {
	Options() kms.Options
	CancelKeyDeletion(ctx context.Context, params *kms.CancelKeyDeletionInput, optFns ...func(*kms.Options)) (*kms.CancelKeyDeletionOutput, error)
	ConnectCustomKeyStore(ctx context.Context, params *kms.ConnectCustomKeyStoreInput, optFns ...func(*kms.Options)) (*kms.ConnectCustomKeyStoreOutput, error)
	CreateAlias(ctx context.Context, params *kms.CreateAliasInput, optFns ...func(*kms.Options)) (*kms.CreateAliasOutput, error)
	CreateCustomKeyStore(ctx context.Context, params *kms.CreateCustomKeyStoreInput, optFns ...func(*kms.Options)) (*kms.CreateCustomKeyStoreOutput, error)
	CreateGrant(ctx context.Context, params *kms.CreateGrantInput, optFns ...func(*kms.Options)) (*kms.CreateGrantOutput, error)
	CreateKey(ctx context.Context, params *kms.CreateKeyInput, optFns ...func(*kms.Options)) (*kms.CreateKeyOutput, error)
	Decrypt(ctx context.Context, params *kms.DecryptInput, optFns ...func(*kms.Options)) (*kms.DecryptOutput, error)
	DeleteAlias(ctx context.Context, params *kms.DeleteAliasInput, optFns ...func(*kms.Options)) (*kms.DeleteAliasOutput, error)
	DeleteCustomKeyStore(ctx context.Context, params *kms.DeleteCustomKeyStoreInput, optFns ...func(*kms.Options)) (*kms.DeleteCustomKeyStoreOutput, error)
	DeleteImportedKeyMaterial(ctx context.Context, params *kms.DeleteImportedKeyMaterialInput, optFns ...func(*kms.Options)) (*kms.DeleteImportedKeyMaterialOutput, error)
	DescribeCustomKeyStores(ctx context.Context, params *kms.DescribeCustomKeyStoresInput, optFns ...func(*kms.Options)) (*kms.DescribeCustomKeyStoresOutput, error)
	DescribeKey(ctx context.Context, params *kms.DescribeKeyInput, optFns ...func(*kms.Options)) (*kms.DescribeKeyOutput, error)
	DisableKey(ctx context.Context, params *kms.DisableKeyInput, optFns ...func(*kms.Options)) (*kms.DisableKeyOutput, error)
	DisableKeyRotation(ctx context.Context, params *kms.DisableKeyRotationInput, optFns ...func(*kms.Options)) (*kms.DisableKeyRotationOutput, error)
	DisconnectCustomKeyStore(ctx context.Context, params *kms.DisconnectCustomKeyStoreInput, optFns ...func(*kms.Options)) (*kms.DisconnectCustomKeyStoreOutput, error)
	EnableKey(ctx context.Context, params *kms.EnableKeyInput, optFns ...func(*kms.Options)) (*kms.EnableKeyOutput, error)
	EnableKeyRotation(ctx context.Context, params *kms.EnableKeyRotationInput, optFns ...func(*kms.Options)) (*kms.EnableKeyRotationOutput, error)
	Encrypt(ctx context.Context, params *kms.EncryptInput, optFns ...func(*kms.Options)) (*kms.EncryptOutput, error)
	GenerateDataKey(ctx context.Context, params *kms.GenerateDataKeyInput, optFns ...func(*kms.Options)) (*kms.GenerateDataKeyOutput, error)
	GenerateDataKeyPair(ctx context.Context, params *kms.GenerateDataKeyPairInput, optFns ...func(*kms.Options)) (*kms.GenerateDataKeyPairOutput, error)
	GenerateDataKeyPairWithoutPlaintext(ctx context.Context, params *kms.GenerateDataKeyPairWithoutPlaintextInput, optFns ...func(*kms.Options)) (*kms.GenerateDataKeyPairWithoutPlaintextOutput, error)
	GenerateDataKeyWithoutPlaintext(ctx context.Context, params *kms.GenerateDataKeyWithoutPlaintextInput, optFns ...func(*kms.Options)) (*kms.GenerateDataKeyWithoutPlaintextOutput, error)
	GenerateMac(ctx context.Context, params *kms.GenerateMacInput, optFns ...func(*kms.Options)) (*kms.GenerateMacOutput, error)
	GenerateRandom(ctx context.Context, params *kms.GenerateRandomInput, optFns ...func(*kms.Options)) (*kms.GenerateRandomOutput, error)
	GetKeyPolicy(ctx context.Context, params *kms.GetKeyPolicyInput, optFns ...func(*kms.Options)) (*kms.GetKeyPolicyOutput, error)
	GetKeyRotationStatus(ctx context.Context, params *kms.GetKeyRotationStatusInput, optFns ...func(*kms.Options)) (*kms.GetKeyRotationStatusOutput, error)
	GetParametersForImport(ctx context.Context, params *kms.GetParametersForImportInput, optFns ...func(*kms.Options)) (*kms.GetParametersForImportOutput, error)
	GetPublicKey(ctx context.Context, params *kms.GetPublicKeyInput, optFns ...func(*kms.Options)) (*kms.GetPublicKeyOutput, error)
	ImportKeyMaterial(ctx context.Context, params *kms.ImportKeyMaterialInput, optFns ...func(*kms.Options)) (*kms.ImportKeyMaterialOutput, error)
	ListAliases(ctx context.Context, params *kms.ListAliasesInput, optFns ...func(*kms.Options)) (*kms.ListAliasesOutput, error)
	ListGrants(ctx context.Context, params *kms.ListGrantsInput, optFns ...func(*kms.Options)) (*kms.ListGrantsOutput, error)
	ListKeyPolicies(ctx context.Context, params *kms.ListKeyPoliciesInput, optFns ...func(*kms.Options)) (*kms.ListKeyPoliciesOutput, error)
	ListKeys(ctx context.Context, params *kms.ListKeysInput, optFns ...func(*kms.Options)) (*kms.ListKeysOutput, error)
	ListResourceTags(ctx context.Context, params *kms.ListResourceTagsInput, optFns ...func(*kms.Options)) (*kms.ListResourceTagsOutput, error)
	ListRetirableGrants(ctx context.Context, params *kms.ListRetirableGrantsInput, optFns ...func(*kms.Options)) (*kms.ListRetirableGrantsOutput, error)
	PutKeyPolicy(ctx context.Context, params *kms.PutKeyPolicyInput, optFns ...func(*kms.Options)) (*kms.PutKeyPolicyOutput, error)
	ReEncrypt(ctx context.Context, params *kms.ReEncryptInput, optFns ...func(*kms.Options)) (*kms.ReEncryptOutput, error)
	ReplicateKey(ctx context.Context, params *kms.ReplicateKeyInput, optFns ...func(*kms.Options)) (*kms.ReplicateKeyOutput, error)
	RetireGrant(ctx context.Context, params *kms.RetireGrantInput, optFns ...func(*kms.Options)) (*kms.RetireGrantOutput, error)
	RevokeGrant(ctx context.Context, params *kms.RevokeGrantInput, optFns ...func(*kms.Options)) (*kms.RevokeGrantOutput, error)
	ScheduleKeyDeletion(ctx context.Context, params *kms.ScheduleKeyDeletionInput, optFns ...func(*kms.Options)) (*kms.ScheduleKeyDeletionOutput, error)
	Sign(ctx context.Context, params *kms.SignInput, optFns ...func(*kms.Options)) (*kms.SignOutput, error)
	TagResource(ctx context.Context, params *kms.TagResourceInput, optFns ...func(*kms.Options)) (*kms.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *kms.UntagResourceInput, optFns ...func(*kms.Options)) (*kms.UntagResourceOutput, error)
	UpdateAlias(ctx context.Context, params *kms.UpdateAliasInput, optFns ...func(*kms.Options)) (*kms.UpdateAliasOutput, error)
	UpdateCustomKeyStore(ctx context.Context, params *kms.UpdateCustomKeyStoreInput, optFns ...func(*kms.Options)) (*kms.UpdateCustomKeyStoreOutput, error)
	UpdateKeyDescription(ctx context.Context, params *kms.UpdateKeyDescriptionInput, optFns ...func(*kms.Options)) (*kms.UpdateKeyDescriptionOutput, error)
	UpdatePrimaryRegion(ctx context.Context, params *kms.UpdatePrimaryRegionInput, optFns ...func(*kms.Options)) (*kms.UpdatePrimaryRegionOutput, error)
	Verify(ctx context.Context, params *kms.VerifyInput, optFns ...func(*kms.Options)) (*kms.VerifyOutput, error)
	VerifyMac(ctx context.Context, params *kms.VerifyMacInput, optFns ...func(*kms.Options)) (*kms.VerifyMacOutput, error)
}
