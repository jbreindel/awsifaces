// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/cloudwatch"
)

// CloudwatchClient ...
type CloudwatchClient interface {
	Options() cloudwatch.Options
	DeleteAlarms(ctx context.Context, params *cloudwatch.DeleteAlarmsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DeleteAlarmsOutput, error)
	DeleteAnomalyDetector(ctx context.Context, params *cloudwatch.DeleteAnomalyDetectorInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DeleteAnomalyDetectorOutput, error)
	DeleteDashboards(ctx context.Context, params *cloudwatch.DeleteDashboardsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DeleteDashboardsOutput, error)
	DeleteInsightRules(ctx context.Context, params *cloudwatch.DeleteInsightRulesInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DeleteInsightRulesOutput, error)
	DeleteMetricStream(ctx context.Context, params *cloudwatch.DeleteMetricStreamInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DeleteMetricStreamOutput, error)
	DescribeAlarmHistory(ctx context.Context, params *cloudwatch.DescribeAlarmHistoryInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DescribeAlarmHistoryOutput, error)
	DescribeAlarms(ctx context.Context, params *cloudwatch.DescribeAlarmsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DescribeAlarmsOutput, error)
	DescribeAlarmsForMetric(ctx context.Context, params *cloudwatch.DescribeAlarmsForMetricInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DescribeAlarmsForMetricOutput, error)
	DescribeAnomalyDetectors(ctx context.Context, params *cloudwatch.DescribeAnomalyDetectorsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DescribeAnomalyDetectorsOutput, error)
	DescribeInsightRules(ctx context.Context, params *cloudwatch.DescribeInsightRulesInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DescribeInsightRulesOutput, error)
	DisableAlarmActions(ctx context.Context, params *cloudwatch.DisableAlarmActionsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DisableAlarmActionsOutput, error)
	DisableInsightRules(ctx context.Context, params *cloudwatch.DisableInsightRulesInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.DisableInsightRulesOutput, error)
	EnableAlarmActions(ctx context.Context, params *cloudwatch.EnableAlarmActionsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.EnableAlarmActionsOutput, error)
	EnableInsightRules(ctx context.Context, params *cloudwatch.EnableInsightRulesInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.EnableInsightRulesOutput, error)
	GetDashboard(ctx context.Context, params *cloudwatch.GetDashboardInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.GetDashboardOutput, error)
	GetInsightRuleReport(ctx context.Context, params *cloudwatch.GetInsightRuleReportInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.GetInsightRuleReportOutput, error)
	GetMetricData(ctx context.Context, params *cloudwatch.GetMetricDataInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.GetMetricDataOutput, error)
	GetMetricStatistics(ctx context.Context, params *cloudwatch.GetMetricStatisticsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.GetMetricStatisticsOutput, error)
	GetMetricStream(ctx context.Context, params *cloudwatch.GetMetricStreamInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.GetMetricStreamOutput, error)
	GetMetricWidgetImage(ctx context.Context, params *cloudwatch.GetMetricWidgetImageInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.GetMetricWidgetImageOutput, error)
	ListDashboards(ctx context.Context, params *cloudwatch.ListDashboardsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.ListDashboardsOutput, error)
	ListManagedInsightRules(ctx context.Context, params *cloudwatch.ListManagedInsightRulesInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.ListManagedInsightRulesOutput, error)
	ListMetricStreams(ctx context.Context, params *cloudwatch.ListMetricStreamsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.ListMetricStreamsOutput, error)
	ListMetrics(ctx context.Context, params *cloudwatch.ListMetricsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.ListMetricsOutput, error)
	ListTagsForResource(ctx context.Context, params *cloudwatch.ListTagsForResourceInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.ListTagsForResourceOutput, error)
	PutAnomalyDetector(ctx context.Context, params *cloudwatch.PutAnomalyDetectorInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.PutAnomalyDetectorOutput, error)
	PutCompositeAlarm(ctx context.Context, params *cloudwatch.PutCompositeAlarmInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.PutCompositeAlarmOutput, error)
	PutDashboard(ctx context.Context, params *cloudwatch.PutDashboardInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.PutDashboardOutput, error)
	PutInsightRule(ctx context.Context, params *cloudwatch.PutInsightRuleInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.PutInsightRuleOutput, error)
	PutManagedInsightRules(ctx context.Context, params *cloudwatch.PutManagedInsightRulesInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.PutManagedInsightRulesOutput, error)
	PutMetricAlarm(ctx context.Context, params *cloudwatch.PutMetricAlarmInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.PutMetricAlarmOutput, error)
	PutMetricData(ctx context.Context, params *cloudwatch.PutMetricDataInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.PutMetricDataOutput, error)
	PutMetricStream(ctx context.Context, params *cloudwatch.PutMetricStreamInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.PutMetricStreamOutput, error)
	SetAlarmState(ctx context.Context, params *cloudwatch.SetAlarmStateInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.SetAlarmStateOutput, error)
	StartMetricStreams(ctx context.Context, params *cloudwatch.StartMetricStreamsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.StartMetricStreamsOutput, error)
	StopMetricStreams(ctx context.Context, params *cloudwatch.StopMetricStreamsInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.StopMetricStreamsOutput, error)
	TagResource(ctx context.Context, params *cloudwatch.TagResourceInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *cloudwatch.UntagResourceInput, optFns ...func(*cloudwatch.Options)) (*cloudwatch.UntagResourceOutput, error)
}
