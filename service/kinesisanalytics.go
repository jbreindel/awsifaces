// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/kinesisanalytics"
)

// KinesisanalyticsClient ...
type KinesisanalyticsClient interface {
	Options() kinesisanalytics.Options
	AddApplicationCloudWatchLoggingOption(ctx context.Context, params *kinesisanalytics.AddApplicationCloudWatchLoggingOptionInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.AddApplicationCloudWatchLoggingOptionOutput, error)
	AddApplicationInput(ctx context.Context, params *kinesisanalytics.AddApplicationInputInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.AddApplicationInputOutput, error)
	AddApplicationInputProcessingConfiguration(ctx context.Context, params *kinesisanalytics.AddApplicationInputProcessingConfigurationInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.AddApplicationInputProcessingConfigurationOutput, error)
	AddApplicationOutput(ctx context.Context, params *kinesisanalytics.AddApplicationOutputInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.AddApplicationOutputOutput, error)
	AddApplicationReferenceDataSource(ctx context.Context, params *kinesisanalytics.AddApplicationReferenceDataSourceInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.AddApplicationReferenceDataSourceOutput, error)
	CreateApplication(ctx context.Context, params *kinesisanalytics.CreateApplicationInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.CreateApplicationOutput, error)
	DeleteApplication(ctx context.Context, params *kinesisanalytics.DeleteApplicationInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.DeleteApplicationOutput, error)
	DeleteApplicationCloudWatchLoggingOption(ctx context.Context, params *kinesisanalytics.DeleteApplicationCloudWatchLoggingOptionInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.DeleteApplicationCloudWatchLoggingOptionOutput, error)
	DeleteApplicationInputProcessingConfiguration(ctx context.Context, params *kinesisanalytics.DeleteApplicationInputProcessingConfigurationInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.DeleteApplicationInputProcessingConfigurationOutput, error)
	DeleteApplicationOutput(ctx context.Context, params *kinesisanalytics.DeleteApplicationOutputInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.DeleteApplicationOutputOutput, error)
	DeleteApplicationReferenceDataSource(ctx context.Context, params *kinesisanalytics.DeleteApplicationReferenceDataSourceInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.DeleteApplicationReferenceDataSourceOutput, error)
	DescribeApplication(ctx context.Context, params *kinesisanalytics.DescribeApplicationInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.DescribeApplicationOutput, error)
	DiscoverInputSchema(ctx context.Context, params *kinesisanalytics.DiscoverInputSchemaInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.DiscoverInputSchemaOutput, error)
	ListApplications(ctx context.Context, params *kinesisanalytics.ListApplicationsInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.ListApplicationsOutput, error)
	ListTagsForResource(ctx context.Context, params *kinesisanalytics.ListTagsForResourceInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.ListTagsForResourceOutput, error)
	StartApplication(ctx context.Context, params *kinesisanalytics.StartApplicationInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.StartApplicationOutput, error)
	StopApplication(ctx context.Context, params *kinesisanalytics.StopApplicationInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.StopApplicationOutput, error)
	TagResource(ctx context.Context, params *kinesisanalytics.TagResourceInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *kinesisanalytics.UntagResourceInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.UntagResourceOutput, error)
	UpdateApplication(ctx context.Context, params *kinesisanalytics.UpdateApplicationInput, optFns ...func(*kinesisanalytics.Options)) (*kinesisanalytics.UpdateApplicationOutput, error)
}
