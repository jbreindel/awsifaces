// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/memorydb"
)

// MemorydbClient ...
type MemorydbClient interface {
	Options() memorydb.Options
	BatchUpdateCluster(ctx context.Context, params *memorydb.BatchUpdateClusterInput, optFns ...func(*memorydb.Options)) (*memorydb.BatchUpdateClusterOutput, error)
	CopySnapshot(ctx context.Context, params *memorydb.CopySnapshotInput, optFns ...func(*memorydb.Options)) (*memorydb.CopySnapshotOutput, error)
	CreateACL(ctx context.Context, params *memorydb.CreateACLInput, optFns ...func(*memorydb.Options)) (*memorydb.CreateACLOutput, error)
	CreateCluster(ctx context.Context, params *memorydb.CreateClusterInput, optFns ...func(*memorydb.Options)) (*memorydb.CreateClusterOutput, error)
	CreateParameterGroup(ctx context.Context, params *memorydb.CreateParameterGroupInput, optFns ...func(*memorydb.Options)) (*memorydb.CreateParameterGroupOutput, error)
	CreateSnapshot(ctx context.Context, params *memorydb.CreateSnapshotInput, optFns ...func(*memorydb.Options)) (*memorydb.CreateSnapshotOutput, error)
	CreateSubnetGroup(ctx context.Context, params *memorydb.CreateSubnetGroupInput, optFns ...func(*memorydb.Options)) (*memorydb.CreateSubnetGroupOutput, error)
	CreateUser(ctx context.Context, params *memorydb.CreateUserInput, optFns ...func(*memorydb.Options)) (*memorydb.CreateUserOutput, error)
	DeleteACL(ctx context.Context, params *memorydb.DeleteACLInput, optFns ...func(*memorydb.Options)) (*memorydb.DeleteACLOutput, error)
	DeleteCluster(ctx context.Context, params *memorydb.DeleteClusterInput, optFns ...func(*memorydb.Options)) (*memorydb.DeleteClusterOutput, error)
	DeleteParameterGroup(ctx context.Context, params *memorydb.DeleteParameterGroupInput, optFns ...func(*memorydb.Options)) (*memorydb.DeleteParameterGroupOutput, error)
	DeleteSnapshot(ctx context.Context, params *memorydb.DeleteSnapshotInput, optFns ...func(*memorydb.Options)) (*memorydb.DeleteSnapshotOutput, error)
	DeleteSubnetGroup(ctx context.Context, params *memorydb.DeleteSubnetGroupInput, optFns ...func(*memorydb.Options)) (*memorydb.DeleteSubnetGroupOutput, error)
	DeleteUser(ctx context.Context, params *memorydb.DeleteUserInput, optFns ...func(*memorydb.Options)) (*memorydb.DeleteUserOutput, error)
	DescribeACLs(ctx context.Context, params *memorydb.DescribeACLsInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeACLsOutput, error)
	DescribeClusters(ctx context.Context, params *memorydb.DescribeClustersInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeClustersOutput, error)
	DescribeEngineVersions(ctx context.Context, params *memorydb.DescribeEngineVersionsInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeEngineVersionsOutput, error)
	DescribeEvents(ctx context.Context, params *memorydb.DescribeEventsInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeEventsOutput, error)
	DescribeParameterGroups(ctx context.Context, params *memorydb.DescribeParameterGroupsInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeParameterGroupsOutput, error)
	DescribeParameters(ctx context.Context, params *memorydb.DescribeParametersInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeParametersOutput, error)
	DescribeReservedNodes(ctx context.Context, params *memorydb.DescribeReservedNodesInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeReservedNodesOutput, error)
	DescribeReservedNodesOfferings(ctx context.Context, params *memorydb.DescribeReservedNodesOfferingsInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeReservedNodesOfferingsOutput, error)
	DescribeServiceUpdates(ctx context.Context, params *memorydb.DescribeServiceUpdatesInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeServiceUpdatesOutput, error)
	DescribeSnapshots(ctx context.Context, params *memorydb.DescribeSnapshotsInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeSnapshotsOutput, error)
	DescribeSubnetGroups(ctx context.Context, params *memorydb.DescribeSubnetGroupsInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeSubnetGroupsOutput, error)
	DescribeUsers(ctx context.Context, params *memorydb.DescribeUsersInput, optFns ...func(*memorydb.Options)) (*memorydb.DescribeUsersOutput, error)
	FailoverShard(ctx context.Context, params *memorydb.FailoverShardInput, optFns ...func(*memorydb.Options)) (*memorydb.FailoverShardOutput, error)
	ListAllowedNodeTypeUpdates(ctx context.Context, params *memorydb.ListAllowedNodeTypeUpdatesInput, optFns ...func(*memorydb.Options)) (*memorydb.ListAllowedNodeTypeUpdatesOutput, error)
	ListTags(ctx context.Context, params *memorydb.ListTagsInput, optFns ...func(*memorydb.Options)) (*memorydb.ListTagsOutput, error)
	PurchaseReservedNodesOffering(ctx context.Context, params *memorydb.PurchaseReservedNodesOfferingInput, optFns ...func(*memorydb.Options)) (*memorydb.PurchaseReservedNodesOfferingOutput, error)
	ResetParameterGroup(ctx context.Context, params *memorydb.ResetParameterGroupInput, optFns ...func(*memorydb.Options)) (*memorydb.ResetParameterGroupOutput, error)
	TagResource(ctx context.Context, params *memorydb.TagResourceInput, optFns ...func(*memorydb.Options)) (*memorydb.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *memorydb.UntagResourceInput, optFns ...func(*memorydb.Options)) (*memorydb.UntagResourceOutput, error)
	UpdateACL(ctx context.Context, params *memorydb.UpdateACLInput, optFns ...func(*memorydb.Options)) (*memorydb.UpdateACLOutput, error)
	UpdateCluster(ctx context.Context, params *memorydb.UpdateClusterInput, optFns ...func(*memorydb.Options)) (*memorydb.UpdateClusterOutput, error)
	UpdateParameterGroup(ctx context.Context, params *memorydb.UpdateParameterGroupInput, optFns ...func(*memorydb.Options)) (*memorydb.UpdateParameterGroupOutput, error)
	UpdateSubnetGroup(ctx context.Context, params *memorydb.UpdateSubnetGroupInput, optFns ...func(*memorydb.Options)) (*memorydb.UpdateSubnetGroupOutput, error)
	UpdateUser(ctx context.Context, params *memorydb.UpdateUserInput, optFns ...func(*memorydb.Options)) (*memorydb.UpdateUserOutput, error)
}
