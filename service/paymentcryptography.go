// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/paymentcryptography"
)

// PaymentcryptographyClient ...
type PaymentcryptographyClient interface {
	Options() paymentcryptography.Options
	CreateAlias(ctx context.Context, params *paymentcryptography.CreateAliasInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.CreateAliasOutput, error)
	CreateKey(ctx context.Context, params *paymentcryptography.CreateKeyInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.CreateKeyOutput, error)
	DeleteAlias(ctx context.Context, params *paymentcryptography.DeleteAliasInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.DeleteAliasOutput, error)
	DeleteKey(ctx context.Context, params *paymentcryptography.DeleteKeyInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.DeleteKeyOutput, error)
	ExportKey(ctx context.Context, params *paymentcryptography.ExportKeyInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.ExportKeyOutput, error)
	GetAlias(ctx context.Context, params *paymentcryptography.GetAliasInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.GetAliasOutput, error)
	GetKey(ctx context.Context, params *paymentcryptography.GetKeyInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.GetKeyOutput, error)
	GetParametersForExport(ctx context.Context, params *paymentcryptography.GetParametersForExportInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.GetParametersForExportOutput, error)
	GetParametersForImport(ctx context.Context, params *paymentcryptography.GetParametersForImportInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.GetParametersForImportOutput, error)
	GetPublicKeyCertificate(ctx context.Context, params *paymentcryptography.GetPublicKeyCertificateInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.GetPublicKeyCertificateOutput, error)
	ImportKey(ctx context.Context, params *paymentcryptography.ImportKeyInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.ImportKeyOutput, error)
	ListAliases(ctx context.Context, params *paymentcryptography.ListAliasesInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.ListAliasesOutput, error)
	ListKeys(ctx context.Context, params *paymentcryptography.ListKeysInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.ListKeysOutput, error)
	ListTagsForResource(ctx context.Context, params *paymentcryptography.ListTagsForResourceInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.ListTagsForResourceOutput, error)
	RestoreKey(ctx context.Context, params *paymentcryptography.RestoreKeyInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.RestoreKeyOutput, error)
	StartKeyUsage(ctx context.Context, params *paymentcryptography.StartKeyUsageInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.StartKeyUsageOutput, error)
	StopKeyUsage(ctx context.Context, params *paymentcryptography.StopKeyUsageInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.StopKeyUsageOutput, error)
	TagResource(ctx context.Context, params *paymentcryptography.TagResourceInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *paymentcryptography.UntagResourceInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.UntagResourceOutput, error)
	UpdateAlias(ctx context.Context, params *paymentcryptography.UpdateAliasInput, optFns ...func(*paymentcryptography.Options)) (*paymentcryptography.UpdateAliasOutput, error)
}
