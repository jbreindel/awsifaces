// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/inspector"
)

// InspectorClient ...
type InspectorClient interface {
	Options() inspector.Options
	AddAttributesToFindings(ctx context.Context, params *inspector.AddAttributesToFindingsInput, optFns ...func(*inspector.Options)) (*inspector.AddAttributesToFindingsOutput, error)
	CreateAssessmentTarget(ctx context.Context, params *inspector.CreateAssessmentTargetInput, optFns ...func(*inspector.Options)) (*inspector.CreateAssessmentTargetOutput, error)
	CreateAssessmentTemplate(ctx context.Context, params *inspector.CreateAssessmentTemplateInput, optFns ...func(*inspector.Options)) (*inspector.CreateAssessmentTemplateOutput, error)
	CreateExclusionsPreview(ctx context.Context, params *inspector.CreateExclusionsPreviewInput, optFns ...func(*inspector.Options)) (*inspector.CreateExclusionsPreviewOutput, error)
	CreateResourceGroup(ctx context.Context, params *inspector.CreateResourceGroupInput, optFns ...func(*inspector.Options)) (*inspector.CreateResourceGroupOutput, error)
	DeleteAssessmentRun(ctx context.Context, params *inspector.DeleteAssessmentRunInput, optFns ...func(*inspector.Options)) (*inspector.DeleteAssessmentRunOutput, error)
	DeleteAssessmentTarget(ctx context.Context, params *inspector.DeleteAssessmentTargetInput, optFns ...func(*inspector.Options)) (*inspector.DeleteAssessmentTargetOutput, error)
	DeleteAssessmentTemplate(ctx context.Context, params *inspector.DeleteAssessmentTemplateInput, optFns ...func(*inspector.Options)) (*inspector.DeleteAssessmentTemplateOutput, error)
	DescribeAssessmentRuns(ctx context.Context, params *inspector.DescribeAssessmentRunsInput, optFns ...func(*inspector.Options)) (*inspector.DescribeAssessmentRunsOutput, error)
	DescribeAssessmentTargets(ctx context.Context, params *inspector.DescribeAssessmentTargetsInput, optFns ...func(*inspector.Options)) (*inspector.DescribeAssessmentTargetsOutput, error)
	DescribeAssessmentTemplates(ctx context.Context, params *inspector.DescribeAssessmentTemplatesInput, optFns ...func(*inspector.Options)) (*inspector.DescribeAssessmentTemplatesOutput, error)
	DescribeCrossAccountAccessRole(ctx context.Context, params *inspector.DescribeCrossAccountAccessRoleInput, optFns ...func(*inspector.Options)) (*inspector.DescribeCrossAccountAccessRoleOutput, error)
	DescribeExclusions(ctx context.Context, params *inspector.DescribeExclusionsInput, optFns ...func(*inspector.Options)) (*inspector.DescribeExclusionsOutput, error)
	DescribeFindings(ctx context.Context, params *inspector.DescribeFindingsInput, optFns ...func(*inspector.Options)) (*inspector.DescribeFindingsOutput, error)
	DescribeResourceGroups(ctx context.Context, params *inspector.DescribeResourceGroupsInput, optFns ...func(*inspector.Options)) (*inspector.DescribeResourceGroupsOutput, error)
	DescribeRulesPackages(ctx context.Context, params *inspector.DescribeRulesPackagesInput, optFns ...func(*inspector.Options)) (*inspector.DescribeRulesPackagesOutput, error)
	GetAssessmentReport(ctx context.Context, params *inspector.GetAssessmentReportInput, optFns ...func(*inspector.Options)) (*inspector.GetAssessmentReportOutput, error)
	GetExclusionsPreview(ctx context.Context, params *inspector.GetExclusionsPreviewInput, optFns ...func(*inspector.Options)) (*inspector.GetExclusionsPreviewOutput, error)
	GetTelemetryMetadata(ctx context.Context, params *inspector.GetTelemetryMetadataInput, optFns ...func(*inspector.Options)) (*inspector.GetTelemetryMetadataOutput, error)
	ListAssessmentRunAgents(ctx context.Context, params *inspector.ListAssessmentRunAgentsInput, optFns ...func(*inspector.Options)) (*inspector.ListAssessmentRunAgentsOutput, error)
	ListAssessmentRuns(ctx context.Context, params *inspector.ListAssessmentRunsInput, optFns ...func(*inspector.Options)) (*inspector.ListAssessmentRunsOutput, error)
	ListAssessmentTargets(ctx context.Context, params *inspector.ListAssessmentTargetsInput, optFns ...func(*inspector.Options)) (*inspector.ListAssessmentTargetsOutput, error)
	ListAssessmentTemplates(ctx context.Context, params *inspector.ListAssessmentTemplatesInput, optFns ...func(*inspector.Options)) (*inspector.ListAssessmentTemplatesOutput, error)
	ListEventSubscriptions(ctx context.Context, params *inspector.ListEventSubscriptionsInput, optFns ...func(*inspector.Options)) (*inspector.ListEventSubscriptionsOutput, error)
	ListExclusions(ctx context.Context, params *inspector.ListExclusionsInput, optFns ...func(*inspector.Options)) (*inspector.ListExclusionsOutput, error)
	ListFindings(ctx context.Context, params *inspector.ListFindingsInput, optFns ...func(*inspector.Options)) (*inspector.ListFindingsOutput, error)
	ListRulesPackages(ctx context.Context, params *inspector.ListRulesPackagesInput, optFns ...func(*inspector.Options)) (*inspector.ListRulesPackagesOutput, error)
	ListTagsForResource(ctx context.Context, params *inspector.ListTagsForResourceInput, optFns ...func(*inspector.Options)) (*inspector.ListTagsForResourceOutput, error)
	PreviewAgents(ctx context.Context, params *inspector.PreviewAgentsInput, optFns ...func(*inspector.Options)) (*inspector.PreviewAgentsOutput, error)
	RegisterCrossAccountAccessRole(ctx context.Context, params *inspector.RegisterCrossAccountAccessRoleInput, optFns ...func(*inspector.Options)) (*inspector.RegisterCrossAccountAccessRoleOutput, error)
	RemoveAttributesFromFindings(ctx context.Context, params *inspector.RemoveAttributesFromFindingsInput, optFns ...func(*inspector.Options)) (*inspector.RemoveAttributesFromFindingsOutput, error)
	SetTagsForResource(ctx context.Context, params *inspector.SetTagsForResourceInput, optFns ...func(*inspector.Options)) (*inspector.SetTagsForResourceOutput, error)
	StartAssessmentRun(ctx context.Context, params *inspector.StartAssessmentRunInput, optFns ...func(*inspector.Options)) (*inspector.StartAssessmentRunOutput, error)
	StopAssessmentRun(ctx context.Context, params *inspector.StopAssessmentRunInput, optFns ...func(*inspector.Options)) (*inspector.StopAssessmentRunOutput, error)
	SubscribeToEvent(ctx context.Context, params *inspector.SubscribeToEventInput, optFns ...func(*inspector.Options)) (*inspector.SubscribeToEventOutput, error)
	UnsubscribeFromEvent(ctx context.Context, params *inspector.UnsubscribeFromEventInput, optFns ...func(*inspector.Options)) (*inspector.UnsubscribeFromEventOutput, error)
	UpdateAssessmentTarget(ctx context.Context, params *inspector.UpdateAssessmentTargetInput, optFns ...func(*inspector.Options)) (*inspector.UpdateAssessmentTargetOutput, error)
}
