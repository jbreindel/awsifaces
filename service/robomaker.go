// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/robomaker"
)

// RobomakerClient ...
type RobomakerClient interface {
	Options() robomaker.Options
	BatchDeleteWorlds(ctx context.Context, params *robomaker.BatchDeleteWorldsInput, optFns ...func(*robomaker.Options)) (*robomaker.BatchDeleteWorldsOutput, error)
	BatchDescribeSimulationJob(ctx context.Context, params *robomaker.BatchDescribeSimulationJobInput, optFns ...func(*robomaker.Options)) (*robomaker.BatchDescribeSimulationJobOutput, error)
	CancelDeploymentJob(ctx context.Context, params *robomaker.CancelDeploymentJobInput, optFns ...func(*robomaker.Options)) (*robomaker.CancelDeploymentJobOutput, error)
	CancelSimulationJob(ctx context.Context, params *robomaker.CancelSimulationJobInput, optFns ...func(*robomaker.Options)) (*robomaker.CancelSimulationJobOutput, error)
	CancelSimulationJobBatch(ctx context.Context, params *robomaker.CancelSimulationJobBatchInput, optFns ...func(*robomaker.Options)) (*robomaker.CancelSimulationJobBatchOutput, error)
	CancelWorldExportJob(ctx context.Context, params *robomaker.CancelWorldExportJobInput, optFns ...func(*robomaker.Options)) (*robomaker.CancelWorldExportJobOutput, error)
	CancelWorldGenerationJob(ctx context.Context, params *robomaker.CancelWorldGenerationJobInput, optFns ...func(*robomaker.Options)) (*robomaker.CancelWorldGenerationJobOutput, error)
	CreateDeploymentJob(ctx context.Context, params *robomaker.CreateDeploymentJobInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateDeploymentJobOutput, error)
	CreateFleet(ctx context.Context, params *robomaker.CreateFleetInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateFleetOutput, error)
	CreateRobot(ctx context.Context, params *robomaker.CreateRobotInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateRobotOutput, error)
	CreateRobotApplication(ctx context.Context, params *robomaker.CreateRobotApplicationInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateRobotApplicationOutput, error)
	CreateRobotApplicationVersion(ctx context.Context, params *robomaker.CreateRobotApplicationVersionInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateRobotApplicationVersionOutput, error)
	CreateSimulationApplication(ctx context.Context, params *robomaker.CreateSimulationApplicationInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateSimulationApplicationOutput, error)
	CreateSimulationApplicationVersion(ctx context.Context, params *robomaker.CreateSimulationApplicationVersionInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateSimulationApplicationVersionOutput, error)
	CreateSimulationJob(ctx context.Context, params *robomaker.CreateSimulationJobInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateSimulationJobOutput, error)
	CreateWorldExportJob(ctx context.Context, params *robomaker.CreateWorldExportJobInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateWorldExportJobOutput, error)
	CreateWorldGenerationJob(ctx context.Context, params *robomaker.CreateWorldGenerationJobInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateWorldGenerationJobOutput, error)
	CreateWorldTemplate(ctx context.Context, params *robomaker.CreateWorldTemplateInput, optFns ...func(*robomaker.Options)) (*robomaker.CreateWorldTemplateOutput, error)
	DeleteFleet(ctx context.Context, params *robomaker.DeleteFleetInput, optFns ...func(*robomaker.Options)) (*robomaker.DeleteFleetOutput, error)
	DeleteRobot(ctx context.Context, params *robomaker.DeleteRobotInput, optFns ...func(*robomaker.Options)) (*robomaker.DeleteRobotOutput, error)
	DeleteRobotApplication(ctx context.Context, params *robomaker.DeleteRobotApplicationInput, optFns ...func(*robomaker.Options)) (*robomaker.DeleteRobotApplicationOutput, error)
	DeleteSimulationApplication(ctx context.Context, params *robomaker.DeleteSimulationApplicationInput, optFns ...func(*robomaker.Options)) (*robomaker.DeleteSimulationApplicationOutput, error)
	DeleteWorldTemplate(ctx context.Context, params *robomaker.DeleteWorldTemplateInput, optFns ...func(*robomaker.Options)) (*robomaker.DeleteWorldTemplateOutput, error)
	DeregisterRobot(ctx context.Context, params *robomaker.DeregisterRobotInput, optFns ...func(*robomaker.Options)) (*robomaker.DeregisterRobotOutput, error)
	DescribeDeploymentJob(ctx context.Context, params *robomaker.DescribeDeploymentJobInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeDeploymentJobOutput, error)
	DescribeFleet(ctx context.Context, params *robomaker.DescribeFleetInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeFleetOutput, error)
	DescribeRobot(ctx context.Context, params *robomaker.DescribeRobotInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeRobotOutput, error)
	DescribeRobotApplication(ctx context.Context, params *robomaker.DescribeRobotApplicationInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeRobotApplicationOutput, error)
	DescribeSimulationApplication(ctx context.Context, params *robomaker.DescribeSimulationApplicationInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeSimulationApplicationOutput, error)
	DescribeSimulationJob(ctx context.Context, params *robomaker.DescribeSimulationJobInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeSimulationJobOutput, error)
	DescribeSimulationJobBatch(ctx context.Context, params *robomaker.DescribeSimulationJobBatchInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeSimulationJobBatchOutput, error)
	DescribeWorld(ctx context.Context, params *robomaker.DescribeWorldInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeWorldOutput, error)
	DescribeWorldExportJob(ctx context.Context, params *robomaker.DescribeWorldExportJobInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeWorldExportJobOutput, error)
	DescribeWorldGenerationJob(ctx context.Context, params *robomaker.DescribeWorldGenerationJobInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeWorldGenerationJobOutput, error)
	DescribeWorldTemplate(ctx context.Context, params *robomaker.DescribeWorldTemplateInput, optFns ...func(*robomaker.Options)) (*robomaker.DescribeWorldTemplateOutput, error)
	GetWorldTemplateBody(ctx context.Context, params *robomaker.GetWorldTemplateBodyInput, optFns ...func(*robomaker.Options)) (*robomaker.GetWorldTemplateBodyOutput, error)
	ListDeploymentJobs(ctx context.Context, params *robomaker.ListDeploymentJobsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListDeploymentJobsOutput, error)
	ListFleets(ctx context.Context, params *robomaker.ListFleetsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListFleetsOutput, error)
	ListRobotApplications(ctx context.Context, params *robomaker.ListRobotApplicationsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListRobotApplicationsOutput, error)
	ListRobots(ctx context.Context, params *robomaker.ListRobotsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListRobotsOutput, error)
	ListSimulationApplications(ctx context.Context, params *robomaker.ListSimulationApplicationsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListSimulationApplicationsOutput, error)
	ListSimulationJobBatches(ctx context.Context, params *robomaker.ListSimulationJobBatchesInput, optFns ...func(*robomaker.Options)) (*robomaker.ListSimulationJobBatchesOutput, error)
	ListSimulationJobs(ctx context.Context, params *robomaker.ListSimulationJobsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListSimulationJobsOutput, error)
	ListTagsForResource(ctx context.Context, params *robomaker.ListTagsForResourceInput, optFns ...func(*robomaker.Options)) (*robomaker.ListTagsForResourceOutput, error)
	ListWorldExportJobs(ctx context.Context, params *robomaker.ListWorldExportJobsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListWorldExportJobsOutput, error)
	ListWorldGenerationJobs(ctx context.Context, params *robomaker.ListWorldGenerationJobsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListWorldGenerationJobsOutput, error)
	ListWorldTemplates(ctx context.Context, params *robomaker.ListWorldTemplatesInput, optFns ...func(*robomaker.Options)) (*robomaker.ListWorldTemplatesOutput, error)
	ListWorlds(ctx context.Context, params *robomaker.ListWorldsInput, optFns ...func(*robomaker.Options)) (*robomaker.ListWorldsOutput, error)
	RegisterRobot(ctx context.Context, params *robomaker.RegisterRobotInput, optFns ...func(*robomaker.Options)) (*robomaker.RegisterRobotOutput, error)
	RestartSimulationJob(ctx context.Context, params *robomaker.RestartSimulationJobInput, optFns ...func(*robomaker.Options)) (*robomaker.RestartSimulationJobOutput, error)
	StartSimulationJobBatch(ctx context.Context, params *robomaker.StartSimulationJobBatchInput, optFns ...func(*robomaker.Options)) (*robomaker.StartSimulationJobBatchOutput, error)
	SyncDeploymentJob(ctx context.Context, params *robomaker.SyncDeploymentJobInput, optFns ...func(*robomaker.Options)) (*robomaker.SyncDeploymentJobOutput, error)
	TagResource(ctx context.Context, params *robomaker.TagResourceInput, optFns ...func(*robomaker.Options)) (*robomaker.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *robomaker.UntagResourceInput, optFns ...func(*robomaker.Options)) (*robomaker.UntagResourceOutput, error)
	UpdateRobotApplication(ctx context.Context, params *robomaker.UpdateRobotApplicationInput, optFns ...func(*robomaker.Options)) (*robomaker.UpdateRobotApplicationOutput, error)
	UpdateSimulationApplication(ctx context.Context, params *robomaker.UpdateSimulationApplicationInput, optFns ...func(*robomaker.Options)) (*robomaker.UpdateSimulationApplicationOutput, error)
	UpdateWorldTemplate(ctx context.Context, params *robomaker.UpdateWorldTemplateInput, optFns ...func(*robomaker.Options)) (*robomaker.UpdateWorldTemplateOutput, error)
}
