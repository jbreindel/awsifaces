// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/networkmonitor"
)

// NetworkmonitorClient ...
type NetworkmonitorClient interface {
	Options() networkmonitor.Options
	CreateMonitor(ctx context.Context, params *networkmonitor.CreateMonitorInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.CreateMonitorOutput, error)
	CreateProbe(ctx context.Context, params *networkmonitor.CreateProbeInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.CreateProbeOutput, error)
	DeleteMonitor(ctx context.Context, params *networkmonitor.DeleteMonitorInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.DeleteMonitorOutput, error)
	DeleteProbe(ctx context.Context, params *networkmonitor.DeleteProbeInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.DeleteProbeOutput, error)
	GetMonitor(ctx context.Context, params *networkmonitor.GetMonitorInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.GetMonitorOutput, error)
	GetProbe(ctx context.Context, params *networkmonitor.GetProbeInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.GetProbeOutput, error)
	ListMonitors(ctx context.Context, params *networkmonitor.ListMonitorsInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.ListMonitorsOutput, error)
	ListTagsForResource(ctx context.Context, params *networkmonitor.ListTagsForResourceInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.ListTagsForResourceOutput, error)
	TagResource(ctx context.Context, params *networkmonitor.TagResourceInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *networkmonitor.UntagResourceInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.UntagResourceOutput, error)
	UpdateMonitor(ctx context.Context, params *networkmonitor.UpdateMonitorInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.UpdateMonitorOutput, error)
	UpdateProbe(ctx context.Context, params *networkmonitor.UpdateProbeInput, optFns ...func(*networkmonitor.Options)) (*networkmonitor.UpdateProbeOutput, error)
}
