// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/m2"
)

// M2Client ...
type M2Client interface {
	Options() m2.Options
	CancelBatchJobExecution(ctx context.Context, params *m2.CancelBatchJobExecutionInput, optFns ...func(*m2.Options)) (*m2.CancelBatchJobExecutionOutput, error)
	CreateApplication(ctx context.Context, params *m2.CreateApplicationInput, optFns ...func(*m2.Options)) (*m2.CreateApplicationOutput, error)
	CreateDataSetImportTask(ctx context.Context, params *m2.CreateDataSetImportTaskInput, optFns ...func(*m2.Options)) (*m2.CreateDataSetImportTaskOutput, error)
	CreateDeployment(ctx context.Context, params *m2.CreateDeploymentInput, optFns ...func(*m2.Options)) (*m2.CreateDeploymentOutput, error)
	CreateEnvironment(ctx context.Context, params *m2.CreateEnvironmentInput, optFns ...func(*m2.Options)) (*m2.CreateEnvironmentOutput, error)
	DeleteApplication(ctx context.Context, params *m2.DeleteApplicationInput, optFns ...func(*m2.Options)) (*m2.DeleteApplicationOutput, error)
	DeleteApplicationFromEnvironment(ctx context.Context, params *m2.DeleteApplicationFromEnvironmentInput, optFns ...func(*m2.Options)) (*m2.DeleteApplicationFromEnvironmentOutput, error)
	DeleteEnvironment(ctx context.Context, params *m2.DeleteEnvironmentInput, optFns ...func(*m2.Options)) (*m2.DeleteEnvironmentOutput, error)
	GetApplication(ctx context.Context, params *m2.GetApplicationInput, optFns ...func(*m2.Options)) (*m2.GetApplicationOutput, error)
	GetApplicationVersion(ctx context.Context, params *m2.GetApplicationVersionInput, optFns ...func(*m2.Options)) (*m2.GetApplicationVersionOutput, error)
	GetBatchJobExecution(ctx context.Context, params *m2.GetBatchJobExecutionInput, optFns ...func(*m2.Options)) (*m2.GetBatchJobExecutionOutput, error)
	GetDataSetDetails(ctx context.Context, params *m2.GetDataSetDetailsInput, optFns ...func(*m2.Options)) (*m2.GetDataSetDetailsOutput, error)
	GetDataSetImportTask(ctx context.Context, params *m2.GetDataSetImportTaskInput, optFns ...func(*m2.Options)) (*m2.GetDataSetImportTaskOutput, error)
	GetDeployment(ctx context.Context, params *m2.GetDeploymentInput, optFns ...func(*m2.Options)) (*m2.GetDeploymentOutput, error)
	GetEnvironment(ctx context.Context, params *m2.GetEnvironmentInput, optFns ...func(*m2.Options)) (*m2.GetEnvironmentOutput, error)
	GetSignedBluinsightsUrl(ctx context.Context, params *m2.GetSignedBluinsightsUrlInput, optFns ...func(*m2.Options)) (*m2.GetSignedBluinsightsUrlOutput, error)
	ListApplicationVersions(ctx context.Context, params *m2.ListApplicationVersionsInput, optFns ...func(*m2.Options)) (*m2.ListApplicationVersionsOutput, error)
	ListApplications(ctx context.Context, params *m2.ListApplicationsInput, optFns ...func(*m2.Options)) (*m2.ListApplicationsOutput, error)
	ListBatchJobDefinitions(ctx context.Context, params *m2.ListBatchJobDefinitionsInput, optFns ...func(*m2.Options)) (*m2.ListBatchJobDefinitionsOutput, error)
	ListBatchJobExecutions(ctx context.Context, params *m2.ListBatchJobExecutionsInput, optFns ...func(*m2.Options)) (*m2.ListBatchJobExecutionsOutput, error)
	ListDataSetImportHistory(ctx context.Context, params *m2.ListDataSetImportHistoryInput, optFns ...func(*m2.Options)) (*m2.ListDataSetImportHistoryOutput, error)
	ListDataSets(ctx context.Context, params *m2.ListDataSetsInput, optFns ...func(*m2.Options)) (*m2.ListDataSetsOutput, error)
	ListDeployments(ctx context.Context, params *m2.ListDeploymentsInput, optFns ...func(*m2.Options)) (*m2.ListDeploymentsOutput, error)
	ListEngineVersions(ctx context.Context, params *m2.ListEngineVersionsInput, optFns ...func(*m2.Options)) (*m2.ListEngineVersionsOutput, error)
	ListEnvironments(ctx context.Context, params *m2.ListEnvironmentsInput, optFns ...func(*m2.Options)) (*m2.ListEnvironmentsOutput, error)
	ListTagsForResource(ctx context.Context, params *m2.ListTagsForResourceInput, optFns ...func(*m2.Options)) (*m2.ListTagsForResourceOutput, error)
	StartApplication(ctx context.Context, params *m2.StartApplicationInput, optFns ...func(*m2.Options)) (*m2.StartApplicationOutput, error)
	StartBatchJob(ctx context.Context, params *m2.StartBatchJobInput, optFns ...func(*m2.Options)) (*m2.StartBatchJobOutput, error)
	StopApplication(ctx context.Context, params *m2.StopApplicationInput, optFns ...func(*m2.Options)) (*m2.StopApplicationOutput, error)
	TagResource(ctx context.Context, params *m2.TagResourceInput, optFns ...func(*m2.Options)) (*m2.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *m2.UntagResourceInput, optFns ...func(*m2.Options)) (*m2.UntagResourceOutput, error)
	UpdateApplication(ctx context.Context, params *m2.UpdateApplicationInput, optFns ...func(*m2.Options)) (*m2.UpdateApplicationOutput, error)
	UpdateEnvironment(ctx context.Context, params *m2.UpdateEnvironmentInput, optFns ...func(*m2.Options)) (*m2.UpdateEnvironmentOutput, error)
}
