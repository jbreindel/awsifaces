// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/budgets"
)

// BudgetsClient ...
type BudgetsClient interface {
	Options() budgets.Options
	CreateBudget(ctx context.Context, params *budgets.CreateBudgetInput, optFns ...func(*budgets.Options)) (*budgets.CreateBudgetOutput, error)
	CreateBudgetAction(ctx context.Context, params *budgets.CreateBudgetActionInput, optFns ...func(*budgets.Options)) (*budgets.CreateBudgetActionOutput, error)
	CreateNotification(ctx context.Context, params *budgets.CreateNotificationInput, optFns ...func(*budgets.Options)) (*budgets.CreateNotificationOutput, error)
	CreateSubscriber(ctx context.Context, params *budgets.CreateSubscriberInput, optFns ...func(*budgets.Options)) (*budgets.CreateSubscriberOutput, error)
	DeleteBudget(ctx context.Context, params *budgets.DeleteBudgetInput, optFns ...func(*budgets.Options)) (*budgets.DeleteBudgetOutput, error)
	DeleteBudgetAction(ctx context.Context, params *budgets.DeleteBudgetActionInput, optFns ...func(*budgets.Options)) (*budgets.DeleteBudgetActionOutput, error)
	DeleteNotification(ctx context.Context, params *budgets.DeleteNotificationInput, optFns ...func(*budgets.Options)) (*budgets.DeleteNotificationOutput, error)
	DeleteSubscriber(ctx context.Context, params *budgets.DeleteSubscriberInput, optFns ...func(*budgets.Options)) (*budgets.DeleteSubscriberOutput, error)
	DescribeBudget(ctx context.Context, params *budgets.DescribeBudgetInput, optFns ...func(*budgets.Options)) (*budgets.DescribeBudgetOutput, error)
	DescribeBudgetAction(ctx context.Context, params *budgets.DescribeBudgetActionInput, optFns ...func(*budgets.Options)) (*budgets.DescribeBudgetActionOutput, error)
	DescribeBudgetActionHistories(ctx context.Context, params *budgets.DescribeBudgetActionHistoriesInput, optFns ...func(*budgets.Options)) (*budgets.DescribeBudgetActionHistoriesOutput, error)
	DescribeBudgetActionsForAccount(ctx context.Context, params *budgets.DescribeBudgetActionsForAccountInput, optFns ...func(*budgets.Options)) (*budgets.DescribeBudgetActionsForAccountOutput, error)
	DescribeBudgetActionsForBudget(ctx context.Context, params *budgets.DescribeBudgetActionsForBudgetInput, optFns ...func(*budgets.Options)) (*budgets.DescribeBudgetActionsForBudgetOutput, error)
	DescribeBudgetNotificationsForAccount(ctx context.Context, params *budgets.DescribeBudgetNotificationsForAccountInput, optFns ...func(*budgets.Options)) (*budgets.DescribeBudgetNotificationsForAccountOutput, error)
	DescribeBudgetPerformanceHistory(ctx context.Context, params *budgets.DescribeBudgetPerformanceHistoryInput, optFns ...func(*budgets.Options)) (*budgets.DescribeBudgetPerformanceHistoryOutput, error)
	DescribeBudgets(ctx context.Context, params *budgets.DescribeBudgetsInput, optFns ...func(*budgets.Options)) (*budgets.DescribeBudgetsOutput, error)
	DescribeNotificationsForBudget(ctx context.Context, params *budgets.DescribeNotificationsForBudgetInput, optFns ...func(*budgets.Options)) (*budgets.DescribeNotificationsForBudgetOutput, error)
	DescribeSubscribersForNotification(ctx context.Context, params *budgets.DescribeSubscribersForNotificationInput, optFns ...func(*budgets.Options)) (*budgets.DescribeSubscribersForNotificationOutput, error)
	ExecuteBudgetAction(ctx context.Context, params *budgets.ExecuteBudgetActionInput, optFns ...func(*budgets.Options)) (*budgets.ExecuteBudgetActionOutput, error)
	UpdateBudget(ctx context.Context, params *budgets.UpdateBudgetInput, optFns ...func(*budgets.Options)) (*budgets.UpdateBudgetOutput, error)
	UpdateBudgetAction(ctx context.Context, params *budgets.UpdateBudgetActionInput, optFns ...func(*budgets.Options)) (*budgets.UpdateBudgetActionOutput, error)
	UpdateNotification(ctx context.Context, params *budgets.UpdateNotificationInput, optFns ...func(*budgets.Options)) (*budgets.UpdateNotificationOutput, error)
	UpdateSubscriber(ctx context.Context, params *budgets.UpdateSubscriberInput, optFns ...func(*budgets.Options)) (*budgets.UpdateSubscriberOutput, error)
}
