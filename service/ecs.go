// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/ecs"
)

// EcsClient ...
type EcsClient interface {
	Options() ecs.Options
	CreateCapacityProvider(ctx context.Context, params *ecs.CreateCapacityProviderInput, optFns ...func(*ecs.Options)) (*ecs.CreateCapacityProviderOutput, error)
	CreateCluster(ctx context.Context, params *ecs.CreateClusterInput, optFns ...func(*ecs.Options)) (*ecs.CreateClusterOutput, error)
	CreateService(ctx context.Context, params *ecs.CreateServiceInput, optFns ...func(*ecs.Options)) (*ecs.CreateServiceOutput, error)
	CreateTaskSet(ctx context.Context, params *ecs.CreateTaskSetInput, optFns ...func(*ecs.Options)) (*ecs.CreateTaskSetOutput, error)
	DeleteAccountSetting(ctx context.Context, params *ecs.DeleteAccountSettingInput, optFns ...func(*ecs.Options)) (*ecs.DeleteAccountSettingOutput, error)
	DeleteAttributes(ctx context.Context, params *ecs.DeleteAttributesInput, optFns ...func(*ecs.Options)) (*ecs.DeleteAttributesOutput, error)
	DeleteCapacityProvider(ctx context.Context, params *ecs.DeleteCapacityProviderInput, optFns ...func(*ecs.Options)) (*ecs.DeleteCapacityProviderOutput, error)
	DeleteCluster(ctx context.Context, params *ecs.DeleteClusterInput, optFns ...func(*ecs.Options)) (*ecs.DeleteClusterOutput, error)
	DeleteService(ctx context.Context, params *ecs.DeleteServiceInput, optFns ...func(*ecs.Options)) (*ecs.DeleteServiceOutput, error)
	DeleteTaskDefinitions(ctx context.Context, params *ecs.DeleteTaskDefinitionsInput, optFns ...func(*ecs.Options)) (*ecs.DeleteTaskDefinitionsOutput, error)
	DeleteTaskSet(ctx context.Context, params *ecs.DeleteTaskSetInput, optFns ...func(*ecs.Options)) (*ecs.DeleteTaskSetOutput, error)
	DeregisterContainerInstance(ctx context.Context, params *ecs.DeregisterContainerInstanceInput, optFns ...func(*ecs.Options)) (*ecs.DeregisterContainerInstanceOutput, error)
	DeregisterTaskDefinition(ctx context.Context, params *ecs.DeregisterTaskDefinitionInput, optFns ...func(*ecs.Options)) (*ecs.DeregisterTaskDefinitionOutput, error)
	DescribeCapacityProviders(ctx context.Context, params *ecs.DescribeCapacityProvidersInput, optFns ...func(*ecs.Options)) (*ecs.DescribeCapacityProvidersOutput, error)
	DescribeClusters(ctx context.Context, params *ecs.DescribeClustersInput, optFns ...func(*ecs.Options)) (*ecs.DescribeClustersOutput, error)
	DescribeContainerInstances(ctx context.Context, params *ecs.DescribeContainerInstancesInput, optFns ...func(*ecs.Options)) (*ecs.DescribeContainerInstancesOutput, error)
	DescribeServices(ctx context.Context, params *ecs.DescribeServicesInput, optFns ...func(*ecs.Options)) (*ecs.DescribeServicesOutput, error)
	DescribeTaskDefinition(ctx context.Context, params *ecs.DescribeTaskDefinitionInput, optFns ...func(*ecs.Options)) (*ecs.DescribeTaskDefinitionOutput, error)
	DescribeTaskSets(ctx context.Context, params *ecs.DescribeTaskSetsInput, optFns ...func(*ecs.Options)) (*ecs.DescribeTaskSetsOutput, error)
	DescribeTasks(ctx context.Context, params *ecs.DescribeTasksInput, optFns ...func(*ecs.Options)) (*ecs.DescribeTasksOutput, error)
	DiscoverPollEndpoint(ctx context.Context, params *ecs.DiscoverPollEndpointInput, optFns ...func(*ecs.Options)) (*ecs.DiscoverPollEndpointOutput, error)
	ExecuteCommand(ctx context.Context, params *ecs.ExecuteCommandInput, optFns ...func(*ecs.Options)) (*ecs.ExecuteCommandOutput, error)
	GetTaskProtection(ctx context.Context, params *ecs.GetTaskProtectionInput, optFns ...func(*ecs.Options)) (*ecs.GetTaskProtectionOutput, error)
	ListAccountSettings(ctx context.Context, params *ecs.ListAccountSettingsInput, optFns ...func(*ecs.Options)) (*ecs.ListAccountSettingsOutput, error)
	ListAttributes(ctx context.Context, params *ecs.ListAttributesInput, optFns ...func(*ecs.Options)) (*ecs.ListAttributesOutput, error)
	ListClusters(ctx context.Context, params *ecs.ListClustersInput, optFns ...func(*ecs.Options)) (*ecs.ListClustersOutput, error)
	ListContainerInstances(ctx context.Context, params *ecs.ListContainerInstancesInput, optFns ...func(*ecs.Options)) (*ecs.ListContainerInstancesOutput, error)
	ListServices(ctx context.Context, params *ecs.ListServicesInput, optFns ...func(*ecs.Options)) (*ecs.ListServicesOutput, error)
	ListServicesByNamespace(ctx context.Context, params *ecs.ListServicesByNamespaceInput, optFns ...func(*ecs.Options)) (*ecs.ListServicesByNamespaceOutput, error)
	ListTagsForResource(ctx context.Context, params *ecs.ListTagsForResourceInput, optFns ...func(*ecs.Options)) (*ecs.ListTagsForResourceOutput, error)
	ListTaskDefinitionFamilies(ctx context.Context, params *ecs.ListTaskDefinitionFamiliesInput, optFns ...func(*ecs.Options)) (*ecs.ListTaskDefinitionFamiliesOutput, error)
	ListTaskDefinitions(ctx context.Context, params *ecs.ListTaskDefinitionsInput, optFns ...func(*ecs.Options)) (*ecs.ListTaskDefinitionsOutput, error)
	ListTasks(ctx context.Context, params *ecs.ListTasksInput, optFns ...func(*ecs.Options)) (*ecs.ListTasksOutput, error)
	PutAccountSetting(ctx context.Context, params *ecs.PutAccountSettingInput, optFns ...func(*ecs.Options)) (*ecs.PutAccountSettingOutput, error)
	PutAccountSettingDefault(ctx context.Context, params *ecs.PutAccountSettingDefaultInput, optFns ...func(*ecs.Options)) (*ecs.PutAccountSettingDefaultOutput, error)
	PutAttributes(ctx context.Context, params *ecs.PutAttributesInput, optFns ...func(*ecs.Options)) (*ecs.PutAttributesOutput, error)
	PutClusterCapacityProviders(ctx context.Context, params *ecs.PutClusterCapacityProvidersInput, optFns ...func(*ecs.Options)) (*ecs.PutClusterCapacityProvidersOutput, error)
	RegisterContainerInstance(ctx context.Context, params *ecs.RegisterContainerInstanceInput, optFns ...func(*ecs.Options)) (*ecs.RegisterContainerInstanceOutput, error)
	RegisterTaskDefinition(ctx context.Context, params *ecs.RegisterTaskDefinitionInput, optFns ...func(*ecs.Options)) (*ecs.RegisterTaskDefinitionOutput, error)
	RunTask(ctx context.Context, params *ecs.RunTaskInput, optFns ...func(*ecs.Options)) (*ecs.RunTaskOutput, error)
	StartTask(ctx context.Context, params *ecs.StartTaskInput, optFns ...func(*ecs.Options)) (*ecs.StartTaskOutput, error)
	StopTask(ctx context.Context, params *ecs.StopTaskInput, optFns ...func(*ecs.Options)) (*ecs.StopTaskOutput, error)
	SubmitAttachmentStateChanges(ctx context.Context, params *ecs.SubmitAttachmentStateChangesInput, optFns ...func(*ecs.Options)) (*ecs.SubmitAttachmentStateChangesOutput, error)
	SubmitContainerStateChange(ctx context.Context, params *ecs.SubmitContainerStateChangeInput, optFns ...func(*ecs.Options)) (*ecs.SubmitContainerStateChangeOutput, error)
	SubmitTaskStateChange(ctx context.Context, params *ecs.SubmitTaskStateChangeInput, optFns ...func(*ecs.Options)) (*ecs.SubmitTaskStateChangeOutput, error)
	TagResource(ctx context.Context, params *ecs.TagResourceInput, optFns ...func(*ecs.Options)) (*ecs.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *ecs.UntagResourceInput, optFns ...func(*ecs.Options)) (*ecs.UntagResourceOutput, error)
	UpdateCapacityProvider(ctx context.Context, params *ecs.UpdateCapacityProviderInput, optFns ...func(*ecs.Options)) (*ecs.UpdateCapacityProviderOutput, error)
	UpdateCluster(ctx context.Context, params *ecs.UpdateClusterInput, optFns ...func(*ecs.Options)) (*ecs.UpdateClusterOutput, error)
	UpdateClusterSettings(ctx context.Context, params *ecs.UpdateClusterSettingsInput, optFns ...func(*ecs.Options)) (*ecs.UpdateClusterSettingsOutput, error)
	UpdateContainerAgent(ctx context.Context, params *ecs.UpdateContainerAgentInput, optFns ...func(*ecs.Options)) (*ecs.UpdateContainerAgentOutput, error)
	UpdateContainerInstancesState(ctx context.Context, params *ecs.UpdateContainerInstancesStateInput, optFns ...func(*ecs.Options)) (*ecs.UpdateContainerInstancesStateOutput, error)
	UpdateService(ctx context.Context, params *ecs.UpdateServiceInput, optFns ...func(*ecs.Options)) (*ecs.UpdateServiceOutput, error)
	UpdateServicePrimaryTaskSet(ctx context.Context, params *ecs.UpdateServicePrimaryTaskSetInput, optFns ...func(*ecs.Options)) (*ecs.UpdateServicePrimaryTaskSetOutput, error)
	UpdateTaskProtection(ctx context.Context, params *ecs.UpdateTaskProtectionInput, optFns ...func(*ecs.Options)) (*ecs.UpdateTaskProtectionOutput, error)
	UpdateTaskSet(ctx context.Context, params *ecs.UpdateTaskSetInput, optFns ...func(*ecs.Options)) (*ecs.UpdateTaskSetOutput, error)
}
