// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/clouddirectory"
)

// ClouddirectoryClient ...
type ClouddirectoryClient interface {
	Options() clouddirectory.Options
	AddFacetToObject(ctx context.Context, params *clouddirectory.AddFacetToObjectInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.AddFacetToObjectOutput, error)
	ApplySchema(ctx context.Context, params *clouddirectory.ApplySchemaInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ApplySchemaOutput, error)
	AttachObject(ctx context.Context, params *clouddirectory.AttachObjectInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.AttachObjectOutput, error)
	AttachPolicy(ctx context.Context, params *clouddirectory.AttachPolicyInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.AttachPolicyOutput, error)
	AttachToIndex(ctx context.Context, params *clouddirectory.AttachToIndexInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.AttachToIndexOutput, error)
	AttachTypedLink(ctx context.Context, params *clouddirectory.AttachTypedLinkInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.AttachTypedLinkOutput, error)
	BatchRead(ctx context.Context, params *clouddirectory.BatchReadInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.BatchReadOutput, error)
	BatchWrite(ctx context.Context, params *clouddirectory.BatchWriteInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.BatchWriteOutput, error)
	CreateDirectory(ctx context.Context, params *clouddirectory.CreateDirectoryInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.CreateDirectoryOutput, error)
	CreateFacet(ctx context.Context, params *clouddirectory.CreateFacetInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.CreateFacetOutput, error)
	CreateIndex(ctx context.Context, params *clouddirectory.CreateIndexInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.CreateIndexOutput, error)
	CreateObject(ctx context.Context, params *clouddirectory.CreateObjectInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.CreateObjectOutput, error)
	CreateSchema(ctx context.Context, params *clouddirectory.CreateSchemaInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.CreateSchemaOutput, error)
	CreateTypedLinkFacet(ctx context.Context, params *clouddirectory.CreateTypedLinkFacetInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.CreateTypedLinkFacetOutput, error)
	DeleteDirectory(ctx context.Context, params *clouddirectory.DeleteDirectoryInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DeleteDirectoryOutput, error)
	DeleteFacet(ctx context.Context, params *clouddirectory.DeleteFacetInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DeleteFacetOutput, error)
	DeleteObject(ctx context.Context, params *clouddirectory.DeleteObjectInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DeleteObjectOutput, error)
	DeleteSchema(ctx context.Context, params *clouddirectory.DeleteSchemaInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DeleteSchemaOutput, error)
	DeleteTypedLinkFacet(ctx context.Context, params *clouddirectory.DeleteTypedLinkFacetInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DeleteTypedLinkFacetOutput, error)
	DetachFromIndex(ctx context.Context, params *clouddirectory.DetachFromIndexInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DetachFromIndexOutput, error)
	DetachObject(ctx context.Context, params *clouddirectory.DetachObjectInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DetachObjectOutput, error)
	DetachPolicy(ctx context.Context, params *clouddirectory.DetachPolicyInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DetachPolicyOutput, error)
	DetachTypedLink(ctx context.Context, params *clouddirectory.DetachTypedLinkInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DetachTypedLinkOutput, error)
	DisableDirectory(ctx context.Context, params *clouddirectory.DisableDirectoryInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.DisableDirectoryOutput, error)
	EnableDirectory(ctx context.Context, params *clouddirectory.EnableDirectoryInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.EnableDirectoryOutput, error)
	GetAppliedSchemaVersion(ctx context.Context, params *clouddirectory.GetAppliedSchemaVersionInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.GetAppliedSchemaVersionOutput, error)
	GetDirectory(ctx context.Context, params *clouddirectory.GetDirectoryInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.GetDirectoryOutput, error)
	GetFacet(ctx context.Context, params *clouddirectory.GetFacetInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.GetFacetOutput, error)
	GetLinkAttributes(ctx context.Context, params *clouddirectory.GetLinkAttributesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.GetLinkAttributesOutput, error)
	GetObjectAttributes(ctx context.Context, params *clouddirectory.GetObjectAttributesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.GetObjectAttributesOutput, error)
	GetObjectInformation(ctx context.Context, params *clouddirectory.GetObjectInformationInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.GetObjectInformationOutput, error)
	GetSchemaAsJson(ctx context.Context, params *clouddirectory.GetSchemaAsJsonInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.GetSchemaAsJsonOutput, error)
	GetTypedLinkFacetInformation(ctx context.Context, params *clouddirectory.GetTypedLinkFacetInformationInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.GetTypedLinkFacetInformationOutput, error)
	ListAppliedSchemaArns(ctx context.Context, params *clouddirectory.ListAppliedSchemaArnsInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListAppliedSchemaArnsOutput, error)
	ListAttachedIndices(ctx context.Context, params *clouddirectory.ListAttachedIndicesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListAttachedIndicesOutput, error)
	ListDevelopmentSchemaArns(ctx context.Context, params *clouddirectory.ListDevelopmentSchemaArnsInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListDevelopmentSchemaArnsOutput, error)
	ListDirectories(ctx context.Context, params *clouddirectory.ListDirectoriesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListDirectoriesOutput, error)
	ListFacetAttributes(ctx context.Context, params *clouddirectory.ListFacetAttributesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListFacetAttributesOutput, error)
	ListFacetNames(ctx context.Context, params *clouddirectory.ListFacetNamesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListFacetNamesOutput, error)
	ListIncomingTypedLinks(ctx context.Context, params *clouddirectory.ListIncomingTypedLinksInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListIncomingTypedLinksOutput, error)
	ListIndex(ctx context.Context, params *clouddirectory.ListIndexInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListIndexOutput, error)
	ListManagedSchemaArns(ctx context.Context, params *clouddirectory.ListManagedSchemaArnsInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListManagedSchemaArnsOutput, error)
	ListObjectAttributes(ctx context.Context, params *clouddirectory.ListObjectAttributesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListObjectAttributesOutput, error)
	ListObjectChildren(ctx context.Context, params *clouddirectory.ListObjectChildrenInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListObjectChildrenOutput, error)
	ListObjectParentPaths(ctx context.Context, params *clouddirectory.ListObjectParentPathsInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListObjectParentPathsOutput, error)
	ListObjectParents(ctx context.Context, params *clouddirectory.ListObjectParentsInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListObjectParentsOutput, error)
	ListObjectPolicies(ctx context.Context, params *clouddirectory.ListObjectPoliciesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListObjectPoliciesOutput, error)
	ListOutgoingTypedLinks(ctx context.Context, params *clouddirectory.ListOutgoingTypedLinksInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListOutgoingTypedLinksOutput, error)
	ListPolicyAttachments(ctx context.Context, params *clouddirectory.ListPolicyAttachmentsInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListPolicyAttachmentsOutput, error)
	ListPublishedSchemaArns(ctx context.Context, params *clouddirectory.ListPublishedSchemaArnsInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListPublishedSchemaArnsOutput, error)
	ListTagsForResource(ctx context.Context, params *clouddirectory.ListTagsForResourceInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListTagsForResourceOutput, error)
	ListTypedLinkFacetAttributes(ctx context.Context, params *clouddirectory.ListTypedLinkFacetAttributesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListTypedLinkFacetAttributesOutput, error)
	ListTypedLinkFacetNames(ctx context.Context, params *clouddirectory.ListTypedLinkFacetNamesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.ListTypedLinkFacetNamesOutput, error)
	LookupPolicy(ctx context.Context, params *clouddirectory.LookupPolicyInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.LookupPolicyOutput, error)
	PublishSchema(ctx context.Context, params *clouddirectory.PublishSchemaInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.PublishSchemaOutput, error)
	PutSchemaFromJson(ctx context.Context, params *clouddirectory.PutSchemaFromJsonInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.PutSchemaFromJsonOutput, error)
	RemoveFacetFromObject(ctx context.Context, params *clouddirectory.RemoveFacetFromObjectInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.RemoveFacetFromObjectOutput, error)
	TagResource(ctx context.Context, params *clouddirectory.TagResourceInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *clouddirectory.UntagResourceInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.UntagResourceOutput, error)
	UpdateFacet(ctx context.Context, params *clouddirectory.UpdateFacetInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.UpdateFacetOutput, error)
	UpdateLinkAttributes(ctx context.Context, params *clouddirectory.UpdateLinkAttributesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.UpdateLinkAttributesOutput, error)
	UpdateObjectAttributes(ctx context.Context, params *clouddirectory.UpdateObjectAttributesInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.UpdateObjectAttributesOutput, error)
	UpdateSchema(ctx context.Context, params *clouddirectory.UpdateSchemaInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.UpdateSchemaOutput, error)
	UpdateTypedLinkFacet(ctx context.Context, params *clouddirectory.UpdateTypedLinkFacetInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.UpdateTypedLinkFacetOutput, error)
	UpgradeAppliedSchema(ctx context.Context, params *clouddirectory.UpgradeAppliedSchemaInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.UpgradeAppliedSchemaOutput, error)
	UpgradePublishedSchema(ctx context.Context, params *clouddirectory.UpgradePublishedSchemaInput, optFns ...func(*clouddirectory.Options)) (*clouddirectory.UpgradePublishedSchemaOutput, error)
}
