// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/codebuild"
)

// CodebuildClient ...
type CodebuildClient interface {
	Options() codebuild.Options
	BatchDeleteBuilds(ctx context.Context, params *codebuild.BatchDeleteBuildsInput, optFns ...func(*codebuild.Options)) (*codebuild.BatchDeleteBuildsOutput, error)
	BatchGetBuildBatches(ctx context.Context, params *codebuild.BatchGetBuildBatchesInput, optFns ...func(*codebuild.Options)) (*codebuild.BatchGetBuildBatchesOutput, error)
	BatchGetBuilds(ctx context.Context, params *codebuild.BatchGetBuildsInput, optFns ...func(*codebuild.Options)) (*codebuild.BatchGetBuildsOutput, error)
	BatchGetFleets(ctx context.Context, params *codebuild.BatchGetFleetsInput, optFns ...func(*codebuild.Options)) (*codebuild.BatchGetFleetsOutput, error)
	BatchGetProjects(ctx context.Context, params *codebuild.BatchGetProjectsInput, optFns ...func(*codebuild.Options)) (*codebuild.BatchGetProjectsOutput, error)
	BatchGetReportGroups(ctx context.Context, params *codebuild.BatchGetReportGroupsInput, optFns ...func(*codebuild.Options)) (*codebuild.BatchGetReportGroupsOutput, error)
	BatchGetReports(ctx context.Context, params *codebuild.BatchGetReportsInput, optFns ...func(*codebuild.Options)) (*codebuild.BatchGetReportsOutput, error)
	CreateFleet(ctx context.Context, params *codebuild.CreateFleetInput, optFns ...func(*codebuild.Options)) (*codebuild.CreateFleetOutput, error)
	CreateProject(ctx context.Context, params *codebuild.CreateProjectInput, optFns ...func(*codebuild.Options)) (*codebuild.CreateProjectOutput, error)
	CreateReportGroup(ctx context.Context, params *codebuild.CreateReportGroupInput, optFns ...func(*codebuild.Options)) (*codebuild.CreateReportGroupOutput, error)
	CreateWebhook(ctx context.Context, params *codebuild.CreateWebhookInput, optFns ...func(*codebuild.Options)) (*codebuild.CreateWebhookOutput, error)
	DeleteBuildBatch(ctx context.Context, params *codebuild.DeleteBuildBatchInput, optFns ...func(*codebuild.Options)) (*codebuild.DeleteBuildBatchOutput, error)
	DeleteFleet(ctx context.Context, params *codebuild.DeleteFleetInput, optFns ...func(*codebuild.Options)) (*codebuild.DeleteFleetOutput, error)
	DeleteProject(ctx context.Context, params *codebuild.DeleteProjectInput, optFns ...func(*codebuild.Options)) (*codebuild.DeleteProjectOutput, error)
	DeleteReport(ctx context.Context, params *codebuild.DeleteReportInput, optFns ...func(*codebuild.Options)) (*codebuild.DeleteReportOutput, error)
	DeleteReportGroup(ctx context.Context, params *codebuild.DeleteReportGroupInput, optFns ...func(*codebuild.Options)) (*codebuild.DeleteReportGroupOutput, error)
	DeleteResourcePolicy(ctx context.Context, params *codebuild.DeleteResourcePolicyInput, optFns ...func(*codebuild.Options)) (*codebuild.DeleteResourcePolicyOutput, error)
	DeleteSourceCredentials(ctx context.Context, params *codebuild.DeleteSourceCredentialsInput, optFns ...func(*codebuild.Options)) (*codebuild.DeleteSourceCredentialsOutput, error)
	DeleteWebhook(ctx context.Context, params *codebuild.DeleteWebhookInput, optFns ...func(*codebuild.Options)) (*codebuild.DeleteWebhookOutput, error)
	DescribeCodeCoverages(ctx context.Context, params *codebuild.DescribeCodeCoveragesInput, optFns ...func(*codebuild.Options)) (*codebuild.DescribeCodeCoveragesOutput, error)
	DescribeTestCases(ctx context.Context, params *codebuild.DescribeTestCasesInput, optFns ...func(*codebuild.Options)) (*codebuild.DescribeTestCasesOutput, error)
	GetReportGroupTrend(ctx context.Context, params *codebuild.GetReportGroupTrendInput, optFns ...func(*codebuild.Options)) (*codebuild.GetReportGroupTrendOutput, error)
	GetResourcePolicy(ctx context.Context, params *codebuild.GetResourcePolicyInput, optFns ...func(*codebuild.Options)) (*codebuild.GetResourcePolicyOutput, error)
	ImportSourceCredentials(ctx context.Context, params *codebuild.ImportSourceCredentialsInput, optFns ...func(*codebuild.Options)) (*codebuild.ImportSourceCredentialsOutput, error)
	InvalidateProjectCache(ctx context.Context, params *codebuild.InvalidateProjectCacheInput, optFns ...func(*codebuild.Options)) (*codebuild.InvalidateProjectCacheOutput, error)
	ListBuildBatches(ctx context.Context, params *codebuild.ListBuildBatchesInput, optFns ...func(*codebuild.Options)) (*codebuild.ListBuildBatchesOutput, error)
	ListBuildBatchesForProject(ctx context.Context, params *codebuild.ListBuildBatchesForProjectInput, optFns ...func(*codebuild.Options)) (*codebuild.ListBuildBatchesForProjectOutput, error)
	ListBuilds(ctx context.Context, params *codebuild.ListBuildsInput, optFns ...func(*codebuild.Options)) (*codebuild.ListBuildsOutput, error)
	ListBuildsForProject(ctx context.Context, params *codebuild.ListBuildsForProjectInput, optFns ...func(*codebuild.Options)) (*codebuild.ListBuildsForProjectOutput, error)
	ListCuratedEnvironmentImages(ctx context.Context, params *codebuild.ListCuratedEnvironmentImagesInput, optFns ...func(*codebuild.Options)) (*codebuild.ListCuratedEnvironmentImagesOutput, error)
	ListFleets(ctx context.Context, params *codebuild.ListFleetsInput, optFns ...func(*codebuild.Options)) (*codebuild.ListFleetsOutput, error)
	ListProjects(ctx context.Context, params *codebuild.ListProjectsInput, optFns ...func(*codebuild.Options)) (*codebuild.ListProjectsOutput, error)
	ListReportGroups(ctx context.Context, params *codebuild.ListReportGroupsInput, optFns ...func(*codebuild.Options)) (*codebuild.ListReportGroupsOutput, error)
	ListReports(ctx context.Context, params *codebuild.ListReportsInput, optFns ...func(*codebuild.Options)) (*codebuild.ListReportsOutput, error)
	ListReportsForReportGroup(ctx context.Context, params *codebuild.ListReportsForReportGroupInput, optFns ...func(*codebuild.Options)) (*codebuild.ListReportsForReportGroupOutput, error)
	ListSharedProjects(ctx context.Context, params *codebuild.ListSharedProjectsInput, optFns ...func(*codebuild.Options)) (*codebuild.ListSharedProjectsOutput, error)
	ListSharedReportGroups(ctx context.Context, params *codebuild.ListSharedReportGroupsInput, optFns ...func(*codebuild.Options)) (*codebuild.ListSharedReportGroupsOutput, error)
	ListSourceCredentials(ctx context.Context, params *codebuild.ListSourceCredentialsInput, optFns ...func(*codebuild.Options)) (*codebuild.ListSourceCredentialsOutput, error)
	PutResourcePolicy(ctx context.Context, params *codebuild.PutResourcePolicyInput, optFns ...func(*codebuild.Options)) (*codebuild.PutResourcePolicyOutput, error)
	RetryBuild(ctx context.Context, params *codebuild.RetryBuildInput, optFns ...func(*codebuild.Options)) (*codebuild.RetryBuildOutput, error)
	RetryBuildBatch(ctx context.Context, params *codebuild.RetryBuildBatchInput, optFns ...func(*codebuild.Options)) (*codebuild.RetryBuildBatchOutput, error)
	StartBuild(ctx context.Context, params *codebuild.StartBuildInput, optFns ...func(*codebuild.Options)) (*codebuild.StartBuildOutput, error)
	StartBuildBatch(ctx context.Context, params *codebuild.StartBuildBatchInput, optFns ...func(*codebuild.Options)) (*codebuild.StartBuildBatchOutput, error)
	StopBuild(ctx context.Context, params *codebuild.StopBuildInput, optFns ...func(*codebuild.Options)) (*codebuild.StopBuildOutput, error)
	StopBuildBatch(ctx context.Context, params *codebuild.StopBuildBatchInput, optFns ...func(*codebuild.Options)) (*codebuild.StopBuildBatchOutput, error)
	UpdateFleet(ctx context.Context, params *codebuild.UpdateFleetInput, optFns ...func(*codebuild.Options)) (*codebuild.UpdateFleetOutput, error)
	UpdateProject(ctx context.Context, params *codebuild.UpdateProjectInput, optFns ...func(*codebuild.Options)) (*codebuild.UpdateProjectOutput, error)
	UpdateProjectVisibility(ctx context.Context, params *codebuild.UpdateProjectVisibilityInput, optFns ...func(*codebuild.Options)) (*codebuild.UpdateProjectVisibilityOutput, error)
	UpdateReportGroup(ctx context.Context, params *codebuild.UpdateReportGroupInput, optFns ...func(*codebuild.Options)) (*codebuild.UpdateReportGroupOutput, error)
	UpdateWebhook(ctx context.Context, params *codebuild.UpdateWebhookInput, optFns ...func(*codebuild.Options)) (*codebuild.UpdateWebhookOutput, error)
}
