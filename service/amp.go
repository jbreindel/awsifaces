// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/amp"
)

// AmpClient ...
type AmpClient interface {
	Options() amp.Options
	CreateAlertManagerDefinition(ctx context.Context, params *amp.CreateAlertManagerDefinitionInput, optFns ...func(*amp.Options)) (*amp.CreateAlertManagerDefinitionOutput, error)
	CreateLoggingConfiguration(ctx context.Context, params *amp.CreateLoggingConfigurationInput, optFns ...func(*amp.Options)) (*amp.CreateLoggingConfigurationOutput, error)
	CreateRuleGroupsNamespace(ctx context.Context, params *amp.CreateRuleGroupsNamespaceInput, optFns ...func(*amp.Options)) (*amp.CreateRuleGroupsNamespaceOutput, error)
	CreateScraper(ctx context.Context, params *amp.CreateScraperInput, optFns ...func(*amp.Options)) (*amp.CreateScraperOutput, error)
	CreateWorkspace(ctx context.Context, params *amp.CreateWorkspaceInput, optFns ...func(*amp.Options)) (*amp.CreateWorkspaceOutput, error)
	DeleteAlertManagerDefinition(ctx context.Context, params *amp.DeleteAlertManagerDefinitionInput, optFns ...func(*amp.Options)) (*amp.DeleteAlertManagerDefinitionOutput, error)
	DeleteLoggingConfiguration(ctx context.Context, params *amp.DeleteLoggingConfigurationInput, optFns ...func(*amp.Options)) (*amp.DeleteLoggingConfigurationOutput, error)
	DeleteRuleGroupsNamespace(ctx context.Context, params *amp.DeleteRuleGroupsNamespaceInput, optFns ...func(*amp.Options)) (*amp.DeleteRuleGroupsNamespaceOutput, error)
	DeleteScraper(ctx context.Context, params *amp.DeleteScraperInput, optFns ...func(*amp.Options)) (*amp.DeleteScraperOutput, error)
	DeleteWorkspace(ctx context.Context, params *amp.DeleteWorkspaceInput, optFns ...func(*amp.Options)) (*amp.DeleteWorkspaceOutput, error)
	DescribeAlertManagerDefinition(ctx context.Context, params *amp.DescribeAlertManagerDefinitionInput, optFns ...func(*amp.Options)) (*amp.DescribeAlertManagerDefinitionOutput, error)
	DescribeLoggingConfiguration(ctx context.Context, params *amp.DescribeLoggingConfigurationInput, optFns ...func(*amp.Options)) (*amp.DescribeLoggingConfigurationOutput, error)
	DescribeRuleGroupsNamespace(ctx context.Context, params *amp.DescribeRuleGroupsNamespaceInput, optFns ...func(*amp.Options)) (*amp.DescribeRuleGroupsNamespaceOutput, error)
	DescribeScraper(ctx context.Context, params *amp.DescribeScraperInput, optFns ...func(*amp.Options)) (*amp.DescribeScraperOutput, error)
	DescribeWorkspace(ctx context.Context, params *amp.DescribeWorkspaceInput, optFns ...func(*amp.Options)) (*amp.DescribeWorkspaceOutput, error)
	GetDefaultScraperConfiguration(ctx context.Context, params *amp.GetDefaultScraperConfigurationInput, optFns ...func(*amp.Options)) (*amp.GetDefaultScraperConfigurationOutput, error)
	ListRuleGroupsNamespaces(ctx context.Context, params *amp.ListRuleGroupsNamespacesInput, optFns ...func(*amp.Options)) (*amp.ListRuleGroupsNamespacesOutput, error)
	ListScrapers(ctx context.Context, params *amp.ListScrapersInput, optFns ...func(*amp.Options)) (*amp.ListScrapersOutput, error)
	ListTagsForResource(ctx context.Context, params *amp.ListTagsForResourceInput, optFns ...func(*amp.Options)) (*amp.ListTagsForResourceOutput, error)
	ListWorkspaces(ctx context.Context, params *amp.ListWorkspacesInput, optFns ...func(*amp.Options)) (*amp.ListWorkspacesOutput, error)
	PutAlertManagerDefinition(ctx context.Context, params *amp.PutAlertManagerDefinitionInput, optFns ...func(*amp.Options)) (*amp.PutAlertManagerDefinitionOutput, error)
	PutRuleGroupsNamespace(ctx context.Context, params *amp.PutRuleGroupsNamespaceInput, optFns ...func(*amp.Options)) (*amp.PutRuleGroupsNamespaceOutput, error)
	TagResource(ctx context.Context, params *amp.TagResourceInput, optFns ...func(*amp.Options)) (*amp.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *amp.UntagResourceInput, optFns ...func(*amp.Options)) (*amp.UntagResourceOutput, error)
	UpdateLoggingConfiguration(ctx context.Context, params *amp.UpdateLoggingConfigurationInput, optFns ...func(*amp.Options)) (*amp.UpdateLoggingConfigurationOutput, error)
	UpdateWorkspaceAlias(ctx context.Context, params *amp.UpdateWorkspaceAliasInput, optFns ...func(*amp.Options)) (*amp.UpdateWorkspaceAliasOutput, error)
}
