// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/translate"
)

// TranslateClient ...
type TranslateClient interface {
	Options() translate.Options
	CreateParallelData(ctx context.Context, params *translate.CreateParallelDataInput, optFns ...func(*translate.Options)) (*translate.CreateParallelDataOutput, error)
	DeleteParallelData(ctx context.Context, params *translate.DeleteParallelDataInput, optFns ...func(*translate.Options)) (*translate.DeleteParallelDataOutput, error)
	DeleteTerminology(ctx context.Context, params *translate.DeleteTerminologyInput, optFns ...func(*translate.Options)) (*translate.DeleteTerminologyOutput, error)
	DescribeTextTranslationJob(ctx context.Context, params *translate.DescribeTextTranslationJobInput, optFns ...func(*translate.Options)) (*translate.DescribeTextTranslationJobOutput, error)
	GetParallelData(ctx context.Context, params *translate.GetParallelDataInput, optFns ...func(*translate.Options)) (*translate.GetParallelDataOutput, error)
	GetTerminology(ctx context.Context, params *translate.GetTerminologyInput, optFns ...func(*translate.Options)) (*translate.GetTerminologyOutput, error)
	ImportTerminology(ctx context.Context, params *translate.ImportTerminologyInput, optFns ...func(*translate.Options)) (*translate.ImportTerminologyOutput, error)
	ListLanguages(ctx context.Context, params *translate.ListLanguagesInput, optFns ...func(*translate.Options)) (*translate.ListLanguagesOutput, error)
	ListParallelData(ctx context.Context, params *translate.ListParallelDataInput, optFns ...func(*translate.Options)) (*translate.ListParallelDataOutput, error)
	ListTagsForResource(ctx context.Context, params *translate.ListTagsForResourceInput, optFns ...func(*translate.Options)) (*translate.ListTagsForResourceOutput, error)
	ListTerminologies(ctx context.Context, params *translate.ListTerminologiesInput, optFns ...func(*translate.Options)) (*translate.ListTerminologiesOutput, error)
	ListTextTranslationJobs(ctx context.Context, params *translate.ListTextTranslationJobsInput, optFns ...func(*translate.Options)) (*translate.ListTextTranslationJobsOutput, error)
	StartTextTranslationJob(ctx context.Context, params *translate.StartTextTranslationJobInput, optFns ...func(*translate.Options)) (*translate.StartTextTranslationJobOutput, error)
	StopTextTranslationJob(ctx context.Context, params *translate.StopTextTranslationJobInput, optFns ...func(*translate.Options)) (*translate.StopTextTranslationJobOutput, error)
	TagResource(ctx context.Context, params *translate.TagResourceInput, optFns ...func(*translate.Options)) (*translate.TagResourceOutput, error)
	TranslateDocument(ctx context.Context, params *translate.TranslateDocumentInput, optFns ...func(*translate.Options)) (*translate.TranslateDocumentOutput, error)
	TranslateText(ctx context.Context, params *translate.TranslateTextInput, optFns ...func(*translate.Options)) (*translate.TranslateTextOutput, error)
	UntagResource(ctx context.Context, params *translate.UntagResourceInput, optFns ...func(*translate.Options)) (*translate.UntagResourceOutput, error)
	UpdateParallelData(ctx context.Context, params *translate.UpdateParallelDataInput, optFns ...func(*translate.Options)) (*translate.UpdateParallelDataOutput, error)
}
