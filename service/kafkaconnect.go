// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/kafkaconnect"
)

// KafkaconnectClient ...
type KafkaconnectClient interface {
	Options() kafkaconnect.Options
	CreateConnector(ctx context.Context, params *kafkaconnect.CreateConnectorInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.CreateConnectorOutput, error)
	CreateCustomPlugin(ctx context.Context, params *kafkaconnect.CreateCustomPluginInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.CreateCustomPluginOutput, error)
	CreateWorkerConfiguration(ctx context.Context, params *kafkaconnect.CreateWorkerConfigurationInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.CreateWorkerConfigurationOutput, error)
	DeleteConnector(ctx context.Context, params *kafkaconnect.DeleteConnectorInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.DeleteConnectorOutput, error)
	DeleteCustomPlugin(ctx context.Context, params *kafkaconnect.DeleteCustomPluginInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.DeleteCustomPluginOutput, error)
	DeleteWorkerConfiguration(ctx context.Context, params *kafkaconnect.DeleteWorkerConfigurationInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.DeleteWorkerConfigurationOutput, error)
	DescribeConnector(ctx context.Context, params *kafkaconnect.DescribeConnectorInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.DescribeConnectorOutput, error)
	DescribeCustomPlugin(ctx context.Context, params *kafkaconnect.DescribeCustomPluginInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.DescribeCustomPluginOutput, error)
	DescribeWorkerConfiguration(ctx context.Context, params *kafkaconnect.DescribeWorkerConfigurationInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.DescribeWorkerConfigurationOutput, error)
	ListConnectors(ctx context.Context, params *kafkaconnect.ListConnectorsInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.ListConnectorsOutput, error)
	ListCustomPlugins(ctx context.Context, params *kafkaconnect.ListCustomPluginsInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.ListCustomPluginsOutput, error)
	ListTagsForResource(ctx context.Context, params *kafkaconnect.ListTagsForResourceInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.ListTagsForResourceOutput, error)
	ListWorkerConfigurations(ctx context.Context, params *kafkaconnect.ListWorkerConfigurationsInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.ListWorkerConfigurationsOutput, error)
	TagResource(ctx context.Context, params *kafkaconnect.TagResourceInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *kafkaconnect.UntagResourceInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.UntagResourceOutput, error)
	UpdateConnector(ctx context.Context, params *kafkaconnect.UpdateConnectorInput, optFns ...func(*kafkaconnect.Options)) (*kafkaconnect.UpdateConnectorOutput, error)
}
