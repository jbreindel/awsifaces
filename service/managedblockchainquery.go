// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/managedblockchainquery"
)

// ManagedblockchainqueryClient ...
type ManagedblockchainqueryClient interface {
	Options() managedblockchainquery.Options
	BatchGetTokenBalance(ctx context.Context, params *managedblockchainquery.BatchGetTokenBalanceInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.BatchGetTokenBalanceOutput, error)
	GetAssetContract(ctx context.Context, params *managedblockchainquery.GetAssetContractInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.GetAssetContractOutput, error)
	GetTokenBalance(ctx context.Context, params *managedblockchainquery.GetTokenBalanceInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.GetTokenBalanceOutput, error)
	GetTransaction(ctx context.Context, params *managedblockchainquery.GetTransactionInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.GetTransactionOutput, error)
	ListAssetContracts(ctx context.Context, params *managedblockchainquery.ListAssetContractsInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.ListAssetContractsOutput, error)
	ListFilteredTransactionEvents(ctx context.Context, params *managedblockchainquery.ListFilteredTransactionEventsInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.ListFilteredTransactionEventsOutput, error)
	ListTokenBalances(ctx context.Context, params *managedblockchainquery.ListTokenBalancesInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.ListTokenBalancesOutput, error)
	ListTransactionEvents(ctx context.Context, params *managedblockchainquery.ListTransactionEventsInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.ListTransactionEventsOutput, error)
	ListTransactions(ctx context.Context, params *managedblockchainquery.ListTransactionsInput, optFns ...func(*managedblockchainquery.Options)) (*managedblockchainquery.ListTransactionsOutput, error)
}
