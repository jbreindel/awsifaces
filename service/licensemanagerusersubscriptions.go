// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/licensemanagerusersubscriptions"
)

// LicensemanagerusersubscriptionsClient ...
type LicensemanagerusersubscriptionsClient interface {
	Options() licensemanagerusersubscriptions.Options
	AssociateUser(ctx context.Context, params *licensemanagerusersubscriptions.AssociateUserInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.AssociateUserOutput, error)
	DeregisterIdentityProvider(ctx context.Context, params *licensemanagerusersubscriptions.DeregisterIdentityProviderInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.DeregisterIdentityProviderOutput, error)
	DisassociateUser(ctx context.Context, params *licensemanagerusersubscriptions.DisassociateUserInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.DisassociateUserOutput, error)
	ListIdentityProviders(ctx context.Context, params *licensemanagerusersubscriptions.ListIdentityProvidersInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.ListIdentityProvidersOutput, error)
	ListInstances(ctx context.Context, params *licensemanagerusersubscriptions.ListInstancesInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.ListInstancesOutput, error)
	ListProductSubscriptions(ctx context.Context, params *licensemanagerusersubscriptions.ListProductSubscriptionsInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.ListProductSubscriptionsOutput, error)
	ListUserAssociations(ctx context.Context, params *licensemanagerusersubscriptions.ListUserAssociationsInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.ListUserAssociationsOutput, error)
	RegisterIdentityProvider(ctx context.Context, params *licensemanagerusersubscriptions.RegisterIdentityProviderInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.RegisterIdentityProviderOutput, error)
	StartProductSubscription(ctx context.Context, params *licensemanagerusersubscriptions.StartProductSubscriptionInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.StartProductSubscriptionOutput, error)
	StopProductSubscription(ctx context.Context, params *licensemanagerusersubscriptions.StopProductSubscriptionInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.StopProductSubscriptionOutput, error)
	UpdateIdentityProviderSettings(ctx context.Context, params *licensemanagerusersubscriptions.UpdateIdentityProviderSettingsInput, optFns ...func(*licensemanagerusersubscriptions.Options)) (*licensemanagerusersubscriptions.UpdateIdentityProviderSettingsOutput, error)
}
