// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/gamelift"
)

// GameliftClient ...
type GameliftClient interface {
	Options() gamelift.Options
	AcceptMatch(ctx context.Context, params *gamelift.AcceptMatchInput, optFns ...func(*gamelift.Options)) (*gamelift.AcceptMatchOutput, error)
	ClaimGameServer(ctx context.Context, params *gamelift.ClaimGameServerInput, optFns ...func(*gamelift.Options)) (*gamelift.ClaimGameServerOutput, error)
	CreateAlias(ctx context.Context, params *gamelift.CreateAliasInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateAliasOutput, error)
	CreateBuild(ctx context.Context, params *gamelift.CreateBuildInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateBuildOutput, error)
	CreateFleet(ctx context.Context, params *gamelift.CreateFleetInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateFleetOutput, error)
	CreateFleetLocations(ctx context.Context, params *gamelift.CreateFleetLocationsInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateFleetLocationsOutput, error)
	CreateGameServerGroup(ctx context.Context, params *gamelift.CreateGameServerGroupInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateGameServerGroupOutput, error)
	CreateGameSession(ctx context.Context, params *gamelift.CreateGameSessionInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateGameSessionOutput, error)
	CreateGameSessionQueue(ctx context.Context, params *gamelift.CreateGameSessionQueueInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateGameSessionQueueOutput, error)
	CreateLocation(ctx context.Context, params *gamelift.CreateLocationInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateLocationOutput, error)
	CreateMatchmakingConfiguration(ctx context.Context, params *gamelift.CreateMatchmakingConfigurationInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateMatchmakingConfigurationOutput, error)
	CreateMatchmakingRuleSet(ctx context.Context, params *gamelift.CreateMatchmakingRuleSetInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateMatchmakingRuleSetOutput, error)
	CreatePlayerSession(ctx context.Context, params *gamelift.CreatePlayerSessionInput, optFns ...func(*gamelift.Options)) (*gamelift.CreatePlayerSessionOutput, error)
	CreatePlayerSessions(ctx context.Context, params *gamelift.CreatePlayerSessionsInput, optFns ...func(*gamelift.Options)) (*gamelift.CreatePlayerSessionsOutput, error)
	CreateScript(ctx context.Context, params *gamelift.CreateScriptInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateScriptOutput, error)
	CreateVpcPeeringAuthorization(ctx context.Context, params *gamelift.CreateVpcPeeringAuthorizationInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateVpcPeeringAuthorizationOutput, error)
	CreateVpcPeeringConnection(ctx context.Context, params *gamelift.CreateVpcPeeringConnectionInput, optFns ...func(*gamelift.Options)) (*gamelift.CreateVpcPeeringConnectionOutput, error)
	DeleteAlias(ctx context.Context, params *gamelift.DeleteAliasInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteAliasOutput, error)
	DeleteBuild(ctx context.Context, params *gamelift.DeleteBuildInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteBuildOutput, error)
	DeleteFleet(ctx context.Context, params *gamelift.DeleteFleetInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteFleetOutput, error)
	DeleteFleetLocations(ctx context.Context, params *gamelift.DeleteFleetLocationsInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteFleetLocationsOutput, error)
	DeleteGameServerGroup(ctx context.Context, params *gamelift.DeleteGameServerGroupInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteGameServerGroupOutput, error)
	DeleteGameSessionQueue(ctx context.Context, params *gamelift.DeleteGameSessionQueueInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteGameSessionQueueOutput, error)
	DeleteLocation(ctx context.Context, params *gamelift.DeleteLocationInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteLocationOutput, error)
	DeleteMatchmakingConfiguration(ctx context.Context, params *gamelift.DeleteMatchmakingConfigurationInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteMatchmakingConfigurationOutput, error)
	DeleteMatchmakingRuleSet(ctx context.Context, params *gamelift.DeleteMatchmakingRuleSetInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteMatchmakingRuleSetOutput, error)
	DeleteScalingPolicy(ctx context.Context, params *gamelift.DeleteScalingPolicyInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteScalingPolicyOutput, error)
	DeleteScript(ctx context.Context, params *gamelift.DeleteScriptInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteScriptOutput, error)
	DeleteVpcPeeringAuthorization(ctx context.Context, params *gamelift.DeleteVpcPeeringAuthorizationInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteVpcPeeringAuthorizationOutput, error)
	DeleteVpcPeeringConnection(ctx context.Context, params *gamelift.DeleteVpcPeeringConnectionInput, optFns ...func(*gamelift.Options)) (*gamelift.DeleteVpcPeeringConnectionOutput, error)
	DeregisterCompute(ctx context.Context, params *gamelift.DeregisterComputeInput, optFns ...func(*gamelift.Options)) (*gamelift.DeregisterComputeOutput, error)
	DeregisterGameServer(ctx context.Context, params *gamelift.DeregisterGameServerInput, optFns ...func(*gamelift.Options)) (*gamelift.DeregisterGameServerOutput, error)
	DescribeAlias(ctx context.Context, params *gamelift.DescribeAliasInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeAliasOutput, error)
	DescribeBuild(ctx context.Context, params *gamelift.DescribeBuildInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeBuildOutput, error)
	DescribeCompute(ctx context.Context, params *gamelift.DescribeComputeInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeComputeOutput, error)
	DescribeEC2InstanceLimits(ctx context.Context, params *gamelift.DescribeEC2InstanceLimitsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeEC2InstanceLimitsOutput, error)
	DescribeFleetAttributes(ctx context.Context, params *gamelift.DescribeFleetAttributesInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeFleetAttributesOutput, error)
	DescribeFleetCapacity(ctx context.Context, params *gamelift.DescribeFleetCapacityInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeFleetCapacityOutput, error)
	DescribeFleetEvents(ctx context.Context, params *gamelift.DescribeFleetEventsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeFleetEventsOutput, error)
	DescribeFleetLocationAttributes(ctx context.Context, params *gamelift.DescribeFleetLocationAttributesInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeFleetLocationAttributesOutput, error)
	DescribeFleetLocationCapacity(ctx context.Context, params *gamelift.DescribeFleetLocationCapacityInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeFleetLocationCapacityOutput, error)
	DescribeFleetLocationUtilization(ctx context.Context, params *gamelift.DescribeFleetLocationUtilizationInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeFleetLocationUtilizationOutput, error)
	DescribeFleetPortSettings(ctx context.Context, params *gamelift.DescribeFleetPortSettingsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeFleetPortSettingsOutput, error)
	DescribeFleetUtilization(ctx context.Context, params *gamelift.DescribeFleetUtilizationInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeFleetUtilizationOutput, error)
	DescribeGameServer(ctx context.Context, params *gamelift.DescribeGameServerInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeGameServerOutput, error)
	DescribeGameServerGroup(ctx context.Context, params *gamelift.DescribeGameServerGroupInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeGameServerGroupOutput, error)
	DescribeGameServerInstances(ctx context.Context, params *gamelift.DescribeGameServerInstancesInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeGameServerInstancesOutput, error)
	DescribeGameSessionDetails(ctx context.Context, params *gamelift.DescribeGameSessionDetailsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeGameSessionDetailsOutput, error)
	DescribeGameSessionPlacement(ctx context.Context, params *gamelift.DescribeGameSessionPlacementInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeGameSessionPlacementOutput, error)
	DescribeGameSessionQueues(ctx context.Context, params *gamelift.DescribeGameSessionQueuesInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeGameSessionQueuesOutput, error)
	DescribeGameSessions(ctx context.Context, params *gamelift.DescribeGameSessionsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeGameSessionsOutput, error)
	DescribeInstances(ctx context.Context, params *gamelift.DescribeInstancesInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeInstancesOutput, error)
	DescribeMatchmaking(ctx context.Context, params *gamelift.DescribeMatchmakingInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeMatchmakingOutput, error)
	DescribeMatchmakingConfigurations(ctx context.Context, params *gamelift.DescribeMatchmakingConfigurationsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeMatchmakingConfigurationsOutput, error)
	DescribeMatchmakingRuleSets(ctx context.Context, params *gamelift.DescribeMatchmakingRuleSetsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeMatchmakingRuleSetsOutput, error)
	DescribePlayerSessions(ctx context.Context, params *gamelift.DescribePlayerSessionsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribePlayerSessionsOutput, error)
	DescribeRuntimeConfiguration(ctx context.Context, params *gamelift.DescribeRuntimeConfigurationInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeRuntimeConfigurationOutput, error)
	DescribeScalingPolicies(ctx context.Context, params *gamelift.DescribeScalingPoliciesInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeScalingPoliciesOutput, error)
	DescribeScript(ctx context.Context, params *gamelift.DescribeScriptInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeScriptOutput, error)
	DescribeVpcPeeringAuthorizations(ctx context.Context, params *gamelift.DescribeVpcPeeringAuthorizationsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeVpcPeeringAuthorizationsOutput, error)
	DescribeVpcPeeringConnections(ctx context.Context, params *gamelift.DescribeVpcPeeringConnectionsInput, optFns ...func(*gamelift.Options)) (*gamelift.DescribeVpcPeeringConnectionsOutput, error)
	GetComputeAccess(ctx context.Context, params *gamelift.GetComputeAccessInput, optFns ...func(*gamelift.Options)) (*gamelift.GetComputeAccessOutput, error)
	GetComputeAuthToken(ctx context.Context, params *gamelift.GetComputeAuthTokenInput, optFns ...func(*gamelift.Options)) (*gamelift.GetComputeAuthTokenOutput, error)
	GetGameSessionLogUrl(ctx context.Context, params *gamelift.GetGameSessionLogUrlInput, optFns ...func(*gamelift.Options)) (*gamelift.GetGameSessionLogUrlOutput, error)
	GetInstanceAccess(ctx context.Context, params *gamelift.GetInstanceAccessInput, optFns ...func(*gamelift.Options)) (*gamelift.GetInstanceAccessOutput, error)
	ListAliases(ctx context.Context, params *gamelift.ListAliasesInput, optFns ...func(*gamelift.Options)) (*gamelift.ListAliasesOutput, error)
	ListBuilds(ctx context.Context, params *gamelift.ListBuildsInput, optFns ...func(*gamelift.Options)) (*gamelift.ListBuildsOutput, error)
	ListCompute(ctx context.Context, params *gamelift.ListComputeInput, optFns ...func(*gamelift.Options)) (*gamelift.ListComputeOutput, error)
	ListFleets(ctx context.Context, params *gamelift.ListFleetsInput, optFns ...func(*gamelift.Options)) (*gamelift.ListFleetsOutput, error)
	ListGameServerGroups(ctx context.Context, params *gamelift.ListGameServerGroupsInput, optFns ...func(*gamelift.Options)) (*gamelift.ListGameServerGroupsOutput, error)
	ListGameServers(ctx context.Context, params *gamelift.ListGameServersInput, optFns ...func(*gamelift.Options)) (*gamelift.ListGameServersOutput, error)
	ListLocations(ctx context.Context, params *gamelift.ListLocationsInput, optFns ...func(*gamelift.Options)) (*gamelift.ListLocationsOutput, error)
	ListScripts(ctx context.Context, params *gamelift.ListScriptsInput, optFns ...func(*gamelift.Options)) (*gamelift.ListScriptsOutput, error)
	ListTagsForResource(ctx context.Context, params *gamelift.ListTagsForResourceInput, optFns ...func(*gamelift.Options)) (*gamelift.ListTagsForResourceOutput, error)
	PutScalingPolicy(ctx context.Context, params *gamelift.PutScalingPolicyInput, optFns ...func(*gamelift.Options)) (*gamelift.PutScalingPolicyOutput, error)
	RegisterCompute(ctx context.Context, params *gamelift.RegisterComputeInput, optFns ...func(*gamelift.Options)) (*gamelift.RegisterComputeOutput, error)
	RegisterGameServer(ctx context.Context, params *gamelift.RegisterGameServerInput, optFns ...func(*gamelift.Options)) (*gamelift.RegisterGameServerOutput, error)
	RequestUploadCredentials(ctx context.Context, params *gamelift.RequestUploadCredentialsInput, optFns ...func(*gamelift.Options)) (*gamelift.RequestUploadCredentialsOutput, error)
	ResolveAlias(ctx context.Context, params *gamelift.ResolveAliasInput, optFns ...func(*gamelift.Options)) (*gamelift.ResolveAliasOutput, error)
	ResumeGameServerGroup(ctx context.Context, params *gamelift.ResumeGameServerGroupInput, optFns ...func(*gamelift.Options)) (*gamelift.ResumeGameServerGroupOutput, error)
	SearchGameSessions(ctx context.Context, params *gamelift.SearchGameSessionsInput, optFns ...func(*gamelift.Options)) (*gamelift.SearchGameSessionsOutput, error)
	StartFleetActions(ctx context.Context, params *gamelift.StartFleetActionsInput, optFns ...func(*gamelift.Options)) (*gamelift.StartFleetActionsOutput, error)
	StartGameSessionPlacement(ctx context.Context, params *gamelift.StartGameSessionPlacementInput, optFns ...func(*gamelift.Options)) (*gamelift.StartGameSessionPlacementOutput, error)
	StartMatchBackfill(ctx context.Context, params *gamelift.StartMatchBackfillInput, optFns ...func(*gamelift.Options)) (*gamelift.StartMatchBackfillOutput, error)
	StartMatchmaking(ctx context.Context, params *gamelift.StartMatchmakingInput, optFns ...func(*gamelift.Options)) (*gamelift.StartMatchmakingOutput, error)
	StopFleetActions(ctx context.Context, params *gamelift.StopFleetActionsInput, optFns ...func(*gamelift.Options)) (*gamelift.StopFleetActionsOutput, error)
	StopGameSessionPlacement(ctx context.Context, params *gamelift.StopGameSessionPlacementInput, optFns ...func(*gamelift.Options)) (*gamelift.StopGameSessionPlacementOutput, error)
	StopMatchmaking(ctx context.Context, params *gamelift.StopMatchmakingInput, optFns ...func(*gamelift.Options)) (*gamelift.StopMatchmakingOutput, error)
	SuspendGameServerGroup(ctx context.Context, params *gamelift.SuspendGameServerGroupInput, optFns ...func(*gamelift.Options)) (*gamelift.SuspendGameServerGroupOutput, error)
	TagResource(ctx context.Context, params *gamelift.TagResourceInput, optFns ...func(*gamelift.Options)) (*gamelift.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *gamelift.UntagResourceInput, optFns ...func(*gamelift.Options)) (*gamelift.UntagResourceOutput, error)
	UpdateAlias(ctx context.Context, params *gamelift.UpdateAliasInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateAliasOutput, error)
	UpdateBuild(ctx context.Context, params *gamelift.UpdateBuildInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateBuildOutput, error)
	UpdateFleetAttributes(ctx context.Context, params *gamelift.UpdateFleetAttributesInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateFleetAttributesOutput, error)
	UpdateFleetCapacity(ctx context.Context, params *gamelift.UpdateFleetCapacityInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateFleetCapacityOutput, error)
	UpdateFleetPortSettings(ctx context.Context, params *gamelift.UpdateFleetPortSettingsInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateFleetPortSettingsOutput, error)
	UpdateGameServer(ctx context.Context, params *gamelift.UpdateGameServerInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateGameServerOutput, error)
	UpdateGameServerGroup(ctx context.Context, params *gamelift.UpdateGameServerGroupInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateGameServerGroupOutput, error)
	UpdateGameSession(ctx context.Context, params *gamelift.UpdateGameSessionInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateGameSessionOutput, error)
	UpdateGameSessionQueue(ctx context.Context, params *gamelift.UpdateGameSessionQueueInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateGameSessionQueueOutput, error)
	UpdateMatchmakingConfiguration(ctx context.Context, params *gamelift.UpdateMatchmakingConfigurationInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateMatchmakingConfigurationOutput, error)
	UpdateRuntimeConfiguration(ctx context.Context, params *gamelift.UpdateRuntimeConfigurationInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateRuntimeConfigurationOutput, error)
	UpdateScript(ctx context.Context, params *gamelift.UpdateScriptInput, optFns ...func(*gamelift.Options)) (*gamelift.UpdateScriptOutput, error)
	ValidateMatchmakingRuleSet(ctx context.Context, params *gamelift.ValidateMatchmakingRuleSetInput, optFns ...func(*gamelift.Options)) (*gamelift.ValidateMatchmakingRuleSetOutput, error)
}
