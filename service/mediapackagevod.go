// Code generated by ifacemaker; DO NOT EDIT.

package service

import (
	"context"

	"github.com/aws/aws-sdk-go-v2/service/mediapackagevod"
)

// MediapackagevodClient ...
type MediapackagevodClient interface {
	Options() mediapackagevod.Options
	ConfigureLogs(ctx context.Context, params *mediapackagevod.ConfigureLogsInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.ConfigureLogsOutput, error)
	CreateAsset(ctx context.Context, params *mediapackagevod.CreateAssetInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.CreateAssetOutput, error)
	CreatePackagingConfiguration(ctx context.Context, params *mediapackagevod.CreatePackagingConfigurationInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.CreatePackagingConfigurationOutput, error)
	CreatePackagingGroup(ctx context.Context, params *mediapackagevod.CreatePackagingGroupInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.CreatePackagingGroupOutput, error)
	DeleteAsset(ctx context.Context, params *mediapackagevod.DeleteAssetInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.DeleteAssetOutput, error)
	DeletePackagingConfiguration(ctx context.Context, params *mediapackagevod.DeletePackagingConfigurationInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.DeletePackagingConfigurationOutput, error)
	DeletePackagingGroup(ctx context.Context, params *mediapackagevod.DeletePackagingGroupInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.DeletePackagingGroupOutput, error)
	DescribeAsset(ctx context.Context, params *mediapackagevod.DescribeAssetInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.DescribeAssetOutput, error)
	DescribePackagingConfiguration(ctx context.Context, params *mediapackagevod.DescribePackagingConfigurationInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.DescribePackagingConfigurationOutput, error)
	DescribePackagingGroup(ctx context.Context, params *mediapackagevod.DescribePackagingGroupInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.DescribePackagingGroupOutput, error)
	ListAssets(ctx context.Context, params *mediapackagevod.ListAssetsInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.ListAssetsOutput, error)
	ListPackagingConfigurations(ctx context.Context, params *mediapackagevod.ListPackagingConfigurationsInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.ListPackagingConfigurationsOutput, error)
	ListPackagingGroups(ctx context.Context, params *mediapackagevod.ListPackagingGroupsInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.ListPackagingGroupsOutput, error)
	ListTagsForResource(ctx context.Context, params *mediapackagevod.ListTagsForResourceInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.ListTagsForResourceOutput, error)
	TagResource(ctx context.Context, params *mediapackagevod.TagResourceInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.TagResourceOutput, error)
	UntagResource(ctx context.Context, params *mediapackagevod.UntagResourceInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.UntagResourceOutput, error)
	UpdatePackagingGroup(ctx context.Context, params *mediapackagevod.UpdatePackagingGroupInput, optFns ...func(*mediapackagevod.Options)) (*mediapackagevod.UpdatePackagingGroupOutput, error)
}
