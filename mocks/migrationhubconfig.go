// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	context "context"

	migrationhubconfig "github.com/aws/aws-sdk-go-v2/service/migrationhubconfig"
	mock "github.com/stretchr/testify/mock"
)

// MigrationhubconfigClient is an autogenerated mock type for the MigrationhubconfigClient type
type MigrationhubconfigClient struct {
	mock.Mock
}

// CreateHomeRegionControl provides a mock function with given fields: ctx, params, optFns
func (_m *MigrationhubconfigClient) CreateHomeRegionControl(ctx context.Context, params *migrationhubconfig.CreateHomeRegionControlInput, optFns ...func(*migrationhubconfig.Options)) (*migrationhubconfig.CreateHomeRegionControlOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for CreateHomeRegionControl")
	}

	var r0 *migrationhubconfig.CreateHomeRegionControlOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *migrationhubconfig.CreateHomeRegionControlInput, ...func(*migrationhubconfig.Options)) (*migrationhubconfig.CreateHomeRegionControlOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *migrationhubconfig.CreateHomeRegionControlInput, ...func(*migrationhubconfig.Options)) *migrationhubconfig.CreateHomeRegionControlOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*migrationhubconfig.CreateHomeRegionControlOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *migrationhubconfig.CreateHomeRegionControlInput, ...func(*migrationhubconfig.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteHomeRegionControl provides a mock function with given fields: ctx, params, optFns
func (_m *MigrationhubconfigClient) DeleteHomeRegionControl(ctx context.Context, params *migrationhubconfig.DeleteHomeRegionControlInput, optFns ...func(*migrationhubconfig.Options)) (*migrationhubconfig.DeleteHomeRegionControlOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DeleteHomeRegionControl")
	}

	var r0 *migrationhubconfig.DeleteHomeRegionControlOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *migrationhubconfig.DeleteHomeRegionControlInput, ...func(*migrationhubconfig.Options)) (*migrationhubconfig.DeleteHomeRegionControlOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *migrationhubconfig.DeleteHomeRegionControlInput, ...func(*migrationhubconfig.Options)) *migrationhubconfig.DeleteHomeRegionControlOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*migrationhubconfig.DeleteHomeRegionControlOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *migrationhubconfig.DeleteHomeRegionControlInput, ...func(*migrationhubconfig.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DescribeHomeRegionControls provides a mock function with given fields: ctx, params, optFns
func (_m *MigrationhubconfigClient) DescribeHomeRegionControls(ctx context.Context, params *migrationhubconfig.DescribeHomeRegionControlsInput, optFns ...func(*migrationhubconfig.Options)) (*migrationhubconfig.DescribeHomeRegionControlsOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for DescribeHomeRegionControls")
	}

	var r0 *migrationhubconfig.DescribeHomeRegionControlsOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *migrationhubconfig.DescribeHomeRegionControlsInput, ...func(*migrationhubconfig.Options)) (*migrationhubconfig.DescribeHomeRegionControlsOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *migrationhubconfig.DescribeHomeRegionControlsInput, ...func(*migrationhubconfig.Options)) *migrationhubconfig.DescribeHomeRegionControlsOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*migrationhubconfig.DescribeHomeRegionControlsOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *migrationhubconfig.DescribeHomeRegionControlsInput, ...func(*migrationhubconfig.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetHomeRegion provides a mock function with given fields: ctx, params, optFns
func (_m *MigrationhubconfigClient) GetHomeRegion(ctx context.Context, params *migrationhubconfig.GetHomeRegionInput, optFns ...func(*migrationhubconfig.Options)) (*migrationhubconfig.GetHomeRegionOutput, error) {
	_va := make([]interface{}, len(optFns))
	for _i := range optFns {
		_va[_i] = optFns[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, params)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	if len(ret) == 0 {
		panic("no return value specified for GetHomeRegion")
	}

	var r0 *migrationhubconfig.GetHomeRegionOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *migrationhubconfig.GetHomeRegionInput, ...func(*migrationhubconfig.Options)) (*migrationhubconfig.GetHomeRegionOutput, error)); ok {
		return rf(ctx, params, optFns...)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *migrationhubconfig.GetHomeRegionInput, ...func(*migrationhubconfig.Options)) *migrationhubconfig.GetHomeRegionOutput); ok {
		r0 = rf(ctx, params, optFns...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*migrationhubconfig.GetHomeRegionOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *migrationhubconfig.GetHomeRegionInput, ...func(*migrationhubconfig.Options)) error); ok {
		r1 = rf(ctx, params, optFns...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Options provides a mock function with given fields:
func (_m *MigrationhubconfigClient) Options() migrationhubconfig.Options {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Options")
	}

	var r0 migrationhubconfig.Options
	if rf, ok := ret.Get(0).(func() migrationhubconfig.Options); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(migrationhubconfig.Options)
	}

	return r0
}

// NewMigrationhubconfigClient creates a new instance of MigrationhubconfigClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMigrationhubconfigClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MigrationhubconfigClient {
	mock := &MigrationhubconfigClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
